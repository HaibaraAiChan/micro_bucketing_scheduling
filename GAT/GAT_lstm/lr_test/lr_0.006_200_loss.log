main start at this time 1695408980.1444902
  NumNodes: 2708
  NumEdges: 10556
  NumFeats: 1433
  NumClasses: 7
  NumTrainingSamples: 140
  NumValidationSamples: 500
  NumTestSamples: 1000
Done loading data from cached files.
success----------------------------------------
140
500
2068
# Nodes: 2708
# Edges: 10556
# Train: 140
# Val: 500
# Test: 2068
# Classes: 7

in feats:  1433
loading full batch data spends  0.003075838088989258
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.457069396972656e-05
step  0
else: feat size  torch.Size([1342, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 105, 4: 109, 5: 83, 6: 58, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f04403b6278>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403b62b0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403b66d8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403b6940>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403b6ba8>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403b6e10>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bc50b8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bc5320>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bc5588>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bc57f0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bc8048>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bc8080>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bc84e0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bc8748>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bc89b0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bc8c18>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bc8e80>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bca128>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bca390>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bca5f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bca860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcaac8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcad30>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcaf98>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc240>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.552734375 GB
    Memory Allocated: 0.02727031707763672  GigaBytes
Max Memory Allocated: 0.027710914611816406  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.552734375 GB
    Memory Allocated: 0.02727508544921875  GigaBytes
Max Memory Allocated: 0.027710914611816406  GigaBytes

pure train time  0.5107071399688721
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.5625 GB
    Memory Allocated: 0.009155750274658203  GigaBytes
Max Memory Allocated: 0.027710914611816406  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9514586925506592
loading full batch data spends  0.004580020904541016
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.866455078125e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 98, 3: 102, 4: 108, 5: 86, 6: 59, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bccc50>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bccda0>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bd20b8>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bd2320>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bd2588>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403b6e10>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403b6be0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bc5320>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403e1710>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bca860>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bd28d0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bd2908>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bd2d68>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bd2fd0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcf278>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcf4e0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcf748>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcf9b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcfc18>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcfe80>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7128>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7390>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be75f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7ac8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905416488647461  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905893325805664  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.11918950080871582
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009288787841796875  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9476360082626343
loading full batch data spends  0.0029985904693603516
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.3392181396484375e-05
step  0
else: feat size  torch.Size([1347, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 109, 5: 85, 6: 57, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be24e0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be2518>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be2940>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be2ba8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be2e10>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf50b8>
func(nbatch).neighbor  torch.Size([57, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf5320>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf5588>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf57f0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf5a58>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bee198>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bd2940>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bd2fd0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7860>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bc50f0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be2550>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf5f98>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bee198>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bee390>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bee5f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bee860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beeac8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beed30>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beef98>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beb240>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028745651245117188  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02875041961669922  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.11586475372314453
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009182453155517578  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9500890970230103
loading full batch data spends  0.004010677337646484
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.008148193359375e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 111, 5: 83, 6: 59, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bebda0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bebcc0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf80f0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf8358>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf85c0>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf8828>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf8a90>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf8cf8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf8f60>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfa208>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfaa20>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfaa58>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfaeb8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfc160>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfc3c8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfc630>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfc898>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfcb00>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfcd68>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bee898>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beed30>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bebb00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf8a90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfaac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfce80>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028865814208984375  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028870582580566406  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.11595916748046875
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009246349334716797  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9481282234191895
loading full batch data spends  0.003996133804321289
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.866455078125e-05
step  0
else: feat size  torch.Size([1348, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 105, 4: 111, 5: 82, 6: 59, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf74a8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf74e0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf7908>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf7b70>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf7dd8>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bed080>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bed2e8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bed550>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bed7b8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beda20>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6278>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf62b0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6710>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6978>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6be0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e48>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bef0f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bef358>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bef5c0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bef828>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412befa90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412befcf8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beff60>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be9208>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be9470>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02881908416748047  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0288238525390625  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.1242523193359375
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009187698364257812  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.946781873703003
loading full batch data spends  0.005822420120239258
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   8.273124694824219e-05
step  0
else: feat size  torch.Size([1366, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 103, 4: 107, 5: 85, 6: 60, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bed550>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beddd8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beb240>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be9550>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be96a0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be9a58>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be9be0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be9e10>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b0f0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b358>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ba58>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ba90>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037bef0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0198>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0400>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0668>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf08d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0b38>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0da0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bea048>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bea2b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bea518>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bea780>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bea9e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beac50>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02897787094116211  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02898263931274414  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.12250733375549316
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00928354263305664  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9466155767440796
loading full batch data spends  0.004103899002075195
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.173683166503906e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 104, 4: 111, 5: 85, 6: 59, 7: 33, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d6a0>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d6d8>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037db00>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037dd68>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf01d0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0668>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf8d68>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be9e48>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ba58>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037de80>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f04403793c8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379400>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379860>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379ac8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379d30>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379f98>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377240>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403774a8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377710>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377978>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377be0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377e48>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e0f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e5c0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904653549194336  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905130386352539  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.12156391143798828
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009294509887695312  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.946990966796875
loading full batch data spends  0.003996849060058594
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.435943603515625e-05
step  0
else: feat size  torch.Size([1366, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 105, 4: 107, 5: 86, 6: 58, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf5860>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf58d0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c3c8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c630>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0f0>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5f8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c048>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c080>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c438>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4a8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0438>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0668>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0438>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be9e80>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379438>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403e17b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379400>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379f98>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ba58>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379198>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379fd0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403774e0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379b00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379fd0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028983116149902344  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028987884521484375  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.12454414367675781
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00928354263305664  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9443734884262085
loading full batch data spends  0.0056438446044921875
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.626678466796875e-05
step  0
else: feat size  torch.Size([1349, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 108, 5: 85, 6: 60, 7: 34, 8: 21, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9b0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea58>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaf98>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e860>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ebe0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bead30>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ecc0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beacc0>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bead68>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c8d0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4e0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c048>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9b0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca20>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c630>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c470>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfcfd0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf8d68>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377978>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379d68>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfce10>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfcfd0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02893972396850586  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02894449234008789  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.12282061576843262
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009294509887695312  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9407448768615723
loading full batch data spends  0.004179954528808594
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.555152893066406e-05
step  0
else: feat size  torch.Size([1361, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 108, 5: 85, 6: 57, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eba8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eb00>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e828>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea20>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e630>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9e8>
func(nbatch).neighbor  torch.Size([57, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e470>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e128>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e588>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e358>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ebe0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e5c0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e7f0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea58>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb70>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c358>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c908>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cba8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c470>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028944969177246094  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028949737548828125  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.12336301803588867
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009256839752197266  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.942839503288269
loading full batch data spends  0.005383491516113281
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.200241088867188e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 105, 4: 106, 5: 85, 6: 58, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6748>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf69b0>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6be0>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6278>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e80>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c358>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5f8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6d8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c978>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb70>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0b8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c3c8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c400>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cba8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c080>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c048>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb38>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c278>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cbe0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5c0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028942108154296875  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028946876525878906  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.12411880493164062
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009294509887695312  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9395086765289307
loading full batch data spends  0.004339694976806641
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.340576171875e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 103, 4: 107, 5: 85, 6: 61, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc50>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bea9b0>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0438>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfa7f0>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc668>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beb240>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6be0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412befcf8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6278>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377e48>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379ac8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379f98>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379400>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403794a8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379fd0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403793c8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c588>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c748>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c978>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c940>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5f8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c630>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02898550033569336  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02899026870727539  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.1213219165802002
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009241104125976562  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9421031475067139
loading full batch data spends  0.003854513168334961
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.1021575927734375e-05
step  0
else: feat size  torch.Size([1365, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 104, 4: 110, 5: 84, 6: 60, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc88>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfa208>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c048>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bead30>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfac50>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb00>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaac8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bea5f8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfa7f0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf8d68>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beb518>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403adef0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379f98>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412befcf8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379400>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403adc88>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bef128>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403793c8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403ad3c8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403794a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379b00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf08d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379ac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bea9b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029027462005615234  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029032230377197266  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.12312006950378418
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009294509887695312  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9408671855926514
loading full batch data spends  0.0053863525390625
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.176399230957031e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 102, 4: 109, 5: 84, 6: 60, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf60>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6358>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e48>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403e17b8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6be0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce48>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7f98>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6320>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e48>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037db70>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037db00>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7f98>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e48>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfc630>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037db70>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfce10>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfcfd0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403adc88>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b710>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379048>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beefd0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bef128>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379ac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaeb8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029061317443847656  GigaBytes
Max Memory Allocated: 0.029604434967041016  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029066085815429688  GigaBytes
Max Memory Allocated: 0.029604434967041016  GigaBytes

pure train time  0.12349414825439453
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009294509887695312  GigaBytes
Max Memory Allocated: 0.029604434967041016  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9362695217132568
loading full batch data spends  0.0039942264556884766
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.626678466796875e-05
step  0
else: feat size  torch.Size([1384, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 108, 5: 84, 6: 58, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf08d0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c908>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beb518>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403ad3c8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be9e48>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403779b0>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403774a8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403adef0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377710>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377f60>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ccf8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377978>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403adc88>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377f60>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d160>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d198>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377978>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037db00>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d198>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377278>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037db00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6c18>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6748>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029236316680908203  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029241085052490234  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11668014526367188
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9366008043289185
loading full batch data spends  0.002254962921142578
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.457069396972656e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 108, 5: 86, 6: 58, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c668>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c400>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc50>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc18>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ccc0>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cfd0>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0b8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9b0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca90>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c630>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c470>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb70>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c048>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c828>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c8d0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c588>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cda0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6748>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c3c8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6320>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf62b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403779b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029030323028564453  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029035091400146484  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.10448217391967773
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009235858917236328  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9342232942581177
loading full batch data spends  0.0022554397583007812
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.695487976074219e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 94, 3: 103, 4: 109, 5: 86, 6: 59, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d0b8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d198>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d2e8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfcb00>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc668>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7668>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6710>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaac8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc75a58>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e80>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf62b0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c898>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c080>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cdd8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c668>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb38>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cfd0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c278>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c400>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5f8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029059886932373047  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029064655303955078  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12200355529785156
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9381310939788818
loading full batch data spends  0.004775524139404297
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.078315734863281e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 109, 5: 83, 6: 59, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f04403adef0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c3c8>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379198>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379ac8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379438>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379f98>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bef5c0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412befcf8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379ac8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412befd30>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bc58d0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403e17b8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377be0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037bac8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaac8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfac50>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412befd30>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377be0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bef0f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bef5c0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bef358>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377e80>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029006004333496094  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029010772705078125  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.1206967830657959
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009235858917236328  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9337886571884155
loading full batch data spends  0.004276275634765625
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.6743621826171875e-05
step  0
else: feat size  torch.Size([1369, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 102, 4: 108, 5: 85, 6: 60, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca90>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beeda0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beed30>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5f8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf8d68>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c208>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7940>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7b00>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5f8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7ac8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd30>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca58>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379860>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379198>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379b00>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379048>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379f98>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379198>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc75a90>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037bac8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf69b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403e17b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf62b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377be0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907562255859375  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02908039093017578  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.1204679012298584
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.938102126121521
loading full batch data spends  0.0041425228118896484
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.435943603515625e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 108, 5: 84, 6: 58, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c278>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4a8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c358>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cef0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc18>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c860>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb70>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c080>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c940>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c400>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc50>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c240>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce80>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc88>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c978>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c3c8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379fd0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c3c8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403795f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379198>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd30>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379d30>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379438>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02899026870727539  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028995037078857422  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12526965141296387
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009241104125976562  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.926169514656067
loading full batch data spends  0.005805492401123047
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.987022399902344e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 98, 3: 106, 4: 107, 5: 82, 6: 59, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bea5f8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bead30>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cdd8>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4e0>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c940>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c400>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c048>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c8d0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6d8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c3c8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7b8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc88>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c748>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf98>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c128>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca90>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ceb8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379fd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca90>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905130386352539  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029056072235107422  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11878347396850586
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9389958381652832
loading full batch data spends  0.003041505813598633
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.3392181396484375e-05
step  0
else: feat size  torch.Size([1348, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 111, 5: 83, 6: 60, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea58>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e3c8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ba90>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfac50>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403e17b8>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaef0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beed30>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc208>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf8d68>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bea5f8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7b00>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc208>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7668>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7828>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfac50>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7f98>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e7f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e3c8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e470>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b5f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e160>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eb00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ba58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e860>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029033184051513672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029037952423095703  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11605525016784668
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009187698364257812  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9284781217575073
loading full batch data spends  0.0022449493408203125
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.719329833984375e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 110, 5: 82, 6: 60, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f04403779b0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377e80>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377710>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377f60>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403774a8>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c630>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c240>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf60>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9e8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfa208>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc208>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b5f8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7f98>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfac50>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfa7f0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7668>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7f98>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e978>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b710>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eba8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e390>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b5f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beff60>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ebe0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029013633728027344  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029018402099609375  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12097454071044922
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9206058979034424
loading full batch data spends  0.004754543304443359
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.081031799316406e-05
step  0
else: feat size  torch.Size([1350, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 109, 5: 86, 6: 59, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379ac8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379860>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379470>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403795f8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403793c8>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403794a8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb38>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c940>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cdd8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4a8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c080>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c668>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce48>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5c0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c278>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c630>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cbe0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ba58>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eb00>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfaac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ba58>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfa208>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7828>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028991222381591797  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028995990753173828  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12111616134643555
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009198188781738281  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9211076498031616
loading full batch data spends  0.005301475524902344
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.555152893066406e-05
step  0
else: feat size  torch.Size([1348, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 103, 4: 110, 5: 86, 6: 59, 7: 33, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9b0>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e438>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403794a8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9b0>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377240>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377e80>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377c18>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403774a8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e3c8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403774e0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377278>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c208>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca58>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ccf8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb38>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c710>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c400>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cdd8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4a8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c940>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cda0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca20>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02902507781982422  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02902984619140625  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12543153762817383
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9211759567260742
loading full batch data spends  0.006256580352783203
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   8.368492126464844e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 103, 4: 109, 5: 83, 6: 60, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ecc0>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea58>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e358>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e128>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e320>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ebe0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e0f0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beed30>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bef5c0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea58>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bef358>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e320>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bef5c0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beffd0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c860>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ccf8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c748>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc88>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7b8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd68>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c710>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cdd8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c908>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029078960418701172  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029083728790283203  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12332534790039062
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009273052215576172  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9233498573303223
loading full batch data spends  0.0042264461517333984
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.435943603515625e-05
step  0
else: feat size  torch.Size([1361, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 102, 4: 108, 5: 85, 6: 60, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c828>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c978>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6748>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e48>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beeda0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7ac8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc0b8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beefd0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037dd30>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beff60>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b828>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7940>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c860>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ccf8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c3c8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf98>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cef0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c978>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cbe0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd30>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029082298278808594  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029087066650390625  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12360763549804688
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9203567504882812
loading full batch data spends  0.0055658817291259766
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.724761962890625e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 109, 5: 84, 6: 58, 7: 33, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379fd0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403795f8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e80>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379198>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc75a58>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403794a8>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379fd0>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea20>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6a0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e978>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([627, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc208>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beff60>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6be0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc668>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6320>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7940>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037bac8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bc58d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403795f8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379438>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfa1d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379fd0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf69b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e80>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc758d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028963088989257812  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028967857360839844  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12628674507141113
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009241104125976562  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9183543920516968
loading full batch data spends  0.004100322723388672
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.841255187988281e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 103, 4: 111, 5: 83, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c710>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c048>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037db70>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd30>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5f8>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379b00>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037dac8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d0b8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379860>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037dd30>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379898>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379f98>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379b00>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379860>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e3c8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e320>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e160>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc75a58>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaf98>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b828>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403ad3c8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6320>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e80>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029140472412109375  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029145240783691406  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.1268291473388672
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9177435636520386
loading full batch data spends  0.004420280456542969
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.245208740234375e-05
step  0
else: feat size  torch.Size([1373, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 106, 5: 86, 6: 58, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b5f8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037db00>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bef0f0>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b710>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b828>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6048>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bef358>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf62b0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6c18>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412befcf8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf69b0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6748>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379d68>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6048>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403793c8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379400>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6358>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403794a8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379fd0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6048>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379d68>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379898>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e8d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ebe0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029159069061279297  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029163837432861328  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.1248631477355957
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009321212768554688  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9226289987564087
loading full batch data spends  0.00411534309387207
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.031990051269531e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 102, 4: 110, 5: 84, 6: 61, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca58>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca20>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca90>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4e0>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5f8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c860>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2b0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd30>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5c0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c710>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cbe0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ceb8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7b8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ccf8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ccc0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc88>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6748>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc88>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6c18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6be0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904653549194336  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905130386352539  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12271404266357422
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9178375005722046
loading full batch data spends  0.0023679733276367188
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.838539123535156e-05
step  0
else: feat size  torch.Size([1371, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 103, 4: 109, 5: 86, 6: 58, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfc630>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c358>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfce10>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7b00>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0668>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bef128>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e80>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc75a90>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037db70>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6710>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b828>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403adc88>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf64a8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403ad3c8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4e0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca20>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce80>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c8d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca58>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5f8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c630>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029149532318115234  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029154300689697266  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.10848498344421387
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009310245513916016  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9261404275894165
loading full batch data spends  0.002714395523071289
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.649162292480469e-05
step  0
else: feat size  torch.Size([1355, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 105, 4: 107, 5: 83, 6: 59, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0f0>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7b8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc88>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd30>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cda0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9b0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eb00>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e908>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e320>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f04403ad3c8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d0b8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412befcf8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beefd0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6710>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403adc88>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bef128>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6048>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bef828>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b710>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6c18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bea9b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b5f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf69b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ba90>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029017925262451172  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029022693634033203  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11971712112426758
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.905638337135315
loading full batch data spends  0.0024170875549316406
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.552436828613281e-05
step  0
else: feat size  torch.Size([1347, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 106, 5: 84, 6: 60, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cda0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379048>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379fd0>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379400>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379198>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379d30>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379898>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c080>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f04403793c8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379fd0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379860>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379470>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379b00>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379400>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e7f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e668>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfcfd0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403adc88>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6048>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfcfd0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf69b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403ad3c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc758d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028928756713867188  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02893352508544922  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.10385346412658691
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009182453155517578  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9129527807235718
loading full batch data spends  0.0031375885009765625
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.458427429199219e-05
step  0
else: feat size  torch.Size([1351, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 100, 4: 110, 5: 85, 6: 61, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6d8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc88>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0b8>
func(nbatch).neighbor  torch.Size([100, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cfd0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c630>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c978>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c208>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf98>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c8d0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379860>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ccf8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379898>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379198>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379fd0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379470>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379ac8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379860>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379fd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440379f98>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e160>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e320>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029088497161865234  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029093265533447266  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11588668823242188
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9090458154678345
loading full batch data spends  0.003033161163330078
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.7206878662109375e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 102, 4: 110, 5: 84, 6: 60, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5c0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c710>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c898>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c940>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c320>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb38>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cfd0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce80>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9b0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5f8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cda0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c8d0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ceb8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2b0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ccf8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cac8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c080>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c978>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca20>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cba8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02899789810180664  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029002666473388672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12080073356628418
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.897181510925293
loading full batch data spends  0.00458073616027832
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.555152893066406e-05
step  0
else: feat size  torch.Size([1369, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 100, 4: 108, 5: 85, 6: 60, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be2128>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf5cf8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e3c8>
func(nbatch).neighbor  torch.Size([100, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ecc0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bef358>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf7278>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be2128>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b828>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf8d68>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b5f8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cdd8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0b8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4a8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cef0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c668>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c320>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c240>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cfd0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc88>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc50>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cda0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02913522720336914  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029139995574951172  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11597228050231934
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9288955926895142
loading full batch data spends  0.004700899124145508
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.364418029785156e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 106, 4: 109, 5: 86, 6: 59, 7: 35, 8: 23, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfa7f0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beacc0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfa1d0>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037dac8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037db00>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfa7f0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfac50>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c908>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c3c8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cba8>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([634, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6358>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beeda0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf58d0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beed30>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037df98>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403ad3c8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0668>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037db00>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf08d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfac50>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d198>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfa1d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea20>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037dac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d160>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029129505157470703  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029134273529052734  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12440800666809082
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009294509887695312  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9113438129425049
loading full batch data spends  0.005554676055908203
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.796287536621094e-05
step  0
else: feat size  torch.Size([1381, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 103, 4: 108, 5: 84, 6: 59, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6d8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e3c8>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eba8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e828>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ebe0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c240>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca58>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c668>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c048>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6d8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc50>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c630>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ccf8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c908>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cac8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c358>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c3c8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beed30>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b828>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d0b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037db00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be2128>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beed30>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b828>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029250144958496094  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029254913330078125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1265277862548828
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8941079378128052
loading full batch data spends  0.005473136901855469
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   0.00010251998901367188
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 109, 5: 85, 6: 60, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e390>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea20>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e3c8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e0f0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ebe0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e828>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ecc0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4a8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cdd8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd30>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c320>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ceb8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c710>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5c0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c668>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9b0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf98>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c240>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca58>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca90>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cfd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029085159301757812  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029089927673339844  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11684298515319824
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009241104125976562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9141740798950195
loading full batch data spends  0.005786418914794922
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.793571472167969e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 107, 5: 84, 6: 59, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b828>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6a0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6be0>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b5f8>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6320>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6748>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6be0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6278>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ba58>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b710>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6048>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf69b0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5c0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c860>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c940>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c710>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc18>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ccc0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf98>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c240>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029003143310546875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029007911682128906  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12614202499389648
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9114221334457397
loading full batch data spends  0.0059239864349365234
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.271766662597656e-05
step  0
else: feat size  torch.Size([1366, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 110, 5: 85, 6: 60, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e160>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea58>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d160>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e438>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ba58>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b5f8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc75a58>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6710>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bc58d0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b5f8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([636, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6d8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c978>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c048>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4a8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc18>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb38>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c710>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4e0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c048>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc18>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029211997985839844  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029216766357421875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1219484806060791
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00928640365600586  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9042729139328003
loading full batch data spends  0.004139423370361328
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.3882598876953125e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 106, 4: 108, 5: 83, 6: 59, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c828>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf60>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c470>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c588>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9b0>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cbe0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cda0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037dac8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037dd30>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9b0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc668>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be2128>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beeda0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc550>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be9e48>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfaac8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7f98>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfa7f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfa1d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc0b8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfa208>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beed30>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfaac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6710>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905130386352539  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029056072235107422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12390780448913574
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9130725860595703
loading full batch data spends  0.006069183349609375
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   8.58306884765625e-05
step  0
else: feat size  torch.Size([1360, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 106, 4: 109, 5: 83, 6: 60, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd30>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cba8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beb518>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403adc88>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403adef0>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5c0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e828>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e438>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e668>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e470>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eb00>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e0f0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e320>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ecc0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ec50>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e7f0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eba8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d160>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7828>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfc630>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc748>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf5b38>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfa1d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be9e48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc518>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02908945083618164  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029094219207763672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11971473693847656
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009251594543457031  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.925636887550354
loading full batch data spends  0.005249977111816406
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.412101745605469e-05
step  0
else: feat size  torch.Size([1365, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 94, 3: 103, 4: 107, 5: 87, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd68>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c080>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf64a8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6c18>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377f60>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6358>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6c18>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377240>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e80>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377c18>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377978>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377710>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377278>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d2e8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037df98>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377e80>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e898>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e668>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e8d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e358>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e470>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e160>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ebe0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e128>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02912425994873047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0291290283203125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12206673622131348
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.896549105644226
loading full batch data spends  0.003928661346435547
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.316734313964844e-05
step  0
else: feat size  torch.Size([1366, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 103, 4: 109, 5: 85, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c358>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c240>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca58>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cfd0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd30>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb00>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce48>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cdd8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5c0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c668>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5f8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c748>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0b8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c470>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6d8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b710>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4a8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ba58>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037bac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c3c8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029132843017578125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029137611389160156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1251082420349121
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00928354263305664  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.885839581489563
loading full batch data spends  0.005446195602416992
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.698204040527344e-05
step  0
else: feat size  torch.Size([1350, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 104, 4: 110, 5: 86, 6: 57, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377f60>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ebe0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377c18>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b828>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b5f8>
func(nbatch).neighbor  torch.Size([57, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaf98>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037bac8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beed30>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfac50>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ba58>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2b0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cbe0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c358>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c080>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd30>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca58>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c978>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce48>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c208>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cdd8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5c0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c940>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028969287872314453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028974056243896484  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1221163272857666
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.90777587890625
loading full batch data spends  0.003864288330078125
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.3882598876953125e-05
step  0
else: feat size  torch.Size([1365, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 110, 5: 83, 6: 60, 7: 35, 8: 21, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377e48>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377978>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377f60>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e438>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e860>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea58>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea20>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9b0>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e3c8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eb00>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf5cf8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037bac8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc518>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf5860>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6278>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ba58>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b5f8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7b00>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf5b38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf5cf8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7f98>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cbe0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ccf8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029048442840576172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029053211212158203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1250324249267578
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009278297424316406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.911035418510437
loading full batch data spends  0.005333423614501953
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.5789947509765625e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 106, 4: 109, 5: 82, 6: 60, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c710>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf98>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377e48>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf98>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377240>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9e8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377978>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403774a8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf98>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e470>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9b0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e588>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e5c0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e400>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e860>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea20>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea58>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf5860>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc518>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfaac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf58d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037db70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403adc88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bc58d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029133319854736328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02913808822631836  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1225748062133789
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9161747694015503
loading full batch data spends  0.003954172134399414
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.269050598144531e-05
step  0
else: feat size  torch.Size([1347, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 105, 4: 108, 5: 84, 6: 59, 7: 35, 8: 22, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cba8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd68>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5f8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc88>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca90>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf60>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c898>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cac8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0b8>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c3c8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca58>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c588>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf98>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c908>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c320>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c208>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ecc0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e160>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eba8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e8d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eb00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028905868530273438  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02891063690185547  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12544465065002441
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009182453155517578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8769339323043823
loading full batch data spends  0.004935264587402344
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.555152893066406e-05
step  0
else: feat size  torch.Size([1356, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 105, 4: 109, 5: 85, 6: 58, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7828>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc668>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7668>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c438>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2b0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c978>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cac8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c748>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c3c8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf60>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cda0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc50>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c128>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cdd8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c320>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7b8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca20>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5c0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c240>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cbe0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4e0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029036521911621094  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029041290283203125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12528252601623535
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.888580083847046
loading full batch data spends  0.006110429763793945
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   8.225440979003906e-05
step  0
else: feat size  torch.Size([1349, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 109, 5: 84, 6: 60, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6358>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6048>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e3c8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e80>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037bac8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403e17b8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7828>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403774e0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf8d68>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7828>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c898>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c470>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cfd0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9e8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd30>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c748>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c978>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c080>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c208>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ceb8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cda0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc50>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c128>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029000282287597656  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029005050659179688  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12484931945800781
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009192943572998047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9108082056045532
loading full batch data spends  0.004048824310302734
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.412101745605469e-05
step  0
else: feat size  torch.Size([1374, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 105, 4: 109, 5: 86, 6: 60, 7: 35, 8: 21, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6748>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e48>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e8d0>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e588>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e320>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e0f0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e898>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e160>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e128>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e828>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b5f8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf08d0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaef0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7940>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377c18>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b5f8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7668>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403774e0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ba58>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cac8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c470>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029144763946533203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029149532318115234  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1266491413116455
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.896973967552185
loading full batch data spends  0.006165504455566406
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.936622619628906e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 108, 5: 84, 6: 60, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0b8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c358>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6048>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c358>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e80>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c828>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf64a8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c358>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e898>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9e8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e128>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e438>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6d8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ec50>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beed30>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf08d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7f98>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0668>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bc58d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7940>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaac8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029017925262451172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029022693634033203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12640666961669922
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009235858917236328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8896499872207642
loading full batch data spends  0.005382061004638672
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.507469177246094e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 105, 4: 108, 5: 84, 6: 57, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ceb8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce80>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0f0>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c978>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb70>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc50>
func(nbatch).neighbor  torch.Size([57, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cfd0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c748>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2b0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c320>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4e0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca90>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c828>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c940>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc18>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9b0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c898>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e668>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e3c8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6a0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e588>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e7f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029020309448242188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02902507781982422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12445282936096191
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8965643644332886
loading full batch data spends  0.0051190853118896484
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.985664367675781e-05
step  0
else: feat size  torch.Size([1365, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 107, 5: 84, 6: 59, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7b8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cba8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb38>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c630>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4a8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2b0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c978>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0b8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c940>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5c0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf98>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c668>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ccf8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c470>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd30>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca90>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c048>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca20>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e3c8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029108047485351562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029112815856933594  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1252448558807373
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009278297424316406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9054439067840576
loading full batch data spends  0.004151821136474609
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.364418029785156e-05
step  0
else: feat size  torch.Size([1371, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 102, 4: 107, 5: 84, 6: 59, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfaac8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e48>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e320>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6748>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0fd0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf08d0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c630>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4a8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb70>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cba8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd68>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc18>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c828>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cdd8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c668>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c080>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd30>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c278>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca20>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf60>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d198>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029155254364013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029160022735595703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12263989448547363
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.890053629875183
loading full batch data spends  0.0056171417236328125
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.650520324707031e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 107, 5: 84, 6: 59, 7: 34, 8: 21, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc550>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6320>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc668>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc0b8>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e908>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e358>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6d8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e588>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9b0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e5c0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ba90>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037db70>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaa90>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beefd0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beacc0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be2128>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc75a90>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc75a58>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfcda0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc668>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc208>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377240>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403779b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403774e0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028943538665771484  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028948307037353516  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.13526654243469238
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009209156036376953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9035192728042603
loading full batch data spends  0.002440214157104492
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.814697265625e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 110, 5: 82, 6: 60, 7: 33, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c710>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca20>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf64a8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c588>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf69b0>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca20>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c668>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6358>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9e8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6048>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e358>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eba8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e668>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e470>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e160>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e5c0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e390>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea20>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc75a90>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beefd0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be9e80>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be2128>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037bac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc75a58>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029082775115966797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029087543487548828  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10500454902648926
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8958873748779297
loading full batch data spends  0.002422809600830078
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.3855438232421875e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 108, 5: 86, 6: 61, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c470>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7b8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c080>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cba8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4e0>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb70>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c438>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca90>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6d8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([634, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9b0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c048>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9e8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c668>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c828>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c128>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c278>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ecc0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e588>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e978>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6d8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea20>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e400>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eba8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e668>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029102325439453125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029107093811035156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1046757698059082
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00922250747680664  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8874503374099731
loading full batch data spends  0.002417325973510742
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.4332275390625e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 107, 5: 87, 6: 60, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c828>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf98>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ccf8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c278>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c320>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c128>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c710>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c978>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6d8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e48>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0f0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6710>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6278>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6d8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf69b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf64a8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6048>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6be0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf62b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e588>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e908>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029088497161865234  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029093265533447266  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10292410850524902
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8847156763076782
loading full batch data spends  0.003359556198120117
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.337860107421875e-05
step  0
else: feat size  torch.Size([1356, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 102, 4: 108, 5: 86, 6: 61, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037df98>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cef0>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037dd30>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d160>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403ad3c8>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403779b0>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf5cf8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403ad3c8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e80>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6320>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb38>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca20>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0b8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5f8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4e0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c080>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c630>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca58>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c828>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf98>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ccf8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029044151306152344  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029048919677734375  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10073304176330566
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00923013687133789  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8847126960754395
loading full batch data spends  0.003116607666015625
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.2438507080078125e-05
step  0
else: feat size  torch.Size([1369, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 109, 5: 82, 6: 59, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce48>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6d8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c128>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eba8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ecc0>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e828>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ec50>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e978>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e908>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e7f0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f04403e17b8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bc58d0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037bac8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf06a0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d160>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf7278>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beeda0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377f60>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf08d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403774e0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5f8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd68>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cdd8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029043197631835938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904796600341797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10385417938232422
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8884246349334717
loading full batch data spends  0.0031232833862304688
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.649162292480469e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 109, 5: 85, 6: 59, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf98>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf58d0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaef0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfa1d0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bea5f8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf5b38>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfa7f0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaef0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaa90>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e160>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e7f0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea20>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e668>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e5f8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e978>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ec50>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eba8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beefd0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bc58d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc75a90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf06a0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403774a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf7278>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037db70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904367446899414  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029048442840576172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1035611629486084
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009209156036376953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8627398014068604
loading full batch data spends  0.0023593902587890625
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.361701965332031e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 102, 4: 108, 5: 85, 6: 60, 7: 35, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf60>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5c0>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb70>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c908>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb00>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c048>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c470>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ceb8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c860>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce48>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd30>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4a8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5f8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eb00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ecc0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ebe0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e860>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6d8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eba8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e160>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e7f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea58>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029140472412109375  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029145240783691406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10405445098876953
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8943078517913818
loading full batch data spends  0.00427556037902832
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.220008850097656e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 107, 5: 84, 6: 60, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5f8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce48>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c320>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c828>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c860>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c128>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca58>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfa208>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfac50>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfac50>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c278>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e48>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf69b0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6710>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6358>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf64a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf62b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6748>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02902078628540039  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029025554656982422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10049819946289062
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009209156036376953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8852626085281372
loading full batch data spends  0.0031194686889648438
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.291534423828125e-05
step  0
else: feat size  torch.Size([1362, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 111, 5: 84, 6: 60, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c470>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb70>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e7f0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce80>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0668>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0fd0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beefd0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0668>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beeda0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfc630>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377748>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377240>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403779b0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377278>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377978>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377f60>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc88>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c898>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cba8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cdd8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd68>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce80>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905130386352539  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029056072235107422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10654973983764648
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8778167963027954
loading full batch data spends  0.002338409423828125
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.6716461181640625e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 108, 5: 84, 6: 59, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cda0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c128>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6d8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea20>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e128>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e0f0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e588>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e8d0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e438>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf5cf8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc550>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0438>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beefd0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ba90>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0438>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377be0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ba58>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377748>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377240>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ba90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403774e0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377978>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377be0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377278>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029073715209960938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907848358154297  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10115861892700195
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009246349334716797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8813868761062622
loading full batch data spends  0.003097057342529297
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.650520324707031e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 107, 5: 84, 6: 59, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca20>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf60>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf64a8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c208>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf60>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6358>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c3c8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6320>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6748>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf60>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e5c0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e588>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea58>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e908>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e358>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea20>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e0f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e128>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beeda0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be2128>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beed30>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0fd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377e80>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403779b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904224395751953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029047012329101562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10340094566345215
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8737990856170654
loading full batch data spends  0.004264116287231445
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.3392181396484375e-05
step  0
else: feat size  torch.Size([1361, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 105, 4: 110, 5: 83, 6: 59, 7: 35, 8: 22, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce48>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cda0>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c438>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd68>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf60>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc50>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ccf8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c128>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb38>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb00>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cdd8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c588>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c208>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4e0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c3c8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc18>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ceb8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc88>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e160>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e668>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e828>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e438>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02902078628540039  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029025554656982422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10210871696472168
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009256839752197266  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.884426474571228
loading full batch data spends  0.0031113624572753906
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.267692565917969e-05
step  0
else: feat size  torch.Size([1346, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 98, 3: 104, 4: 107, 5: 83, 6: 61, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc748>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc0b8>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc668>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc518>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c748>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c128>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5c0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cbe0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c860>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ceb8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf98>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9b0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca90>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0f0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc18>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb00>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c908>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6d8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028998851776123047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029003620147705078  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1027677059173584
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9126516580581665
loading full batch data spends  0.0031142234802246094
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.3392181396484375e-05
step  0
else: feat size  torch.Size([1362, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 104, 4: 110, 5: 85, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c978>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6d8>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ebe0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf62b0>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaac8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beefd0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc668>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403adef0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037bac8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc518>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c630>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cac8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cdd8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c898>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7b8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c748>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce48>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c048>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd68>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5c0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c828>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ceb8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029133319854736328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02913808822631836  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10379648208618164
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009265422821044922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.881186842918396
loading full batch data spends  0.0031032562255859375
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.3392181396484375e-05
step  0
else: feat size  torch.Size([1370, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 108, 5: 86, 6: 57, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cef0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c978>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6a0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea58>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e400>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e668>
func(nbatch).neighbor  torch.Size([57, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eb00>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e160>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ec50>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e128>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0668>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf7278>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beb518>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfac50>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d2e8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403adef0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037db70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377710>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beb240>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d0b8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cdd8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd30>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6d8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029162883758544922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029167652130126953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10349440574645996
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8719948530197144
loading full batch data spends  0.0032248497009277344
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.647804260253906e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 105, 4: 110, 5: 81, 6: 59, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6be0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6c18>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaac8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf62b0>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beae80>
func(nbatch).neighbor  torch.Size([81, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf62b0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaa90>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bea5f8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6c18>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6048>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaf98>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bead30>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eb00>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e860>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ec50>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6d8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e5f8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e3c8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf8d68>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf7278>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7ac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037bac8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403adc88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc75a58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc758d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02903604507446289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029040813446044922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10163307189941406
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009273052215576172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8800411224365234
loading full batch data spends  0.003110170364379883
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.220008850097656e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 110, 5: 83, 6: 60, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c748>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cda0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb70>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5f8>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd30>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c898>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce80>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9b0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c710>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cbe0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb00>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c828>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c358>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7b8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc18>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc50>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ecc0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ebe0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e588>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e978>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e320>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029095172882080078  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02909994125366211  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1042945384979248
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.848575472831726
loading full batch data spends  0.004105567932128906
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.4836273193359375e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 110, 5: 85, 6: 60, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2b0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf98>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca20>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c908>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c048>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca58>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c668>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cbe0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd30>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([634, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c710>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7b8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5c0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4e0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c470>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0b8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b5f8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb38>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc50>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ba90>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037bac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce48>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c208>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ebe0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02915191650390625  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02915668487548828  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10526871681213379
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009249210357666016  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8828399181365967
loading full batch data spends  0.0026772022247314453
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.410743713378906e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 105, 4: 108, 5: 82, 6: 60, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e80>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6748>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e470>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6be0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b710>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beefd0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403774e0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ba90>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7ac8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b710>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0f0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c240>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c898>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c748>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2b0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c668>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd68>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cbe0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf98>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c588>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c3c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf60>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029076576232910156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029081344604492188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1094977855682373
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8712208271026611
loading full batch data spends  0.0032470226287841797
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.24249267578125e-05
step  0
else: feat size  torch.Size([1361, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 104, 4: 110, 5: 85, 6: 60, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e48>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf64a8>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6048>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e80>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9b0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eba8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ebe0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea58>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e588>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea20>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([635, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaac8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7ac8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377240>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfa1d0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377e80>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377240>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfa7f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403e17b8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377278>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403779b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c240>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd30>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c748>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c978>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029112815856933594  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029117584228515625  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10587430000305176
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009256839752197266  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8690303564071655
loading full batch data spends  0.002440929412841797
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.5762786865234375e-05
step  0
else: feat size  torch.Size([1351, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 105, 4: 107, 5: 84, 6: 59, 7: 34, 8: 23, 9: 8, 10: 65}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca20>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c208>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6320>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc550>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf62b0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6278>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf69b0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6be0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf64a8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6320>
func(nbatch).neighbor  torch.Size([65, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eba8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e828>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e7f0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e5c0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e160>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea20>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e390>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e8d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf5b38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beacc0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d160>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfa1d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377240>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377e48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfa7f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028908252716064453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028913021087646484  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10913634300231934
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8544687032699585
loading full batch data spends  0.0032663345336914062
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.601478576660156e-05
step  0
else: feat size  torch.Size([1366, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 104, 4: 107, 5: 87, 6: 60, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c470>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb00>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c320>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4a8>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5c0>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd68>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c278>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf98>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0f0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c860>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb70>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c358>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca20>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ceb8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c978>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea58>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e898>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ebe0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e8d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e5f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e828>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e7f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02917957305908203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029184341430664062  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1040494441986084
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00928640365600586  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8578256368637085
loading full batch data spends  0.0023415088653564453
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.504753112792969e-05
step  0
else: feat size  torch.Size([1363, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 104, 4: 110, 5: 85, 6: 58, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c978>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c048>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c898>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf60>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c588>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377e80>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c668>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c588>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377978>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7b8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c320>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c668>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6be0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c668>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6358>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c630>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6748>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c668>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf69b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029146194458007812  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029150962829589844  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1025075912475586
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.891661524772644
loading full batch data spends  0.004365205764770508
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.363059997558594e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 105, 4: 110, 5: 83, 6: 59, 7: 33, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cda0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c828>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c128>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c3c8>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be9e48>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beeda0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6c18>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403774a8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6748>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf64a8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ba90>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037dac8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b5f8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4a8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cba8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca58>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb38>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c710>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc18>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce80>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c208>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c3c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c240>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028964519500732422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028969287872314453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.103546142578125
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.873810887336731
loading full batch data spends  0.002341747283935547
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.314018249511719e-05
step  0
else: feat size  torch.Size([1365, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 102, 4: 109, 5: 85, 6: 60, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d2e8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf98>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037db00>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6a0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e978>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6d8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9b0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e828>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e5c0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e3c8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ba90>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfac50>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc75a90>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bc58d0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d2e8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf06a0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf58d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377e80>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037db70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6048>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6be0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377710>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d198>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029071331024169922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029076099395751953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10248398780822754
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.859993577003479
loading full batch data spends  0.0029664039611816406
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.38690185546875e-05
step  0
else: feat size  torch.Size([1351, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 106, 4: 107, 5: 80, 6: 60, 7: 33, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0f0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4e0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf8d68>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce80>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403adef0>
func(nbatch).neighbor  torch.Size([80, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403774a8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d0b8>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0f0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b828>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403774e0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e5f8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e3c8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea58>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e898>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e320>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e828>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9b0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6a0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc758d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bc58d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf5b38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc758d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf5cf8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6be0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02898120880126953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028985977172851562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10501527786254883
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009203433990478516  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8499435186386108
loading full batch data spends  0.0038793087005615234
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.435943603515625e-05
step  0
else: feat size  torch.Size([1373, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 102, 4: 111, 5: 82, 6: 60, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce48>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c240>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9b0>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c208>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce80>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb38>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc50>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c358>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c438>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf98>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c898>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c940>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c748>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ceb8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e7f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e978>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e358>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ecc0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e128>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6a0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e5f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e3c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e400>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02917003631591797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0291748046875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10210919380187988
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8622076511383057
loading full batch data spends  0.004079103469848633
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.124641418457031e-05
step  0
else: feat size  torch.Size([1371, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 94, 3: 102, 4: 109, 5: 86, 6: 61, 7: 33, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cfd0>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c630>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cbe0>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb00>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c668>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cda0>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c358>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc18>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7b8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca20>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ceb8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c358>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377978>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c588>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c358>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377748>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377710>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c358>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377278>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6d8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377e48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377748>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029190540313720703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029195308685302734  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10541629791259766
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009313106536865234  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8490543365478516
loading full batch data spends  0.003078937530517578
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.267692565917969e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 110, 5: 84, 6: 58, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cba8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c898>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e3c8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c320>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfa7f0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be9e48>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf08d0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc668>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf5860>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0438>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377c18>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377278>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377e48>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377748>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377e80>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c240>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9b0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4e0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c828>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca90>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc50>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5c0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c320>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029044628143310547  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029049396514892578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.0979146957397461
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8504849672317505
loading full batch data spends  0.002950429916381836
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.0531158447265625e-05
step  0
else: feat size  torch.Size([1348, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 104, 4: 108, 5: 85, 6: 61, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c358>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce80>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6d8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e128>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea58>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e8d0>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9e8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea20>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ecc0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eba8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beb240>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf5860>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b828>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfcb00>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ba90>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377f60>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b710>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf5b38>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377c18>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377748>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377278>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d2e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6320>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377e80>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037df98>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029048919677734375  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029053688049316406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10147666931152344
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009190559387207031  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8523622751235962
loading full batch data spends  0.0026307106018066406
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.267692565917969e-05
step  0
else: feat size  torch.Size([1370, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 108, 5: 86, 6: 59, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb38>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c978>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc550>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6358>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bc58d0>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6710>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc550>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf69b0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6be0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc748>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e860>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea20>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e400>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e5c0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e160>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea58>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e8d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf5b38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfcb00>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beb518>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d2e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf5860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377f60>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029132843017578125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029137611389160156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1065683364868164
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8749324083328247
loading full batch data spends  0.004052400588989258
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.269050598144531e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 103, 4: 107, 5: 85, 6: 60, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5f8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c358>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cba8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5c0>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0f0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c908>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd30>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c080>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca90>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cef0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c320>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c208>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2b0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc18>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c278>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c668>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cac8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e5f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e898>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6d8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eb00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eba8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029071331024169922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029076099395751953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10198783874511719
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009294509887695312  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8826159238815308
loading full batch data spends  0.002933979034423828
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.172325134277344e-05
step  0
else: feat size  torch.Size([1343, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 103, 4: 108, 5: 83, 6: 60, 7: 35, 8: 22, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037db70>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037db00>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037dd30>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037df98>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c940>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c438>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c080>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4e0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c978>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6d8>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ceb8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c470>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c588>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c710>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c668>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca90>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf98>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca20>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ccf8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c3c8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028884410858154297  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028889179229736328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10244965553283691
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8597307205200195
loading full batch data spends  0.0027124881744384766
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.1961669921875e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 109, 5: 85, 6: 59, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bead30>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403adef0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e438>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beacc0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7ac8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf8d68>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6710>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037dac8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037dd30>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377be0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cef0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0f0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc88>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cba8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c898>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4a8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c748>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c978>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c470>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c588>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c710>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904653549194336  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905130386352539  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09619712829589844
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009235858917236328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8417729139328003
loading full batch data spends  0.002978801727294922
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.0531158447265625e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 108, 5: 85, 6: 58, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beefd0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beeda0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eb00>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e400>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e668>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9e8>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e7f0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e5f8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ecc0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e128>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037df98>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfa208>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfcfd0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d0b8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf7278>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037db70>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037dd30>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b710>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cba8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cbe0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c208>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c128>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029018878936767578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02902364730834961  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10200834274291992
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.883000135421753
loading full batch data spends  0.004072427749633789
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.100799560546875e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 104, 4: 107, 5: 84, 6: 59, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc668>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc518>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7828>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc550>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0438>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc668>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaac8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc208>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7b00>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaef0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaf98>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bea5f8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e7f0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e320>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ecc0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e358>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6a0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e908>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfce10>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfa208>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beb240>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfce10>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403adc88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6710>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029139041900634766  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029143810272216797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10405421257019043
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009294509887695312  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8558402061462402
loading full batch data spends  0.002949237823486328
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.410743713378906e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 94, 3: 103, 4: 110, 5: 86, 6: 60, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c278>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb38>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ceb8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb00>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2b0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7b8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c978>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0f0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc18>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cef0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cba8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb00>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd30>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c358>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0b8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc88>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c080>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9b0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ec50>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e3c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ebe0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e828>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e400>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e588>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029006481170654297  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029011249542236328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10491943359375
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8546292781829834
loading full batch data spends  0.002227306365966797
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.2901763916015625e-05
step  0
else: feat size  torch.Size([1356, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 109, 5: 84, 6: 59, 7: 33, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ccf8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c588>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca20>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c940>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cda0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c278>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6d8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc50>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c208>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb38>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc88>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c668>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd68>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf98>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5c0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c978>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cef0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cac8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c860>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ec50>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029064655303955078  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02906942367553711  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10782837867736816
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00923013687133789  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.841335654258728
loading full batch data spends  0.0033020973205566406
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.269050598144531e-05
step  0
else: feat size  torch.Size([1363, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 108, 5: 85, 6: 59, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6748>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6278>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6d8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6320>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfcb00>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0fd0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403e17b8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403adc88>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403ad3c8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bea5f8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c438>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce80>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c828>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6d8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c320>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c3c8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c940>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4e0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029051780700683594  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029056549072265625  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.0986793041229248
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8661139011383057
loading full batch data spends  0.003249645233154297
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.2901763916015625e-05
step  0
else: feat size  torch.Size([1375, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 109, 5: 85, 6: 59, 7: 33, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6c18>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e80>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e48>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6748>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e828>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e898>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ec50>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e400>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e3c8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e0f0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037bac8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403ad3c8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037df98>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb38>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca20>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c128>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4a8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c320>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6d8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c3c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c940>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02912139892578125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02912616729736328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10392904281616211
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009331703186035156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.838354468345642
loading full batch data spends  0.004420280456542969
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.700920104980469e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 104, 4: 107, 5: 87, 6: 58, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7b8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9b0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6048>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfa7f0>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf64a8>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e48>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6048>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf69b0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6278>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e48>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e898>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9e8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea58>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e978>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e5f8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e0f0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e160>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e8d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be9e80>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfc630>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037dac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beed30>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403adef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfcb00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b5f8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02901744842529297  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029022216796875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09714484214782715
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8091009855270386
loading full batch data spends  0.0030930042266845703
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.220008850097656e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 110, 5: 84, 6: 60, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c3c8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd68>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca90>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4a8>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cda0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c320>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc50>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0b8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c080>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c940>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c470>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0f0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9b0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c240>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c278>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea20>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e400>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e860>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ec50>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e8d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea58>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029086589813232422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029091358184814453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1022188663482666
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009273052215576172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8859795331954956
loading full batch data spends  0.003045797348022461
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.291534423828125e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 106, 4: 111, 5: 83, 6: 58, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c358>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c860>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4e0>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c320>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb70>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c128>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7b8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce80>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d160>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd30>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c240>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaf98>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce80>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cba8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beae80>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cbe0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beafd0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beae80>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cba8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beacc0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e400>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e828>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028997421264648438  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02900218963623047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1002359390258789
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8133939504623413
loading full batch data spends  0.00321197509765625
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.266334533691406e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 106, 5: 86, 6: 59, 7: 33, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377710>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf98>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377748>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc75a58>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfc630>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf64a8>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaf98>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf5860>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaef0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5f8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c358>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5c0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c860>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb00>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ceb8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c978>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cac8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc50>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c470>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca20>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ccf8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028992176055908203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028996944427490234  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1030576229095459
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009235858917236328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8046048879623413
loading full batch data spends  0.0022821426391601562
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.2901763916015625e-05
step  0
else: feat size  torch.Size([1353, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 106, 4: 108, 5: 84, 6: 58, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377710>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377748>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377e80>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e898>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ecc0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e128>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6a0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9e8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e860>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e908>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6748>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bc58d0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ba58>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6748>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beb240>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be9e80>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfcfd0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beb518>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beb240>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037db70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c748>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5c0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cda0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029007911682128906  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029012680053710938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10394287109375
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8280874490737915
loading full batch data spends  0.0041675567626953125
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.0558319091796875e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 103, 4: 108, 5: 84, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c048>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc88>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377c18>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cef0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403774e0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403774a8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0b8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377e48>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377978>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e828>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e908>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e400>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea58>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e3c8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9e8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6a0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e898>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403adef0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ba58>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfce10>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bc58d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d2e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403adc88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403774e0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029121875762939453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029126644134521484  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09813809394836426
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009288787841796875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8202556371688843
loading full batch data spends  0.002965211868286133
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.076957702636719e-05
step  0
else: feat size  torch.Size([1355, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 103, 4: 109, 5: 83, 6: 58, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c668>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf98>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cbe0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4a8>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cac8>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cfd0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca58>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5c0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf60>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ceb8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb38>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2b0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce80>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0f0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4e0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e668>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ecc0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e978>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e390>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e588>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e898>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e828>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ec50>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02896881103515625  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02897357940673828  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10084724426269531
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8239816427230835
loading full batch data spends  0.003483295440673828
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.0531158447265625e-05
step  0
else: feat size  torch.Size([1346, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 110, 5: 82, 6: 61, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c588>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb70>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0f0>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c630>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cbe0>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7b8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c128>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb38>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce80>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c3c8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd30>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c470>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6c18>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd68>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c470>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e48>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c278>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7940>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6048>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6278>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7f98>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e80>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf64a8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028947830200195312  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028952598571777344  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09942436218261719
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00917673110961914  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8231334686279297
loading full batch data spends  0.0022118091583251953
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.123283386230469e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 109, 5: 84, 6: 59, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5f8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ccf8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e908>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c358>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfcb00>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0fd0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc75a90>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7668>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bc58d0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b828>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6358>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf62b0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6c18>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf64a8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6278>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c358>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c940>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca58>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5f8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce48>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4a8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca20>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c710>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029085159301757812  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029089927673339844  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10479354858398438
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8115003108978271
loading full batch data spends  0.0022308826446533203
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.266334533691406e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 109, 5: 84, 6: 58, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c828>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c470>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e588>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e400>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e8d0>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea20>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e0f0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e390>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eba8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bea5f8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377be0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6358>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bea5f8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6710>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be9e80>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be9e48>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e48>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc0b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7b00>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf62b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0fd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7b00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7f98>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029039859771728516  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029044628143310547  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10404801368713379
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009241104125976562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.823341727256775
loading full batch data spends  0.002222299575805664
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.314018249511719e-05
step  0
else: feat size  torch.Size([1374, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 107, 5: 85, 6: 59, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c438>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc518>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403e17b8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c278>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc668>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc88>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc50>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf98>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf60>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc208>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e320>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e0f0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ec50>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e860>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e5f8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e400>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea20>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e8d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be9e48>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bea5f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377240>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaf98>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377e48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d160>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037df98>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029170513153076172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029175281524658203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10299420356750488
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7823619842529297
loading full batch data spends  0.004090309143066406
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.1961669921875e-05
step  0
else: feat size  torch.Size([1370, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 108, 5: 84, 6: 60, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c940>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c048>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5c0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cbe0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c128>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c898>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c828>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0b8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c668>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c860>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf98>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4e0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb38>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf60>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c630>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c278>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c748>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6a0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e828>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea58>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e128>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ebe0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eba8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029120445251464844  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029125213623046875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10485076904296875
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009305000305175781  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7778122425079346
loading full batch data spends  0.0029337406158447266
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.172325134277344e-05
step  0
else: feat size  torch.Size([1356, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 109, 5: 84, 6: 60, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377be0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377278>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377978>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403774a8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4a8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9e8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c828>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c358>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc50>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9b0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca20>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c278>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce80>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb00>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c208>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc88>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c630>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ccf8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c588>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cda0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cef0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cdd8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cba8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904510498046875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904987335205078  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10076189041137695
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.811530590057373
loading full batch data spends  0.0029358863830566406
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.1961669921875e-05
step  0
else: feat size  torch.Size([1370, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 110, 5: 82, 6: 59, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377f60>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf64a8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e978>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377240>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beacc0>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d2e8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beeda0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc758d0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc0b8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bea5f8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6d8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf98>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb00>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c240>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c208>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5c0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca58>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd30>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c320>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4e0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0291290283203125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02913379669189453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10176706314086914
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009305000305175781  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8124631643295288
loading full batch data spends  0.0037200450897216797
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.340576171875e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 104, 4: 109, 5: 84, 6: 60, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f04403774a8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377278>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ebe0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ec50>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e470>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea58>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e668>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e828>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eb00>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e8d0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0668>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beefd0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d2e8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0438>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfcfd0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf06a0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc748>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0668>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfa208>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfaac8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beacc0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca20>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cbe0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6d8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029063701629638672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029068470001220703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10646176338195801
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7735238075256348
loading full batch data spends  0.003065824508666992
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.4332275390625e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 106, 4: 109, 5: 84, 6: 59, 7: 35, 8: 21, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cef0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cfd0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c240>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377e48>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5f8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c240>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377f60>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c748>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377710>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c240>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c748>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e668>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e7f0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eb00>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e588>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e3c8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e438>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0438>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc668>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc75a90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf08d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037db00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beafd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaef0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029094219207763672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029098987579345703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10575532913208008
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009273052215576172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7842257022857666
loading full batch data spends  0.002956867218017578
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.172325134277344e-05
step  0
else: feat size  torch.Size([1361, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 104, 4: 108, 5: 85, 6: 61, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7b8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c048>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5c0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c128>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb00>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb70>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca58>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca90>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ccf8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c320>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4e0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c630>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cbe0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c748>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6a0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e978>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e0f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ec50>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029084205627441406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029088973999023438  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10477471351623535
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.877568244934082
loading full batch data spends  0.002222299575805664
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.337860107421875e-05
step  0
else: feat size  torch.Size([1363, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 107, 5: 85, 6: 59, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ba90>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b828>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b710>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb00>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cac8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5f8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd30>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4a8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6d8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c470>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c630>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c3c8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c438>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c978>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cef0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c710>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c860>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c588>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cda0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cdd8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e978>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02906513214111328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029069900512695312  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.0973207950592041
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009267807006835938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8591766357421875
loading full batch data spends  0.0025582313537597656
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.100799560546875e-05
step  0
else: feat size  torch.Size([1361, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 110, 5: 81, 6: 61, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beae80>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7940>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e470>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bead30>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6320>
func(nbatch).neighbor  torch.Size([81, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beeda0>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b710>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfcda0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b828>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beb518>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4a8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ccf8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0b8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c320>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc18>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce80>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc88>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cac8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c630>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c3c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904033660888672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904510498046875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09971022605895996
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7806183099746704
loading full batch data spends  0.003088712692260742
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.266334533691406e-05
step  0
else: feat size  torch.Size([1371, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 108, 5: 83, 6: 59, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beae80>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beacc0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bead30>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bea5f8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e978>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e898>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e5f8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9e8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ec50>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e860>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037dac8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beb518>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ba90>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beb240>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beacc0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ba58>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6320>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6c18>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaef0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bead30>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6c18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf62b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d0b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02910137176513672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02910614013671875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10011482238769531
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009310245513916016  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.752623200416565
loading full batch data spends  0.002930164337158203
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.315376281738281e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 106, 4: 109, 5: 84, 6: 57, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c668>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beefd0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beed30>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c588>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7668>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb38>
func(nbatch).neighbor  torch.Size([57, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c3c8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7b00>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7f98>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0f0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e898>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e320>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6a0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea58>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e828>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e860>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eb00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e0f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc75a90>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf08d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037dac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc75a58>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfaac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6c18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d198>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02908468246459961  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02908945083618164  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10002779960632324
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7674576044082642
loading full batch data spends  0.002230405807495117
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.218650817871094e-05
step  0
else: feat size  torch.Size([1353, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 94, 3: 103, 4: 110, 5: 84, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2b0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce80>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7b8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c240>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb38>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ccf8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4e0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cbe0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0f0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c828>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c208>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce48>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c860>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc18>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9b0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c588>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e160>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ecc0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e5f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e0f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea20>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e320>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6a0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029041290283203125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029046058654785156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09791684150695801
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009214401245117188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.783637285232544
loading full batch data spends  0.002960205078125
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.315376281738281e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 108, 5: 84, 6: 60, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6d8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd30>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c898>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca90>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca20>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce48>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c940>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0b8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c588>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c860>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c208>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cda0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377f60>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb00>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cda0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377c18>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf98>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cac8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377278>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377e48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cda0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377f60>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e978>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02902698516845703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029031753540039062  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09835290908813477
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7508013248443604
loading full batch data spends  0.0030901432037353516
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.1948089599609375e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 98, 3: 105, 4: 106, 5: 85, 6: 59, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc50>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf60>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfa208>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfce10>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bc58d0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403e17b8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403adc88>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403774e0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ba90>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfa7f0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfa1d0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2b0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c748>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c438>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c240>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce80>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c320>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6d8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd30>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca90>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029063701629638672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029068470001220703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10057735443115234
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7697908878326416
loading full batch data spends  0.0029425621032714844
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.076957702636719e-05
step  0
else: feat size  torch.Size([1349, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 102, 4: 107, 5: 83, 6: 60, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cef0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cac8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfaac8>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e320>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ec50>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e8d0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea20>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e898>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e588>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e390>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f04403774a8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf08d0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ba90>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0438>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfa7f0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377c18>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf69b0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d198>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037dd30>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6748>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfaac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf62b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6c18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfac50>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02895832061767578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028963088989257812  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10376429557800293
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7909780740737915
loading full batch data spends  0.002956867218017578
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.363059997558594e-05
step  0
else: feat size  torch.Size([1363, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 101, 4: 109, 5: 83, 6: 61, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cef0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c470>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403774e0>
func(nbatch).neighbor  torch.Size([101, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cda0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377710>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c278>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c470>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403774e0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc18>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cda0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e978>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e390>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9e8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6a0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e358>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e898>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea20>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e320>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be9e48>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaa90>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc75a90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf69b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfac50>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ba90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6278>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02910900115966797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02911376953125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10273265838623047
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009267807006835938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.753211259841919
loading full batch data spends  0.002951383590698242
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.3392181396484375e-05
step  0
else: feat size  torch.Size([1363, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 94, 3: 106, 4: 107, 5: 86, 6: 61, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c128>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ceb8>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca58>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cac8>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cba8>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce80>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf98>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c978>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2b0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c860>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c710>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc50>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca20>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c278>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb00>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c080>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eba8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ec50>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea58>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e668>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e320>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e978>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e390>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e5f8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029107093811035156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029111862182617188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10879993438720703
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8022077083587646
loading full batch data spends  0.0030870437622070312
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.170967102050781e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 110, 5: 80, 6: 59, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce48>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c048>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c860>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c588>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca20>
func(nbatch).neighbor  torch.Size([80, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c940>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc88>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7b8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c438>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c240>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c3c8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c668>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4a8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c470>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6710>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca90>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e80>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6048>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf69b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6278>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6c18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf62b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029047489166259766  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029052257537841797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.100311279296875
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009246349334716797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7582014799118042
loading full batch data spends  0.0031566619873046875
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.3392181396484375e-05
step  0
else: feat size  torch.Size([1360, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 108, 5: 84, 6: 60, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9e8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2b0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b5f8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf7278>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d2e8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403ad3c8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be9e80>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf08d0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaf98>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bea5f8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaac8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c748>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf98>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cfd0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4e0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd68>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd30>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c128>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce48>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c048>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c588>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905750274658203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029062271118164062  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10053181648254395
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.759103775024414
loading full batch data spends  0.0029528141021728516
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.340576171875e-05
step  0
else: feat size  torch.Size([1350, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 105, 4: 109, 5: 83, 6: 59, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9b0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cda0>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e5c0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e320>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e3c8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eb00>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e588>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e668>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e978>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc75a90>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b5f8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beacc0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc758d0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7ac8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beb240>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403adef0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc75a58>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaf98>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bea5f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037df98>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6048>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc75a90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c748>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028958797454833984  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028963565826416016  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10302972793579102
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009198188781738281  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7703922986984253
loading full batch data spends  0.0029435157775878906
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.410743713378906e-05
step  0
else: feat size  torch.Size([1346, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 106, 5: 86, 6: 59, 7: 34, 8: 21, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf60>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7668>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7f98>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cdd8>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7b00>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c630>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cdd8>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037db70>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([627, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6a0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e588>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e390>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e860>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e358>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e320>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eb00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e3c8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beb240>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ba58>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be2128>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaac8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bc58d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc75a90>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028906822204589844  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028911590576171875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10522890090942383
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7566498517990112
loading full batch data spends  0.003078460693359375
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.075599670410156e-05
step  0
else: feat size  torch.Size([1363, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 109, 5: 85, 6: 60, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5f8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c048>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd68>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c358>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c438>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c080>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cfd0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0b8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c3c8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cac8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c320>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c940>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cdd8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c588>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c240>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c978>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cef0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce48>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e898>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eba8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ec50>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e8d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e978>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907276153564453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029077529907226562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10966801643371582
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009267807006835938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.738814353942871
loading full batch data spends  0.002866983413696289
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.315376281738281e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 105, 4: 110, 5: 86, 6: 58, 7: 33, 8: 21, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f04403e17b8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaeb8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaa90>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaef0>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0f0>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb38>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0b8>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2b0>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c470>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ceb8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cef0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf98>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc88>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c208>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c630>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c978>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cac8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd30>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c748>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cda0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02910757064819336  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02911233901977539  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10427308082580566
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7517794370651245
loading full batch data spends  0.00284576416015625
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.1961669921875e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 106, 4: 109, 5: 85, 6: 57, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb70>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c080>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e668>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cfd0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6be0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bc58d0>
func(nbatch).neighbor  torch.Size([57, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377c18>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc668>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7f98>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403e17b8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf58d0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc550>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc758d0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cfd0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0f0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6d8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c080>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c320>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca20>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c278>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf60>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cdd8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0291290283203125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02913379669189453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1013491153717041
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009288787841796875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7702465057373047
loading full batch data spends  0.0023026466369628906
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.5762786865234375e-05
step  0
else: feat size  torch.Size([1355, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 106, 4: 108, 5: 84, 6: 58, 7: 35, 8: 21, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c128>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cda0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e438>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e390>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e128>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e908>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e0f0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eba8>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6d8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e470>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc75a58>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e80>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc0b8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403e17b8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc748>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfcfd0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc550>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7940>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377240>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b710>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf5860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377c18>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6d8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c048>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028987407684326172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028992176055908203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09772443771362305
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.741532564163208
loading full batch data spends  0.004264354705810547
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.220008850097656e-05
step  0
else: feat size  torch.Size([1363, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 108, 5: 83, 6: 60, 7: 34, 8: 21, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc18>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c940>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403ad3c8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6748>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf7278>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e48>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c128>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf62b0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6710>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6c18>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e0f0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ec50>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6d8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e5c0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea20>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e400>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037bac8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfcda0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7f98>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037bac8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7940>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bead30>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7828>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029050827026367188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905559539794922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10538935661315918
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009267807006835938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7439849376678467
loading full batch data spends  0.0023086071014404297
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.361701965332031e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 106, 5: 86, 6: 59, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9b0>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce80>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c898>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cfd0>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0b8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ccf8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c128>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c908>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6d8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c978>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6d8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc18>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c278>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c908>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c320>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c438>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e160>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e668>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e588>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e5f8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ecc0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e390>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea58>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029117584228515625  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029122352600097656  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10445523262023926
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7641992568969727
loading full batch data spends  0.0023033618927001953
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.4809112548828125e-05
step  0
else: feat size  torch.Size([1366, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 104, 4: 107, 5: 85, 6: 59, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c860>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9e8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb70>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cac8>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0b8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd30>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c240>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c630>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cfd0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf60>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cda0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c3c8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c908>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2b0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c358>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c128>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c588>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c048>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4a8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c320>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e668>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029139995574951172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029144763946533203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.109344482421875
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00928354263305664  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7344214916229248
loading full batch data spends  0.0036513805389404297
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.459785461425781e-05
step  0
else: feat size  torch.Size([1356, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 106, 5: 85, 6: 59, 7: 35, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037db00>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d160>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e128>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037dd30>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfaac8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403ad3c8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beacc0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6748>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beb518>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0668>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0b8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c898>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cfd0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cac8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9e8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce80>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c978>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cda0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c3c8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029066085815429688  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907085418701172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11011886596679688
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7429101467132568
loading full batch data spends  0.003309011459350586
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.314018249511719e-05
step  0
else: feat size  torch.Size([1356, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 109, 5: 84, 6: 60, 7: 33, 8: 21, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037db70>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037db00>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d0b8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037df98>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ecc0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9b0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea20>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e390>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e588>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e860>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf5860>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf64a8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0438>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf7278>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037db70>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beb240>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0fd0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037df98>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0668>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beacc0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beefd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d2e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d0b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c240>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028980255126953125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028985023498535156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09877228736877441
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00923013687133789  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.738257646560669
loading full batch data spends  0.0032548904418945312
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.8160552978515625e-05
step  0
else: feat size  torch.Size([1363, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 106, 4: 109, 5: 84, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c438>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c240>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403779b0>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfcb00>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377978>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377e80>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377710>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377c18>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377278>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377e80>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9b0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e908>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e320>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6a0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eba8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e860>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e668>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e3c8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beb240>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf7278>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6748>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beb240>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf69b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf62b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaeb8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029132366180419922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029137134552001953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10648393630981445
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7312413454055786
loading full batch data spends  0.0023763179779052734
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.5762786865234375e-05
step  0
else: feat size  torch.Size([1360, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 103, 4: 109, 5: 86, 6: 60, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc18>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc88>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5f8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c080>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c048>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0b8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c3c8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c978>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c208>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4a8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cda0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc50>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c438>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb38>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c588>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c278>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cac8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e7f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e390>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e8d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea20>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e3c8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eb00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e320>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029073238372802734  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029078006744384766  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10295701026916504
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009251594543457031  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7577787637710571
loading full batch data spends  0.0023832321166992188
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.409385681152344e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 110, 5: 85, 6: 60, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7b8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb70>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9b0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c940>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c128>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cef0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca90>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cda0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c588>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c278>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5c0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6d8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cbe0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bead30>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf60>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c748>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beafd0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4e0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaef0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beafd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c748>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaeb8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e390>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ecc0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02906036376953125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02906513214111328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10734748840332031
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7472087144851685
loading full batch data spends  0.004401206970214844
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.8623809814453125e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 110, 5: 84, 6: 60, 7: 34, 8: 21, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377978>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0438>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403774e0>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377e48>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7ac8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beefd0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf8d68>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bead30>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403adef0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaf98>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb70>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9b0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cfd0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca90>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c940>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6d8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4a8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc50>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf64a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4e0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4e0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02898693084716797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02899169921875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10385847091674805
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7678675651550293
loading full batch data spends  0.002646923065185547
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.4345855712890625e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 103, 4: 107, 5: 86, 6: 59, 7: 33, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0fd0>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf08d0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0438>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e5c0>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e588>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e470>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eb00>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e908>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6d8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e400>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6278>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfa208>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7ac8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfaac8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7940>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bead30>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfcfd0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7ac8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf58d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6048>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7b00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0fd0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beae80>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7940>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cdd8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029078960418701172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029083728790283203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10347580909729004
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.849489450454712
loading full batch data spends  0.002712726593017578
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.553794860839844e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 103, 4: 110, 5: 87, 6: 58, 7: 33, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cef0>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc668>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c358>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc748>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c278>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c080>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc518>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c860>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4a8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ecc0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e400>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e390>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e320>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e668>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e908>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eb00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e5c0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfcda0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037dac8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7b00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfc630>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc75a90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf08d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7ac8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029062747955322266  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029067516326904297  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10260701179504395
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009235858917236328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7308979034423828
loading full batch data spends  0.002386808395385742
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.409385681152344e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 94, 3: 105, 4: 110, 5: 83, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cbe0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb00>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5f8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce80>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c978>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cda0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5c0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4e0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cba8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c240>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf60>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c710>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c080>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cef0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cac8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea20>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e588>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6a0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e0f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e5c0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ecc0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e400>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02912759780883789  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029132366180419922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09554481506347656
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.73838472366333
loading full batch data spends  0.0035691261291503906
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.2438507080078125e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 108, 5: 83, 6: 61, 7: 33, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c048>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c710>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7b8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4a8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc88>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c080>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc50>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cac8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc18>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0b8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bead30>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cdd8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfaac8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beae80>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf60>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaa90>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bead30>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0fd0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beacc0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c358>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cdd8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaac8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028998851776123047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029003620147705078  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10380125045776367
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8018983602523804
loading full batch data spends  0.0028409957885742188
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.601478576660156e-05
step  0
else: feat size  torch.Size([1374, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 101, 4: 108, 5: 85, 6: 60, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c860>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4e0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5f8>
func(nbatch).neighbor  torch.Size([101, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c470>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfcfd0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403adef0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0fd0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfac50>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc0b8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfce10>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377710>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403774a8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaac8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377be0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377e48>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beacc0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377278>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaeb8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaf98>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc18>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ccf8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c978>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0292205810546875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02922534942626953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1051473617553711
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7782833576202393
loading full batch data spends  0.003300905227661133
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.863739013671875e-05
step  0
else: feat size  torch.Size([1362, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 102, 4: 107, 5: 85, 6: 61, 7: 34, 8: 21, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e828>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e160>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e668>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ec50>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e470>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c358>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c630>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0f0>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd30>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4a8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf06a0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be9e80>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaeb8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beae80>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf5860>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaf98>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beae80>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ba90>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf08d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403adef0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037bac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bea5f8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be9e80>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beacc0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029015064239501953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029019832611083984  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10726141929626465
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009262561798095703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8046855926513672
loading full batch data spends  0.0023179054260253906
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.504753112792969e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 109, 5: 87, 6: 60, 7: 34, 8: 21, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c908>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c438>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c3c8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ccf8>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c080>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ceb8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c898>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc18>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9e8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0f0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca20>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6d8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cba8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c748>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd30>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403ad3c8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfac50>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be9e80>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfa208>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beb240>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfac50>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904510498046875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904987335205078  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10677552223205566
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.763780951499939
loading full batch data spends  0.004209756851196289
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.00543212890625e-05
step  0
else: feat size  torch.Size([1360, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 110, 5: 85, 6: 60, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e7f0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e390>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e160>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e588>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e898>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e5c0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c128>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4a8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c978>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cdd8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c860>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf98>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc88>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c080>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c908>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c438>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c3c8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c470>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c320>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c898>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca58>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029110431671142578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02911520004272461  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10157990455627441
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009251594543457031  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7861460447311401
loading full batch data spends  0.0030906200408935547
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.410743713378906e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 109, 5: 85, 6: 61, 7: 35, 8: 23, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e0f0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eb00>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6be0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e48>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7940>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6748>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6710>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7b00>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7668>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6278>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cda0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc88>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c080>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cba8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb70>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf98>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5c0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c860>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ccf8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c240>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c208>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c048>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5f8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029035568237304688  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904033660888672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11099648475646973
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7582954168319702
loading full batch data spends  0.0034008026123046875
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.437301635742188e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 102, 4: 109, 5: 83, 6: 59, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beae80>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaac8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0f0>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beafd0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7f98>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc668>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e80>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7828>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf08d0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf64a8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e7f0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e5c0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eb00>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ecc0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037db00>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e5f8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e5c0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beafd0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaf98>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e5f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beae80>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaeb8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e8d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e400>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029010295867919922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029015064239501953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10127687454223633
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.750675916671753
loading full batch data spends  0.003155946731567383
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.315376281738281e-05
step  0
else: feat size  torch.Size([1361, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 107, 5: 83, 6: 59, 7: 35, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c748>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd68>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce48>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc50>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce80>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6d8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cef0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e588>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c438>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cef0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037db00>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfcda0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6278>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0668>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037bac8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b828>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bead30>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf69b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d2e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beae80>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf62b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037db00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bea5f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6278>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaef0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029073238372802734  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029078006744384766  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10817742347717285
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.750089168548584
loading full batch data spends  0.003984928131103516
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.8650970458984375e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 109, 5: 85, 6: 60, 7: 33, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c630>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca90>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c208>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c128>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c320>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7b8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0f0>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c748>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2b0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c358>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e668>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e898>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ebe0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e438>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e128>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e7f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0668>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bc58d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037bac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beeda0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc75a90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaeb8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b828>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029006481170654297  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029011249542236328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10740494728088379
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009246349334716797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7304596900939941
loading full batch data spends  0.0031938552856445312
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.220008850097656e-05
step  0
else: feat size  torch.Size([1360, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 108, 5: 84, 6: 59, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5f8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd30>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c908>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c278>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c828>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cfd0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce48>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c668>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c048>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc50>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca90>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c898>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4e0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca58>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cef0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c358>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e320>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eba8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e3c8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6d8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e978>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02906322479248047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0290679931640625  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10528922080993652
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7642611265182495
loading full batch data spends  0.002306699752807617
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.2901763916015625e-05
step  0
else: feat size  torch.Size([1356, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 109, 5: 83, 6: 61, 7: 34, 8: 21, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c320>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4e0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb00>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc88>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c898>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cba8>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beae80>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca20>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaf98>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9e8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c128>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf69b0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc88>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6be0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc88>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6048>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf62b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c470>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6278>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf64a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf62b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6be0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eba8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029045581817626953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029050350189208984  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1027681827545166
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00923013687133789  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7207205295562744
loading full batch data spends  0.0030736923217773438
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.315376281738281e-05
step  0
else: feat size  torch.Size([1346, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 108, 5: 85, 6: 59, 7: 35, 8: 22, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c438>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0f0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9b0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc50>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ba90>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7b00>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beefd0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfcfd0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beefd0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfce10>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beacc0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc0b8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaac8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bead30>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaeb8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaac8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c940>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c828>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c860>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd30>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6d8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cbe0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cfd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02890157699584961  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02890634536743164  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11069035530090332
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7061187028884888
loading full batch data spends  0.005737781524658203
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.6743621826171875e-05
step  0
else: feat size  torch.Size([1369, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 105, 4: 108, 5: 82, 6: 60, 7: 35, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c470>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c438>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c208>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eba8>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea20>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e128>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e3c8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6d8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e8d0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377710>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf69b0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc758d0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bea5f8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beed30>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf5860>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaeb8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b828>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf58d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaef0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf62b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037df98>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bea5f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6358>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029142379760742188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02914714813232422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10408878326416016
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009299755096435547  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6929619312286377
loading full batch data spends  0.003186941146850586
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.839897155761719e-05
step  0
else: feat size  torch.Size([1361, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 108, 5: 84, 6: 60, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cef0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cdd8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6be0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfcfd0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6278>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf64a8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beb518>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6c18>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beb240>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6748>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea20>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea58>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e320>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e5c0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9e8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e8d0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ebe0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e0f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf58d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0668>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc0b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beefd0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beacc0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bead30>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907276153564453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029077529907226562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10959839820861816
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.73757803440094
loading full batch data spends  0.004151105880737305
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.626678466796875e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 106, 4: 110, 5: 82, 6: 59, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c240>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c470>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c978>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c208>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc18>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce48>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c710>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c668>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5c0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c278>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd68>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cef0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc50>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0b8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e160>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e3c8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6a0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e128>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e0f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e390>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e320>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029063701629638672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029068470001220703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10114789009094238
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.715789556503296
loading full batch data spends  0.0023005008697509766
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.4332275390625e-05
step  0
else: feat size  torch.Size([1347, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 109, 5: 86, 6: 61, 7: 35, 8: 23, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377978>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377c18>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd68>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2b0>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cfd0>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c128>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c278>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb70>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c898>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([634, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9e8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c630>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c080>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cac8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6d8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca20>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cda0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c630>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6d8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c080>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf60>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e3c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eba8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02903461456298828  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029039382934570312  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10622525215148926
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6823312044143677
loading full batch data spends  0.0031850337982177734
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.409385681152344e-05
step  0
else: feat size  torch.Size([1362, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 98, 3: 104, 4: 109, 5: 85, 6: 60, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7f98>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c470>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037db70>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037df98>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfc630>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6c18>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377978>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b5f8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377c18>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfce10>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c240>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ccf8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce48>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9b0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c588>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc18>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd68>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cfd0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c128>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c278>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca58>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029099464416503906  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029104232788085938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10127115249633789
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009262561798095703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6974034309387207
loading full batch data spends  0.003080129623413086
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.315376281738281e-05
step  0
else: feat size  torch.Size([1371, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 104, 4: 109, 5: 82, 6: 60, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d198>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037df98>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037dd30>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea58>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6d8>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e438>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e390>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea20>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eb00>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e7f0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf5cf8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7f98>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037dac8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf5cf8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beafd0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfce10>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf58d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be9e48>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037dd30>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf5cf8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d198>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c208>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ccf8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029181957244873047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029186725616455078  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10654568672180176
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7011277675628662
loading full batch data spends  0.002313375473022461
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.337860107421875e-05
step  0
else: feat size  torch.Size([1353, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 103, 4: 110, 5: 85, 6: 60, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c470>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7b8>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf62b0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c630>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6048>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6358>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0b8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c048>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6710>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6320>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eba8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e7f0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e3c8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e320>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e358>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea20>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e390>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea58>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be9e80>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc758d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfc630>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beb240>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377f60>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d198>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf58d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029058456420898438  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02906322479248047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10784745216369629
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009214401245117188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.698946475982666
loading full batch data spends  0.002494335174560547
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.2438507080078125e-05
step  0
else: feat size  torch.Size([1347, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 94, 3: 104, 4: 110, 5: 83, 6: 58, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb70>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf60>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb00>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce48>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4e0>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc50>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0f0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([627, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c668>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6d8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c940>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cfd0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e5f8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6d8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e5c0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ecc0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e828>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea58>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eba8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e7f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e128>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028913497924804688  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02891826629638672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10094475746154785
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7019599676132202
loading full batch data spends  0.003178834915161133
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.266334533691406e-05
step  0
else: feat size  torch.Size([1345, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 109, 5: 83, 6: 60, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc50>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cef0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9e8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cbe0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c320>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c940>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c898>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c438>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6d8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c240>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c630>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c588>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e80>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cac8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e48>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6748>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c3c8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6278>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf69b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c668>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6048>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf64a8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028950214385986328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02895498275756836  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09722518920898438
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009171485900878906  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7194820642471313
loading full batch data spends  0.0028357505798339844
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.291534423828125e-05
step  0
else: feat size  torch.Size([1366, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 107, 5: 86, 6: 59, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca20>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce48>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ebe0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4e0>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf5b38>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beb240>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ba90>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d2e8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403e17b8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ba90>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f04403774e0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfcb00>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377e80>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377278>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377f60>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2b0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c978>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c080>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf60>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c748>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4e0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02918386459350586  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02918863296508789  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09958124160766602
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7347533702850342
loading full batch data spends  0.002330780029296875
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.24249267578125e-05
step  0
else: feat size  torch.Size([1351, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 109, 5: 85, 6: 59, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cac8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cba8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e898>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea58>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e0f0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e160>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e828>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e7f0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e860>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f04403e17b8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beae80>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e80>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403774e0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d198>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc75a90>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d2e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc758d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d160>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d198>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377f60>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037dd30>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037db70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc75a90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0290069580078125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02901172637939453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10385608673095703
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009203433990478516  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.749350905418396
loading full batch data spends  0.002285003662109375
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.4332275390625e-05
step  0
else: feat size  torch.Size([1346, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 103, 4: 107, 5: 86, 6: 61, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c3c8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaa90>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaef0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce48>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bead30>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaef0>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce48>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cba8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beacc0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e320>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e828>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e358>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e8d0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e668>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea58>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e160>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e0f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc518>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403e17b8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377e80>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d160>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc75a90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc758d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d198>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029072284698486328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907705307006836  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10446023941040039
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7590287923812866
loading full batch data spends  0.003177642822265625
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.147125244140625e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 105, 5: 87, 6: 61, 7: 35, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7b8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb00>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cda0>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c668>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca20>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c860>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c278>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c438>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc50>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c3c8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce48>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9b0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ceb8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cba8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ccf8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c320>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e390>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eba8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eb00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ec50>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea20>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e860>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02919769287109375  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02920246124267578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10370397567749023
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009297370910644531  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.731189489364624
loading full batch data spends  0.0022978782653808594
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.314018249511719e-05
step  0
else: feat size  torch.Size([1341, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 105, 4: 107, 5: 83, 6: 59, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfac50>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377748>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfa1d0>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfac50>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb70>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cbe0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c278>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf60>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0b8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cfd0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c320>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2b0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce80>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd30>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c940>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ccf8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c978>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb38>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca58>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c048>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cac8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028953075408935547  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028957843780517578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10459351539611816
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7214221954345703
loading full batch data spends  0.0022902488708496094
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.361701965332031e-05
step  0
else: feat size  torch.Size([1348, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 102, 4: 110, 5: 85, 6: 61, 7: 33, 8: 23, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6278>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e48>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9e8>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6320>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf7278>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beb518>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bc58d0>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037df98>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b828>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be9e48>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7b8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca90>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c320>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf60>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2b0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c630>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c438>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cef0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c898>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c240>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c588>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb38>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02895832061767578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028963088989257812  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10491561889648438
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009187698364257812  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.723599910736084
loading full batch data spends  0.0030946731567382812
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.363059997558594e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 103, 4: 110, 5: 86, 6: 59, 7: 34, 8: 20, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf64a8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6be0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e5c0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e400>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea20>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e160>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e978>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e5f8>
func(nbatch).neighbor  torch.Size([20, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e860>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ecc0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf58d0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beeda0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beae80>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beb240>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037df98>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc75a58>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc75a90>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaac8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf58d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c320>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c748>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc50>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c128>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02900409698486328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029008865356445312  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10483980178833008
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7007900476455688
loading full batch data spends  0.0031909942626953125
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.314018249511719e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 110, 5: 83, 6: 59, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9e8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0f0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c588>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6278>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cba8>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c588>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6c18>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c240>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c828>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf69b0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c588>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c828>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e978>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9b0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e860>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eba8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e358>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ec50>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beb240>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beeda0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beb240>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ba58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0438>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029024600982666016  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029029369354248047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10361361503601074
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009235858917236328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.693929672241211
loading full batch data spends  0.0022966861724853516
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.2901763916015625e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 109, 5: 84, 6: 59, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c128>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c978>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cfd0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc88>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce80>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca20>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c908>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc50>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c668>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2b0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c748>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c240>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c470>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c358>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c828>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e828>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ebe0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6d8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e320>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e400>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e7f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029016494750976562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029021263122558594  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10070586204528809
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.687759280204773
loading full batch data spends  0.0031113624572753906
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.410743713378906e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 105, 4: 109, 5: 84, 6: 60, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfa7f0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfac50>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca90>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4a8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c668>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc88>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c710>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf98>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([634, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2b0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c470>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6d8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9e8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd30>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cbe0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c240>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c048>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c438>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd68>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb38>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029145240783691406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029150009155273438  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10392332077026367
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009288787841796875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6866954565048218
loading full batch data spends  0.003089427947998047
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.4345855712890625e-05
step  0
else: feat size  torch.Size([1371, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 104, 4: 107, 5: 87, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfce10>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfcda0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea20>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaeb8>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfac50>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377f60>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7ac8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc75a90>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc0b8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6be0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c748>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c898>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cac8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0b8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0f0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf60>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cfd0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c828>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c3c8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6d8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029184341430664062  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029189109802246094  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1048123836517334
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7058950662612915
loading full batch data spends  0.0032033920288085938
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.24249267578125e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 109, 5: 86, 6: 59, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bead30>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beafd0>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaf98>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beacc0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e320>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eb00>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e358>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e400>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ebe0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e3c8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f04403774a8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403e17b8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037dac8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beb240>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaeb8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377f60>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf08d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bea5f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bead30>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0668>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfaac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaeb8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaf98>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029079437255859375  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029084205627441406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10914444923400879
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009235858917236328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.692949652671814
loading full batch data spends  0.0024857521057128906
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.363059997558594e-05
step  0
else: feat size  torch.Size([1365, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 109, 5: 84, 6: 59, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ceb8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf5860>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6710>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfc630>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6c18>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6be0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfcb00>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfcfd0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf69b0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eb00>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e0f0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e390>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e8d0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e5f8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e3c8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e908>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e898>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc0b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beb240>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7ac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc518>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7b00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc208>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029091358184814453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029096126556396484  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10183382034301758
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7339966297149658
loading full batch data spends  0.002246856689453125
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.3855438232421875e-05
step  0
else: feat size  torch.Size([1355, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 109, 5: 83, 6: 60, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ccf8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c748>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c940>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6d8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c438>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf60>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cda0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c668>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb38>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cdd8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c358>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca90>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca20>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ceb8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c048>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cbe0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e160>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e400>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e128>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e898>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e0f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e390>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029023170471191406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029027938842773438  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10066533088684082
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009224891662597656  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.703311800956726
loading full batch data spends  0.002946615219116211
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.1961669921875e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 106, 4: 109, 5: 83, 6: 61, 7: 33, 8: 20, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c358>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c630>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cfd0>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca20>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cdd8>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c588>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5f8>
func(nbatch).neighbor  torch.Size([20, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0f0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c710>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c208>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc748>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfcda0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc668>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c278>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c898>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc518>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc208>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c128>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e400>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e320>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029026031494140625  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029030799865722656  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1032717227935791
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.727713942527771
loading full batch data spends  0.004091739654541016
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.3392181396484375e-05
step  0
else: feat size  torch.Size([1366, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 105, 4: 108, 5: 85, 6: 60, 7: 35, 8: 21, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6278>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e48>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf64a8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6710>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf08d0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0668>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfa1d0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfcfd0>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377978>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf08d0>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9e8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd30>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cbe0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc50>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ceb8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c3c8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c358>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cdd8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c828>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c588>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029049396514892578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905416488647461  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10477399826049805
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00928354263305664  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7334539890289307
loading full batch data spends  0.002208232879638672
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.24249267578125e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 103, 4: 107, 5: 85, 6: 59, 7: 34, 8: 22, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6be0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6320>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e80>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eba8>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6d8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e668>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e320>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e0f0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e588>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e390>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf5860>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfcb00>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b828>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfcfd0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403774e0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be9e48>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377240>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf5b38>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beb240>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377f60>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd30>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc50>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028948307037353516  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028953075408935547  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11095380783081055
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7669494152069092
loading full batch data spends  0.003165721893310547
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.601478576660156e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 106, 4: 111, 5: 82, 6: 59, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b5f8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c860>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6c18>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ba90>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf64a8>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf69b0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b5f8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6320>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf62b0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6710>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6a0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e390>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e400>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e128>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e828>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e0f0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e320>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eba8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf58d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be9e48>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403774a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beb518>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0fd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf58d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beb240>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029129505157470703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029134273529052734  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1004173755645752
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009273052215576172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7546215057373047
loading full batch data spends  0.002364635467529297
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.838539123535156e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 109, 5: 84, 6: 59, 7: 35, 8: 21, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf98>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c080>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c358>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c898>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cda0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca90>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0b8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c278>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce80>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c128>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c748>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5c0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c470>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e8d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6d8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ec50>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e438>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ecc0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eba8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e390>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea58>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029074668884277344  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029079437255859375  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10158658027648926
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7893245220184326
loading full batch data spends  0.003378629684448242
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.363059997558594e-05
step  0
else: feat size  torch.Size([1365, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 108, 5: 84, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d0b8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d2e8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc75a90>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaa90>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc550>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaac8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaf98>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc208>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc550>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaef0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d160>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6be0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6358>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403774a8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6358>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d160>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377240>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377e48>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7b00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037dd30>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403774e0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7f98>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be7940>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377be0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377e48>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029104232788085938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02910900115966797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09889078140258789
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009278297424316406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7613083124160767
loading full batch data spends  0.004126787185668945
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.555152893066406e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 104, 4: 108, 5: 86, 6: 58, 7: 35, 8: 22, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb00>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc50>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e160>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c588>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc75a58>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf58d0>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e48>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc75a58>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6278>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf64a8>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf08d0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf06a0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377978>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b5f8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403774e0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403774a8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be9e80>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377be0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377748>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403774a8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377978>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4a8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cbe0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c828>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02898263931274414  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028987407684326172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1096489429473877
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7696855068206787
loading full batch data spends  0.0027341842651367188
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.38690185546875e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 110, 5: 83, 6: 59, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c908>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca20>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c860>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6a0>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eba8>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e8d0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6d8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eb00>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e908>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e588>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf06a0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be2128>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037b5f8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfcb00>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf8d68>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf08d0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc550>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6be0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377e80>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaa90>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6be0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377278>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377e48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6be0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029065608978271484  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029070377349853516  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10034561157226562
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7299429178237915
loading full batch data spends  0.0022013187408447266
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.24249267578125e-05
step  0
else: feat size  torch.Size([1356, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 106, 4: 108, 5: 82, 6: 58, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cdd8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c898>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5c0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c908>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca58>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0b8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c860>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c048>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e470>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eb00>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ec50>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9b0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e0f0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eba8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6d8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e8d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfac50>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be9e48>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377978>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf8d68>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf06a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be2128>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377748>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0290679931640625  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907276153564453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10324621200561523
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7212738990783691
loading full batch data spends  0.0030655860900878906
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.075599670410156e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 107, 5: 84, 6: 59, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cbe0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce80>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c588>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c940>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf60>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c710>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c358>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c748>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c898>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5f8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6d8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cac8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc88>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c978>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc50>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c208>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cef0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca58>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c860>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e828>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ecc0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e390>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e588>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905416488647461  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905893325805664  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10393428802490234
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009241104125976562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7320674657821655
loading full batch data spends  0.0021975040435791016
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.170967102050781e-05
step  0
else: feat size  torch.Size([1362, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 104, 4: 108, 5: 84, 6: 59, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c080>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c898>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca90>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c748>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4a8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf98>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cdd8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c358>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4e0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc50>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c278>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7b8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0f0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9b0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cef0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c860>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c978>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c3c8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5c0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c630>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc88>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029020309448242188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02902507781982422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1062772274017334
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7059509754180908
loading full batch data spends  0.0037276744842529297
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.9577484130859375e-05
step  0
else: feat size  torch.Size([1379, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 102, 4: 106, 5: 87, 6: 59, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f04403774a8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403774e0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e908>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377be0>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403adc88>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beacc0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be9e48>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403adc88>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037df98>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bead30>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c080>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c748>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c710>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4a8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cda0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ceb8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0b8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c588>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce48>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6d8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cba8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029236793518066406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029241561889648438  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10370779037475586
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009356021881103516  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7473127841949463
loading full batch data spends  0.00475311279296875
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.031990051269531e-05
step  0
else: feat size  torch.Size([1360, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 94, 3: 105, 4: 108, 5: 86, 6: 60, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f04403774a8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403774e0>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9e8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ec50>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e7f0>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e390>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e898>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ecc0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e3c8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e8d0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d198>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403adc88>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfaac8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d198>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf69b0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037db00>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfac50>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beacc0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beefd0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be9e80>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd30>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c710>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029178142547607422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029182910919189453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10626077651977539
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7588143348693848
loading full batch data spends  0.004069805145263672
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.0531158447265625e-05
step  0
else: feat size  torch.Size([1351, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 94, 3: 104, 4: 108, 5: 86, 6: 59, 7: 34, 8: 23, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca58>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c320>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c438>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377278>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cef0>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c438>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377240>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c208>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c048>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377710>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c438>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c048>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e898>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e6d8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e3c8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e5f8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e320>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e5c0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfaac8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403adc88>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d0b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403adef0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bfc630>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be9e80>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d160>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028944015502929688  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02894878387451172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1025702953338623
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009203433990478516  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7052215337753296
loading full batch data spends  0.0022971630096435547
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.2901763916015625e-05
step  0
else: feat size  torch.Size([1355, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 108, 5: 85, 6: 59, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4a8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9e8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c240>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4e0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c630>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc88>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c470>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c908>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd30>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5c0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c208>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cda0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c6a0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0b8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c390>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c048>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e400>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e908>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eb00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e9b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ec50>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e978>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907276153564453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029077529907226562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10158038139343262
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7182536125183105
loading full batch data spends  0.0038967132568359375
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.2928924560546875e-05
step  0
else: feat size  torch.Size([1344, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 108, 5: 85, 6: 59, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaa90>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beafd0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c240>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c860>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7f0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf28>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7b8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cfd0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5c0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c470>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc50>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb00>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c668>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c940>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9b0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ccf8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cda0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c080>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c588>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc18>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e908>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028969764709472656  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028974533081054688  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10348367691040039
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009166240692138672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7107970714569092
loading full batch data spends  0.0029299259185791016
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.172325134277344e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 103, 4: 109, 5: 85, 6: 59, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf64a8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e48>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e7f0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6be0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412be9e48>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403adef0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ba90>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d198>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0440377278>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc208>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4e0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c748>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c710>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c908>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c320>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc88>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce48>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7b8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5c0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd30>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c668>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c940>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c9b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02906942367553711  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907419204711914  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10304403305053711
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6901758909225464
loading full batch data spends  0.005373954772949219
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.125999450683594e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 105, 4: 109, 5: 85, 6: 57, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6748>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf64a8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e48>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf62b0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ea58>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e438>
func(nbatch).neighbor  torch.Size([57, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e320>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ec50>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eb00>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eba8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d160>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf58d0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403ad3c8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037db00>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403adc88>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaa90>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc75a58>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037d160>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c278>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c908>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c2b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4e0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c5f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c320>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028985023498535156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028989791870117188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1025850772857666
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6579793691635132
loading full batch data spends  0.0022170543670654297
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.170967102050781e-05
step  0
else: feat size  torch.Size([1350, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 102, 4: 110, 5: 85, 6: 58, 7: 33, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cdd8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce48>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6048>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bcc0b8>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6320>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6e48>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6be0>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6358>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf64a8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf6048>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e438>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e668>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e400>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e470>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ecc0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037eba8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e358>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e128>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf0438>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bc58d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412beaac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403ad3c8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f0412bf8d68>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f04403adef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044bc75a90>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028937816619873047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028942584991455078  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10029149055480957
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.740012764930725
loading full batch data spends  0.0029561519622802734
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.363059997558594e-05
step  0
else: feat size  torch.Size([1362, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 109, 5: 84, 6: 59, 7: 35, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc88>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cd30>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cef0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c940>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c4e0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cb00>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca20>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c128>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cba8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca58>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c7b8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ca90>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cf98>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038ce10>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038cc18>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c0f0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044038c3c8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e828>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ec50>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037ebe0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e320>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e128>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e0f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f044037e400>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029115676879882812  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029120445251464844  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1016237735748291
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009262561798095703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.682178020477295
Total (block generation + training)time/epoch 0.12170684576034546
pure train time/epoch 0.10853916284989337

num_input_list  [1342, 1367, 1347, 1359, 1348, 1366, 1368, 1366, 1349, 1361, 1357, 1358, 1365, 1368, 1384, 1357, 1358, 1357, 1369, 1358, 1364, 1348, 1358, 1350, 1348, 1364, 1361, 1358, 1368, 1373, 1357, 1371, 1355, 1347, 1351, 1354, 1369, 1368, 1381, 1358, 1358, 1366, 1358, 1360, 1365, 1366, 1350, 1365, 1367, 1347, 1356, 1349, 1374, 1357, 1359, 1365, 1371, 1352, 1359, 1354, 1367, 1356, 1369, 1352, 1364, 1352, 1362, 1359, 1358, 1361, 1346, 1362, 1370, 1364, 1368, 1359, 1359, 1361, 1351, 1366, 1363, 1354, 1365, 1351, 1373, 1371, 1352, 1348, 1370, 1368, 1343, 1357, 1352, 1368, 1354, 1356, 1363, 1375, 1352, 1364, 1352, 1357, 1353, 1367, 1355, 1346, 1364, 1358, 1374, 1370, 1356, 1370, 1367, 1364, 1361, 1363, 1361, 1371, 1368, 1353, 1352, 1354, 1349, 1363, 1363, 1359, 1360, 1350, 1346, 1363, 1368, 1367, 1355, 1363, 1367, 1366, 1356, 1356, 1363, 1360, 1357, 1354, 1364, 1357, 1367, 1354, 1374, 1362, 1357, 1360, 1352, 1354, 1361, 1359, 1360, 1356, 1346, 1369, 1361, 1354, 1347, 1362, 1371, 1353, 1347, 1345, 1366, 1351, 1346, 1368, 1341, 1348, 1359, 1357, 1357, 1367, 1371, 1357, 1365, 1355, 1358, 1366, 1359, 1364, 1359, 1365, 1357, 1354, 1356, 1358, 1362, 1379, 1360, 1351, 1355, 1344, 1357, 1354, 1350, 1362]
