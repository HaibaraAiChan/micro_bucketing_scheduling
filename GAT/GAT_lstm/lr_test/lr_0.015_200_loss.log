main start at this time 1695409298.801795
  NumNodes: 2708
  NumEdges: 10556
  NumFeats: 1433
  NumClasses: 7
  NumTrainingSamples: 140
  NumValidationSamples: 500
  NumTestSamples: 1000
Done loading data from cached files.
success----------------------------------------
140
500
2068
# Nodes: 2708
# Edges: 10556
# Train: 140
# Val: 500
# Test: 2068
# Classes: 7

in feats:  1433
loading full batch data spends  0.0026531219482421875
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   2.9325485229492188e-05
step  0
else: feat size  torch.Size([1342, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 105, 4: 109, 5: 83, 6: 58, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f9218f3a3c8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921006d2b0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921006d710>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921006d978>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921006dbe0>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921006de48>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f92100660f0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066358>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f92100665c0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066828>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e44080>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e440b8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e44518>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e44780>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e449e8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e44c50>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e44eb8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e47160>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e473c8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e47630>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e47898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e47b00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e47d68>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e47fd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e49278>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.552734375 GB
    Memory Allocated: 0.02727031707763672  GigaBytes
Max Memory Allocated: 0.027710914611816406  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.552734375 GB
    Memory Allocated: 0.02727508544921875  GigaBytes
Max Memory Allocated: 0.027710914611816406  GigaBytes

pure train time  0.5075135231018066
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.5625 GB
    Memory Allocated: 0.009155750274658203  GigaBytes
Max Memory Allocated: 0.027710914611816406  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9514586925506592
loading full batch data spends  0.005245685577392578
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.29425048828125e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 98, 3: 102, 4: 108, 5: 86, 6: 59, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f9218f3a390>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e49c88>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4d0b8>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4d320>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4d588>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921006dc18>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921006de80>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e44a20>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e47b00>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210093e48>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4d8d0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4d908>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4dd68>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4dfd0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e51278>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e514e0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e51748>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e519b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e51c18>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e51e80>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e67128>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e67390>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e675f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e67860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e67ac8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905416488647461  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905893325805664  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.12445878982543945
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009288787841796875  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9456281661987305
loading full batch data spends  0.005264997482299805
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.271766662597656e-05
step  0
else: feat size  torch.Size([1347, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 109, 5: 85, 6: 57, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f9218f24cc0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e624e0>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e62940>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e62ba8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e62e10>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e750b8>
func(nbatch).neighbor  torch.Size([57, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75320>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75588>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e757f0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75a58>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6e198>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4db00>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4dd68>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e675f8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9218f249e8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e62978>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75fd0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6e0b8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6e390>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6e5f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6e860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6eac8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ed30>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ef98>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e53240>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028745651245117188  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02875041961669922  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.126509428024292
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009182453155517578  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9485952854156494
loading full batch data spends  0.00455474853515625
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   0.00011610984802246094
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 111, 5: 83, 6: 59, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4d550>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e53da0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e770f0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e77358>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e775c0>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e77828>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e77a90>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e77cf8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e77f60>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e79208>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e79a20>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e79a58>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e79eb8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b160>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b3c8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b630>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b898>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb00>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bd68>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ed30>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6eb00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e53d68>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e775f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e794a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb38>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028865814208984375  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028870582580566406  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.12399005889892578
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009246349334716797  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9449454545974731
loading full batch data spends  0.005319833755493164
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.270408630371094e-05
step  0
else: feat size  torch.Size([1348, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 105, 4: 111, 5: 82, 6: 59, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e67b38>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e4a8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e908>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4eb70>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4edd8>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e76080>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e762e8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e76550>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e767b8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e76a20>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a278>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a2b0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a710>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a978>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7abe0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae48>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d0f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d358>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d5c0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d828>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7da90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7dcf8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df60>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6f208>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6f470>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02881908416748047  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0288238525390625  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.12453651428222656
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009187698364257812  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9449166059494019
loading full batch data spends  0.004855632781982422
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.818771362304688e-05
step  0
else: feat size  torch.Size([1366, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 103, 4: 107, 5: 85, 6: 60, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a358>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e76320>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e53518>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6f550>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6f6a0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fa58>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fbe0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fe10>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f92100290f0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029358>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029a58>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029a90>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029ef0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064198>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064400>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064668>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f92100648d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064b38>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064da0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70048>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e702b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70518>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70780>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e709e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70c50>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02897787094116211  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02898263931274414  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.12546563148498535
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00928354263305664  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9435760974884033
loading full batch data spends  0.0042629241943359375
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.245208740234375e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 104, 4: 111, 5: 85, 6: 59, 7: 33, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a710>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002b6a0>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bb00>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bd68>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fbe0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6f9b0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064668>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70080>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4edd8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bb38>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f3c8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f400>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f860>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fac8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fd30>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4ff98>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028240>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f92100284a8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028710>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028978>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028be0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028e48>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c0f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5c0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904653549194336  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905130386352539  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.12322878837585449
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009294509887695312  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9466255903244019
loading full batch data spends  0.004942893981933594
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.723403930664062e-05
step  0
else: feat size  torch.Size([1366, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 105, 4: 107, 5: 86, 6: 58, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cc0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df98>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b3c8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b630>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b240>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5f8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b208>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b438>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b6a0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b710>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064668>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fe10>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f860>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4edd8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f400>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f5f8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6f9b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f898>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fb00>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4ffd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f92100284e0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4ffd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028be0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028748>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028983116149902344  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028987884521484375  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.12379574775695801
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00928354263305664  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9404933452606201
loading full batch data spends  0.004834890365600586
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.984306335449219e-05
step  0
else: feat size  torch.Size([1349, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 108, 5: 85, 6: 60, 7: 34, 8: 21, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bbe0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e705f8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70f28>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df98>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70f98>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70b00>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70f28>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028c18>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5c0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b4a8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b1d0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b4e0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b208>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b400>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b240>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b630>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fe48>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064438>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cf8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6f9b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fe48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cf8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f860>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02893972396850586  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02894449234008789  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.12349414825439453
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009294509887695312  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9318065643310547
loading full batch data spends  0.004532575607299805
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.580352783203125e-05
step  0
else: feat size  torch.Size([1361, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 108, 5: 85, 6: 57, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4ffd0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cda0>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc50>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c358>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c3c8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c438>
func(nbatch).neighbor  torch.Size([57, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb70>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c588>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cba8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c8d0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c0f0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6a0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b940>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9e8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bba8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b588>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b6a0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5f8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b470>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b860>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b8d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b668>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028944969177246094  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028949737548828125  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.12144708633422852
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009256839752197266  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9329537153244019
loading full batch data spends  0.005863666534423828
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.867813110351562e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 105, 4: 106, 5: 85, 6: 58, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70b00>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066908>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cba8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c630>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c828>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb38>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6d8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c470>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c438>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cda0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c860>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c908>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c8d0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c7f0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca90>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce80>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cf28>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e49240>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca90>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cdd8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b4a8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bba8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028942108154296875  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028946876525878906  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.1254897117614746
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009294509887695312  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9292131662368774
loading full batch data spends  0.0044672489166259766
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.365776062011719e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 103, 4: 107, 5: 85, 6: 61, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70e80>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028f60>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf98>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b6d8>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cf8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066908>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fe48>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e492e8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae80>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e796d8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b470>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b3c8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bef0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b828>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf98>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bda0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bfd0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b6a0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028f60>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be80>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f92100284e0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028710>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6beb8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028be0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f92100289b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02898550033569336  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02899026870727539  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.12106060981750488
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009241104125976562  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9334222078323364
loading full batch data spends  0.005272865295410156
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.224082946777344e-05
step  0
else: feat size  torch.Size([1365, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 104, 4: 110, 5: 84, 6: 60, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bdd8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e49630>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e492e8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6f9b0>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fc18>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028e48>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb70>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5c0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cac8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c128>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f9218f3a2e8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae80>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6f9b0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70b00>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70e80>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028710>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028e80>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6f9b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028be0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028e48>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bdd8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028748>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b400>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029027462005615234  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029032230377197266  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.12330889701843262
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009294509887695312  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9292621612548828
loading full batch data spends  0.004419088363647461
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.340576171875e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 102, 4: 109, 5: 84, 6: 60, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064668>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028278>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f92100289b0>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc50>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028240>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be80>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9b0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f92100284e0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bda0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e908>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f92100289b0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b710>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9e8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028e48>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c0f0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cac8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c470>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c8d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70f28>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a278>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029b38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70080>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002b278>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fe10>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae80>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029061317443847656  GigaBytes
Max Memory Allocated: 0.029604434967041016  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029066085815429688  GigaBytes
Max Memory Allocated: 0.029604434967041016  GigaBytes

pure train time  0.12277650833129883
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009294509887695312  GigaBytes
Max Memory Allocated: 0.029604434967041016  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.920810580253601
loading full batch data spends  0.0048370361328125
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.771087646484375e-05
step  0
else: feat size  torch.Size([1384, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 108, 5: 84, 6: 58, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a2b0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5f8>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5c0>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b6a0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b860>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bbe0>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b908>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6beb8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba20>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9b0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b278>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028e80>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bfd0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f92100284a8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028710>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028278>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028e48>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028f60>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028be0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce10>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c8d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cba8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029236316680908203  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029241085052490234  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11827325820922852
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9187742471694946
loading full batch data spends  0.003458261489868164
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.221366882324219e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 108, 5: 86, 6: 58, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066908>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b978>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b630>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b400>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bba8>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b6d8>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcf8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b748>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bdd8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b6a0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b860>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b668>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b4a8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb38>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd68>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b278>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc50>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6beb8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b240>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b1d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf98>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029030323028564453  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029035091400146484  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11568188667297363
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009235858917236328  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9153562784194946
loading full batch data spends  0.002325773239135742
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.504753112792969e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 94, 3: 103, 4: 109, 5: 86, 6: 59, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bdd8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70f28>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cef0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c7f0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029b38>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e79b00>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b6d8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b978>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcf8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5f8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd68>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028c18>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bef0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba20>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f92100289b0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b908>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b080>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f92100284e0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc18>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bef0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bef0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f5f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b828>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029059886932373047  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029064655303955078  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11629438400268555
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.923341155052185
loading full batch data spends  0.0025975704193115234
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.1961669921875e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 109, 5: 83, 6: 59, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca20>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70e80>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70080>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba58>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf98>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb70>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7f0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5c0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bfd0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b470>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75cf8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066908>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7dd30>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d390>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cc0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70080>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f860>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066908>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70a20>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066908>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c8d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c978>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70518>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029006004333496094  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029010772705078125  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12047219276428223
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009235858917236328  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9066672325134277
loading full batch data spends  0.0049173831939697266
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.4836273193359375e-05
step  0
else: feat size  torch.Size([1369, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 102, 4: 108, 5: 85, 6: 60, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c908>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca20>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c390>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9b0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6beb8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc18>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b630>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be48>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b908>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b978>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcc0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc88>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7b8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b470>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bef0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b748>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b860>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bb00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bdd8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cc0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bac8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bdd8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028e48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028710>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907562255859375  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02908039093017578  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12337160110473633
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9245468378067017
loading full batch data spends  0.004828453063964844
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.604194641113281e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 108, 5: 84, 6: 58, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f92100284e0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70e80>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70080>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70518>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70f98>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70b00>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc50>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be80>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b358>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b710>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b080>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b438>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b1d0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc18>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be48>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7f0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba20>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd68>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5f8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b048>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b6a0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf28>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5c0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02899026870727539  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028995037078857422  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.1224672794342041
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009241104125976562  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8911237716674805
loading full batch data spends  0.005612611770629883
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.316734313964844e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 98, 3: 106, 4: 107, 5: 82, 6: 59, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028240>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c898>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cba8>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb70>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce48>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c908>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c438>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccc0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c978>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c390>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9e8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce48>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b630>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bba8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b080>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be10>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b588>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b208>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc50>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b8d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b198>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b160>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6beb8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf60>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905130386352539  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029056072235107422  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12460994720458984
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9167691469192505
loading full batch data spends  0.004544258117675781
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.818771362304688e-05
step  0
else: feat size  torch.Size([1348, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 111, 5: 83, 6: 60, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028278>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca90>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cf28>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cda0>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f92100295f8>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029710>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75e10>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029b38>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4d358>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e47da0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b358>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb38>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd68>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb00>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcf8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b160>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc18>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd68>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b198>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c390>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029033184051513672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029037952423095703  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12095832824707031
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009187698364257812  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8967477083206177
loading full batch data spends  0.0052187442779541016
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.224082946777344e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 110, 5: 82, 6: 60, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b630>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ac18>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b4a8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a978>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce48>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6a0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cda0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c978>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6d8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca90>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70f28>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75e48>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f92100289b0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e79b00>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028240>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4d6a0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f92100289b0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e550>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a278>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028e80>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ac18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae80>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028748>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f92100284a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f92100289b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029013633728027344  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029018402099609375  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12331819534301758
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8870158195495605
loading full batch data spends  0.0022356510162353516
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.600120544433594e-05
step  0
else: feat size  torch.Size([1350, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 109, 5: 86, 6: 59, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bef0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b780>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccc0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c438>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cba8>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c828>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c898>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5c0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c8d0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c358>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb70>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9b0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc88>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c470>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cf28>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce48>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5f8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cda0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75e48>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75cf8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028240>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e796d8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75e10>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75cf8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028748>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028991222381591797  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028995990753173828  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11934804916381836
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009198188781738281  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8857369422912598
loading full batch data spends  0.0052547454833984375
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.2479248046875e-05
step  0
else: feat size  torch.Size([1348, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 103, 4: 110, 5: 86, 6: 59, 7: 33, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b828>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a080>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ac18>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b630>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cc0>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a2e8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bc18>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be10>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c358>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c438>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c940>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca20>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb38>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c898>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc18>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c828>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c128>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce80>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cba8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccc0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cdd8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cf28>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c978>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c630>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02902507781982422  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02902984619140625  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12932538986206055
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8854607343673706
loading full batch data spends  0.005881309509277344
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   8.106231689453125e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 103, 4: 109, 5: 83, 6: 60, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029438>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb00>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be10>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9e8>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5f8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb38>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcf8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be48>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2e8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b198>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b630>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70d30>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70080>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70b00>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70f28>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c390>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c940>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c668>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccf8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5c0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc50>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c7f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029078960418701172  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029083728790283203  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12400245666503906
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009273052215576172  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9014297723770142
loading full batch data spends  0.004074811935424805
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.650520324707031e-05
step  0
else: feat size  torch.Size([1361, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 102, 4: 108, 5: 85, 6: 60, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029b38>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae48>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c438>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a278>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4d6a0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb70>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e79b00>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e705f8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028c18>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70b00>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b240>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcc0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9e8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bba8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5f8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b4a8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd30>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bef0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b208>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b048>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcf8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a278>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029082298278808594  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029087066650390625  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12530255317687988
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9002012014389038
loading full batch data spends  0.0056455135345458984
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.4836273193359375e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 109, 5: 84, 6: 58, 7: 33, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae48>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cdd8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c390>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6d8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c438>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb38>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce48>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c898>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c908>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccf8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([627, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029438>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029710>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e518>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f92100289b0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a9b0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e550>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029438>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028c18>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f92100289b0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a080>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a9b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b1d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b828>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028963088989257812  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028967857360839844  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11719703674316406
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009241104125976562  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8841674327850342
loading full batch data spends  0.0057947635650634766
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   8.273124694824219e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 103, 4: 111, 5: 83, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a978>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb00>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c978>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c668>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c7f0>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccc0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c358>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c438>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca90>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c8d0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cdd8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cf28>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9e8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb38>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c828>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cef0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c898>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ceb8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e518>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e550>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e705f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e53518>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f92100284a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70d30>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70f98>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029140472412109375  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029145240783691406  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11833643913269043
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8807460069656372
loading full batch data spends  0.005288600921630859
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.1975250244140625e-05
step  0
else: feat size  torch.Size([1373, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 106, 5: 86, 6: 58, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be48>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a278>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ac18>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5f8>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae80>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae48>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064438>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064668>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a080>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae48>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccc0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c320>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb00>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5f8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cdd8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c358>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca90>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6a0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc18>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c3c8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce10>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c400>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029159069061279297  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029163837432861328  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.1039583683013916
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009321212768554688  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8873027563095093
loading full batch data spends  0.003620624542236328
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.151199340820312e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 102, 4: 110, 5: 84, 6: 61, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e53668>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb38>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b6d8>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bfd0>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5c0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5f8>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba90>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b3c8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bda0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba58>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b198>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b470>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6beb8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bdd8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc18>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c7f0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5f8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c438>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cdd8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6d8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c940>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc18>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904653549194336  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905130386352539  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.10673928260803223
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.900915265083313
loading full batch data spends  0.0029501914978027344
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.4345855712890625e-05
step  0
else: feat size  torch.Size([1371, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 103, 4: 109, 5: 86, 6: 58, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064668>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccf8>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a278>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae80>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028e80>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e496d8>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e79b00>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cf8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e53518>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e53668>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba90>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b240>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b3c8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b6a0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bda0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b6d8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b160>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b710>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b198>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b748>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b048>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae80>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a278>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029149532318115234  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029154300689697266  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11816906929016113
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009310245513916016  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.889863133430481
loading full batch data spends  0.004817962646484375
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.818771362304688e-05
step  0
else: feat size  torch.Size([1355, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 105, 4: 107, 5: 83, 6: 59, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b668>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c3c8>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cf28>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c668>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9e8>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9b0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c630>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c8d0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca90>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c978>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df60>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cc0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a978>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028710>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae80>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e53668>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e53518>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a2b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cc0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064438>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a9b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc50>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b240>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd30>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b6a0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029017925262451172  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029022693634033203  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.1200871467590332
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8816807270050049
loading full batch data spends  0.0053310394287109375
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.961822509765625e-05
step  0
else: feat size  torch.Size([1347, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 106, 5: 84, 6: 60, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf60>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c358>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c0f0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ceb8>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9e8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cba8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce48>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca90>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c8d0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6a0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cdd8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e796d8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca90>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c8d0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6d8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c438>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f92100289b0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028240>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cf8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e53518>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75e48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ac18>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df60>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae80>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064668>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028928756713867188  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02893352508544922  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11738133430480957
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009182453155517578  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.891481637954712
loading full batch data spends  0.0052564144134521484
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.295608520507812e-05
step  0
else: feat size  torch.Size([1351, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 100, 4: 110, 5: 85, 6: 61, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df60>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf98>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028e80>
func(nbatch).neighbor  torch.Size([100, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc88>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028710>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028c18>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b6d8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f92100289b0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028f60>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f92100284a8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c898>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c908>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce80>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce48>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c860>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccc0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c7f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca20>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c320>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc18>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c0f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc50>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029088497161865234  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029093265533447266  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11896729469299316
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8782906532287598
loading full batch data spends  0.0057713985443115234
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.939338684082031e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 102, 4: 110, 5: 84, 6: 60, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028f60>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9b0>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bef0>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf60>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b1d0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bdd8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b240>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b438>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b6d8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf28>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7b8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b668>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b358>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2e8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c8d0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5c0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce80>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c860>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce10>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccc0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c7f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ceb8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02899789810180664  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029002666473388672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11803007125854492
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8603729009628296
loading full batch data spends  0.00574183464050293
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.963180541992188e-05
step  0
else: feat size  torch.Size([1369, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 100, 4: 108, 5: 85, 6: 60, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028710>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6beb8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b208>
func(nbatch).neighbor  torch.Size([100, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75e10>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e62198>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e77a90>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028710>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e705f8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e495f8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e496d8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b780>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b898>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b240>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc88>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b438>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9b0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be48>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b908>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bef0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b1d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b4a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b3c8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf98>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02913522720336914  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029139995574951172  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.1051628589630127
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9164867401123047
loading full batch data spends  0.003690481185913086
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.008148193359375e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 106, 4: 109, 5: 86, 6: 59, 7: 35, 8: 23, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f080>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e496d8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bdd8>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e496d8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e49630>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bc18>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bd30>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb38>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7f0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b048>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([634, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028f60>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210028278>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029710>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75e10>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e495f8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a2b0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75e48>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75e10>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bdd8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e518>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bbe0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b8d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a9b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cef0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029129505157470703  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029134273529052734  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.1086571216583252
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009294509887695312  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8908565044403076
loading full batch data spends  0.003543376922607422
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.127357482910156e-05
step  0
else: feat size  torch.Size([1381, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 103, 4: 108, 5: 84, 6: 59, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f438>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fb00>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f898>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f1d0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b630>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bdd8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b898>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9b0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2b0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc88>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b1d0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b908>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bfd0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba20>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc50>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b668>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be80>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6beb8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029710>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70f98>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75e10>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75e48>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e495f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e550>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029250144958496094  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029254913330078125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09510469436645508
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8719974756240845
loading full batch data spends  0.0036745071411132812
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.29425048828125e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 109, 5: 85, 6: 60, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f438>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce10>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5c0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c3c8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c898>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb38>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9b0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cef0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9e8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5c0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb00>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b080>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bef0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bdd8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9b0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd68>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b278>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b240>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc18>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb38>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b048>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf28>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029085159301757812  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029089927673339844  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09387087821960449
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009241104125976562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8673930168151855
loading full batch data spends  0.0036668777465820312
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.198883056640625e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 107, 5: 84, 6: 59, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029438>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc18>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c7f0>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cda0>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9e8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb38>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c320>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c940>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c8d0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cba8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cba8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c400>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bef0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6beb8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b080>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bda0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b898>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b6d8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcf8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b630>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b278>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029003143310546875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029007911682128906  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09481453895568848
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.897436499595642
loading full batch data spends  0.003743410110473633
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.841255187988281e-05
step  0
else: feat size  torch.Size([1366, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 110, 5: 85, 6: 60, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b358>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ac18>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb00>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e53518>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e53668>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70f98>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f4a8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e518>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029710>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029438>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([636, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bda0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bdd8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc18>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b860>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b240>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb38>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b438>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a9b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a2b0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b240>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ac18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae48>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b240>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b630>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029211997985839844  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029216766357421875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09265851974487305
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00928640365600586  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8690242767333984
loading full batch data spends  0.003610372543334961
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.318092346191406e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 106, 4: 108, 5: 83, 6: 59, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf28>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fac8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f080>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4ff98>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cda0>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccc0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce80>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9b0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc88>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5f8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a080>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a9b0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e49240>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a978>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a278>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e492e8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae80>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e492e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f400>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a978>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f898>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ac18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f5f8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905130386352539  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029056072235107422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09372782707214355
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8968172073364258
loading full batch data spends  0.0036804676055908203
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.890296936035156e-05
step  0
else: feat size  torch.Size([1360, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 106, 4: 109, 5: 83, 6: 60, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcf8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b320>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b710>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb38>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b668>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf98>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5f8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf60>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b198>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce10>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc88>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c978>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c400>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cac8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5c0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccc0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca90>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c438>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70080>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70a20>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ac18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70b00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e47da0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a2b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae48>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02908945083618164  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029094219207763672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09221386909484863
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009251594543457031  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9018449783325195
loading full batch data spends  0.003642559051513672
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.0558319091796875e-05
step  0
else: feat size  torch.Size([1365, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 94, 3: 103, 4: 107, 5: 87, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4ff98>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb00>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b6d8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b080>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb38>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b240>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bdd8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6beb8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba90>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be10>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc50>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b630>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b668>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b198>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c0f0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce48>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cda0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce10>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c898>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c630>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c7f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02912425994873047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0291290283203125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11081409454345703
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8559620380401611
loading full batch data spends  0.004701852798461914
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.031990051269531e-05
step  0
else: feat size  torch.Size([1366, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 103, 4: 109, 5: 85, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6f9b0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7b8>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6beb8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b588>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba90>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b438>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bda0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd68>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb38>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bdd8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba58>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2e8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b780>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b470>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b8d0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc50>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be10>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b1d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf98>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be80>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5c0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b208>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd30>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c128>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029132843017578125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029137611389160156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1244041919708252
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00928354263305664  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8482471704483032
loading full batch data spends  0.005251884460449219
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.319450378417969e-05
step  0
else: feat size  torch.Size([1350, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 104, 4: 110, 5: 86, 6: 57, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d5f8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bd30>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70f98>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be48>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e53518>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae48>
func(nbatch).neighbor  torch.Size([57, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bda0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b320>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd68>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bac8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b8d0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb70>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd30>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bef0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e79b00>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb70>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be80>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e49630>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b160>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e49630>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e49240>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f4a8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5c0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fd30>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028969287872314453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028974056243896484  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12250638008117676
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9008383750915527
loading full batch data spends  0.0030260086059570312
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.839897155761719e-05
step  0
else: feat size  torch.Size([1365, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 110, 5: 83, 6: 60, 7: 35, 8: 21, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc50>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e705f8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9b0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce10>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc88>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c630>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c438>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c898>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c908>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c978>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e492e8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e49630>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75e48>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6f9b0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f898>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fc18>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e53518>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002b0f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f4a8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d5f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e53668>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bda0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b6a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029048442840576172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029053211212158203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11487412452697754
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009278297424316406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8901935815811157
loading full batch data spends  0.002251148223876953
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.600120544433594e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 106, 4: 109, 5: 82, 6: 60, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029438>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70a20>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b4a8>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b3c8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70f98>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70d30>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bfd0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b208>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c358>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c0f0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c128>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6a0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6d8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccf8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cdd8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c978>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c908>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cef0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e62198>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6f9b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75e48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d358>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75cf8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75e10>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029133319854736328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02913808822631836  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12109780311584473
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8711787462234497
loading full batch data spends  0.004781961441040039
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.270408630371094e-05
step  0
else: feat size  torch.Size([1347, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 105, 4: 108, 5: 84, 6: 59, 7: 35, 8: 22, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb00>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb38>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b710>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9e8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b240>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5c0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be80>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf28>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b358>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcf8>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bfd0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7b8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b3c8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bdd8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba58>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7f0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b630>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c0f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cef0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb00>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c7f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5c0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c358>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028905868530273438  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02891063690185547  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12592339515686035
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009182453155517578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.844732403755188
loading full batch data spends  0.005033016204833984
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.915496826171875e-05
step  0
else: feat size  torch.Size([1356, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 105, 4: 109, 5: 85, 6: 58, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e49630>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f080>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc18>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b198>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf28>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba20>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b240>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5c0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcc0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b278>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf60>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b748>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9b0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc50>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7f0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b1d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b860>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b470>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b668>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b4a8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029036521911621094  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029041290283203125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12350583076477051
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8769162893295288
loading full batch data spends  0.005327463150024414
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.486343383789062e-05
step  0
else: feat size  torch.Size([1349, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 109, 5: 84, 6: 60, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fe10>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f1d0>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4ff98>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fd30>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e47da0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae80>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cf8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e49240>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e495f8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e49630>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b198>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b240>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7b8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc18>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b160>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b278>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b898>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b748>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bdd8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b438>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc50>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b1d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b860>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029000282287597656  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029005050659179688  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12369942665100098
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009192943572998047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.890287160873413
loading full batch data spends  0.0046274662017822266
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.221366882324219e-05
step  0
else: feat size  torch.Size([1374, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 105, 4: 109, 5: 86, 6: 60, 7: 35, 8: 21, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb00>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c128>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c358>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c8d0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c438>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c940>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c668>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c400>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c630>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c898>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bb00>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e705f8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae48>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e79b00>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e908>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6f9b0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e518>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4d6a0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fe10>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6f9b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e705f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b198>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b240>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc18>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029144763946533203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029149532318115234  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1248469352722168
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8640681505203247
loading full batch data spends  0.007207632064819336
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.271766662597656e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 108, 5: 84, 6: 60, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064668>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba58>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4ffd0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f048>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fd68>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f400>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fd30>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f048>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f470>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4ff98>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb70>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc18>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c940>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c8d0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c320>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c128>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6a0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c7f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e79b00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e796d8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ac18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae48>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e705f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fc18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a2b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029017925262451172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029022693634033203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12331604957580566
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009235858917236328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8689872026443481
loading full batch data spends  0.004129886627197266
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.173683166503906e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 105, 4: 108, 5: 84, 6: 57, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cf8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc50>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb00>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b278>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf60>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2e8>
func(nbatch).neighbor  torch.Size([57, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b208>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba20>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b6a0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bda0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b630>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be48>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b710>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc88>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcc0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c7f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cba8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c3c8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c978>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c668>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029020309448242188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02902507781982422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12348413467407227
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8835967779159546
loading full batch data spends  0.005301713943481445
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.295608520507812e-05
step  0
else: feat size  torch.Size([1365, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 107, 5: 84, 6: 59, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6f9b0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70e80>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc50>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b4a8>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc18>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf60>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bba8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bfd0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bac8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b6a0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc88>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9e8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bda0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b1d0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b860>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcf8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf98>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bdd8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b240>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b8d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b780>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c3c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c0f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029108047485351562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029112815856933594  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12506628036499023
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009278297424316406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8783082962036133
loading full batch data spends  0.00418400764465332
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.888938903808594e-05
step  0
else: feat size  torch.Size([1371, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 102, 4: 107, 5: 84, 6: 59, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fc18>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e49240>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fac8>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f048>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e62198>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066908>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a2b0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70e80>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be48>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e796d8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b3c8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b710>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf28>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b208>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6beb8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcc0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bfd0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bba8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b668>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bda0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b1d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcf8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf98>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029155254364013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029160022735595703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12346768379211426
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8642702102661133
loading full batch data spends  0.007201194763183594
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.200241088867188e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 107, 5: 84, 6: 59, 7: 34, 8: 21, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb38>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f438>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cac8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6a0>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb70>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c0f0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc50>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c898>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c128>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5f8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fe48>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bc18>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df98>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fc18>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fe10>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e53668>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fe48>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6f9b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d0f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df98>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b3c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b080>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b4a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b748>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf28>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028943538665771484  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028948307037353516  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12315058708190918
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009209156036376953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.870383620262146
loading full batch data spends  0.004143714904785156
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.53131103515625e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 110, 5: 82, 6: 60, 7: 33, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb00>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f1d0>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb00>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fd30>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fac8>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb70>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b1d0>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f5f8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fb00>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f898>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb38>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c940>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c7f0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c630>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c320>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc50>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ceb8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ac18>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a2b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e49630>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fc18>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e53518>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e53668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fe10>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029082775115966797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029087543487548828  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1231679916381836
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8464181423187256
loading full batch data spends  0.004822731018066406
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.723403930664062e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 108, 5: 86, 6: 61, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b898>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bdd8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b8d0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bef0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b320>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf98>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b908>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b828>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf60>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b3c8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([634, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc18>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be10>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b668>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b710>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b048>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb00>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce80>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cac8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c0f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6d8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccf8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c8d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c978>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029102325439453125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029107093811035156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12133312225341797
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00922250747680664  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8458046913146973
loading full batch data spends  0.005772590637207031
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.891654968261719e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 107, 5: 87, 6: 60, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d0f0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b080>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bac8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7b8>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b048>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6beb8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be10>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bbe0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b828>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b3c8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bfd0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b668>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fac8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f470>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f1d0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f5f8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fb00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f470>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f860>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4ff98>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fd30>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c908>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6d8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029088497161865234  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029093265533447266  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12543678283691406
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.866457223892212
loading full batch data spends  0.006136417388916016
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.175041198730469e-05
step  0
else: feat size  torch.Size([1356, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 102, 4: 108, 5: 86, 6: 61, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70e80>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a080>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be48>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae48>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064438>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bb00>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f048>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f1d0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fd68>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f5f8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc88>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b860>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf98>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7f0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b080>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b8d0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b320>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b710>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b470>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b6a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b1d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be80>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b898>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029044151306152344  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029048919677734375  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1161813735961914
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00923013687133789  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8775545358657837
loading full batch data spends  0.0022530555725097656
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.552436828613281e-05
step  0
else: feat size  torch.Size([1369, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 109, 5: 82, 6: 59, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bbe0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a2b0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c668>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce48>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c3c8>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c320>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9b0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c128>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c7f0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9e8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064438>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064668>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f048>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bb70>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b898>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bb00>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029b38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bbe0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7dd30>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f048>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fd68>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b860>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b240>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b748>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029043197631835938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904796600341797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.113372802734375
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8677717447280884
loading full batch data spends  0.002326488494873047
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.504753112792969e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 109, 5: 85, 6: 59, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bc18>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e49240>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e496d8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b1d0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e518>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e908>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc50>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e550>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba20>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c940>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c128>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c668>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb00>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc88>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c358>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c7f0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c908>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce10>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bb70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064668>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cf8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e53668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7dd30>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066908>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904367446899414  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029048442840576172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11888575553894043
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009209156036376953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8320661783218384
loading full batch data spends  0.005753517150878906
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.867813110351562e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 102, 4: 108, 5: 85, 6: 60, 7: 35, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bbe0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9b0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd68>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b828>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bac8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b3c8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6beb8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b668>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b240>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b860>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd30>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb70>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bfd0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba20>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce48>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb38>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccf8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c978>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c940>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c860>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cba8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c3c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce80>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029140472412109375  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029145240783691406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1256389617919922
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8458057641983032
loading full batch data spends  0.006077766418457031
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.151199340820312e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 107, 5: 84, 6: 60, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be10>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc50>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b860>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb70>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b048>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd30>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bef0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5c0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba90>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bfd0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7b8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029438>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029710>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d358>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b748>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b358>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d390>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b438>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b080>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df60>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b748>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b438>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca90>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02902078628540039  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029025554656982422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11979866027832031
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009209156036376953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8611810207366943
loading full batch data spends  0.005227327346801758
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.224082946777344e-05
step  0
else: feat size  torch.Size([1362, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 111, 5: 84, 6: 60, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b8d0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bba8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6beb8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd68>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6f9b0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bb00>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d358>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75e48>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7dac8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029b38>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be48>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be10>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b8d0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b630>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be10>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bfd0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bac8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b3c8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bbe0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd68>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b710>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc50>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905130386352539  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029056072235107422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12012529373168945
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8497982025146484
loading full batch data spends  0.0061473846435546875
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   8.320808410644531e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 108, 5: 84, 6: 59, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b668>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b358>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c940>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccf8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9e8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb00>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb70>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccc0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c3c8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c668>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e496d8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cf8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bf98>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e79b00>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cc0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4d358>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b8d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bb00>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70f98>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70a20>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be10>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae48>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e79b00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bf98>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bfd0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029073715209960938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907848358154297  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11040425300598145
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009246349334716797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8541874885559082
loading full batch data spends  0.002222299575805664
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.266334533691406e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 107, 5: 84, 6: 59, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7dac8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2b0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9e8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b1d0>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be48>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b780>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba20>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b860>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6a0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce48>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c978>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c470>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc50>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c320>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c400>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c668>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c3c8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5c0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e518>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e550>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be10>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b8d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ac18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b630>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e550>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904224395751953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029047012329101562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10524487495422363
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8496546745300293
loading full batch data spends  0.003072023391723633
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.147125244140625e-05
step  0
else: feat size  torch.Size([1361, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 105, 4: 110, 5: 83, 6: 59, 7: 35, 8: 22, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fb00>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b320>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba90>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b470>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be80>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd30>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be10>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b080>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcc0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b438>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b710>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd68>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b780>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bef0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9e8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b748>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce48>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5c0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c860>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c358>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cdd8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6a0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02902078628540039  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029025554656982422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09798693656921387
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009256839752197266  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8528344631195068
loading full batch data spends  0.0026078224182128906
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.124641418457031e-05
step  0
else: feat size  torch.Size([1346, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 98, 3: 104, 4: 107, 5: 83, 6: 61, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f3c8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029438>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba90>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc88>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5c0>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b3c8>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd30>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b710>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be10>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b080>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6beb8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b278>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b668>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb70>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b160>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf60>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b358>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd68>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b048>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b198>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be48>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b4a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ceb8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c860>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028998851776123047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029003620147705078  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10172557830810547
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.843805193901062
loading full batch data spends  0.0022356510162353516
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.2901763916015625e-05
step  0
else: feat size  torch.Size([1362, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 104, 4: 110, 5: 85, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fac8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e492e8>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc18>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bfd0>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029710>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f92100295f8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4ffd0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d358>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002b0f0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d860>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf98>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bfd0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b588>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b908>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b898>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba90>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b470>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b710>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcc0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf28>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be10>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6beb8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b278>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b668>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029133319854736328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02913808822631836  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09839868545532227
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009265422821044922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.841701626777649
loading full batch data spends  0.0029397010803222656
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.1961669921875e-05
step  0
else: feat size  torch.Size([1370, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 108, 5: 86, 6: 57, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f438>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c978>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6a0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca20>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb70>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c898>
func(nbatch).neighbor  torch.Size([57, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c438>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc18>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb00>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccc0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4d358>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002b0f0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f92100295f8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fe48>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f3c8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cc0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066908>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029710>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029b38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cf8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bfd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd30>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b3c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b908>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029162883758544922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029167652130126953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10724902153015137
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.822952389717102
loading full batch data spends  0.0030672550201416016
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.4332275390625e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 105, 4: 110, 5: 81, 6: 59, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e492e8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7dac8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb38>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df98>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb70>
func(nbatch).neighbor  torch.Size([81, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bc18>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7dd30>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be48>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b630>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b8d0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cda0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cdd8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c898>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca20>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5f8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c978>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c470>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c358>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9218f3a2e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f92100295f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae80>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029438>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae80>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029710>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02903604507446289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029040813446044922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09980607032775879
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009273052215576172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8217390775680542
loading full batch data spends  0.002918243408203125
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.0531158447265625e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 110, 5: 83, 6: 60, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064438>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b1d0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2e8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd68>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b320>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b630>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b048>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb70>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b160>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b278>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd30>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b208>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b588>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc88>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bfd0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b358>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c358>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce10>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c7f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c668>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccc0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c940>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cda0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cdd8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c438>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029095172882080078  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02909994125366211  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09844040870666504
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8035235404968262
loading full batch data spends  0.0022313594818115234
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.2901763916015625e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 110, 5: 85, 6: 60, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7dac8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bac8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b908>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be48>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb00>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bc18>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b470>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b898>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b630>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([634, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bc18>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bd30>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a080>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a2e8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ac18>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a9b0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bdd8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a2e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae80>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e495f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a978>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce80>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c7f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce48>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02915191650390625  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02915668487548828  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10318279266357422
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009249210357666016  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8208649158477783
loading full batch data spends  0.0023033618927001953
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.409385681152344e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 105, 4: 108, 5: 82, 6: 60, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e79b00>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b780>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba58>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b320>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e47da0>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e77a90>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be48>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029b38>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b630>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb70>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bf98>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002b0f0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cf8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bb00>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bac8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e62198>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bdd8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b6a0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb38>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd68>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcc0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b1d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b668>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029076576232910156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029081344604492188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09987568855285645
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7967535257339478
loading full batch data spends  0.003713369369506836
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.124641418457031e-05
step  0
else: feat size  torch.Size([1361, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 104, 4: 110, 5: 85, 6: 60, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bd30>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b278>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc88>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cdd8>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cda0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce48>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccc0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c898>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c978>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca90>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([635, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029710>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029438>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75e48>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6f9b0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d860>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d0f0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7dac8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e495f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cc0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6f9b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e79b00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fe48>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cc0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cf8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bd30>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029112815856933594  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029117584228515625  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09847760200500488
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009256839752197266  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7923310995101929
loading full batch data spends  0.0022072792053222656
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.5762786865234375e-05
step  0
else: feat size  torch.Size([1351, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 105, 4: 107, 5: 84, 6: 59, 7: 34, 8: 23, 9: 8, 10: 65}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb38>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bdd8>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002b0f0>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bbe0>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002b278>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc88>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b048>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b080>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b198>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4d6a0>
func(nbatch).neighbor  torch.Size([65, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6d8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c8d0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c358>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c400>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c668>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccc0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c438>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca90>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e49630>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e495f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6f9b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e495f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fe48>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028908252716064453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028913021087646484  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10659289360046387
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8059825897216797
loading full batch data spends  0.004564762115478516
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.604194641113281e-05
step  0
else: feat size  torch.Size([1366, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 104, 4: 107, 5: 87, 6: 60, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70518>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb00>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b4a8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b358>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcf8>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b780>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7f0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b208>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b320>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bfd0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b198>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc88>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b048>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd30>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bbe0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b278>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cf28>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc88>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce48>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c470>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca20>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c128>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c940>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02917957305908203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029184341430664062  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10566306114196777
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00928640365600586  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7972114086151123
loading full batch data spends  0.005774021148681641
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.748603820800781e-05
step  0
else: feat size  torch.Size([1363, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 104, 4: 110, 5: 85, 6: 58, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4d6a0>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be10>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bc18>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b8d0>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bdd8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb00>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df60>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d860>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b8d0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7dac8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7dac8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70d30>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb70>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bd30>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ac18>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bd30>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bbe0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a9b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bbe0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b668>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a278>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c320>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c470>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029146194458007812  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029150962829589844  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1043405532836914
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8093841075897217
loading full batch data spends  0.005471229553222656
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.887580871582031e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 105, 4: 110, 5: 83, 6: 59, 7: 33, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e47da0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f898>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fd68>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f438>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d358>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df60>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70a20>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d0f0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d860>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be48>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066908>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cc0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be48>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6beb8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd68>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7f0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b3c8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc50>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b320>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba58>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b6a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bef0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5c0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028964519500732422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028969287872314453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10813570022583008
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9020285606384277
loading full batch data spends  0.003576517105102539
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.814697265625e-05
step  0
else: feat size  torch.Size([1365, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 102, 4: 109, 5: 85, 6: 60, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bdd8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fd30>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce10>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6d8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ceb8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cdd8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb00>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c978>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9e8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5f8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e53518>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70f98>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7dac8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70080>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb70>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70f98>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70a20>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bbe0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70080>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d0f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e705f8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70d30>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029071331024169922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029076099395751953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09703516960144043
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8779702186584473
loading full batch data spends  0.0029442310333251953
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.38690185546875e-05
step  0
else: feat size  torch.Size([1351, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 106, 4: 107, 5: 80, 6: 60, 7: 33, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bc18>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b438>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b898>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b630>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bbe0>
func(nbatch).neighbor  torch.Size([80, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b320>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b4a8>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b080>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bdd8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce48>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c978>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce10>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c128>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cac8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cef0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9e8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9b0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccf8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f5f8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fd30>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70d30>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002b0f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70a20>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df60>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02898120880126953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028985977172851562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09900665283203125
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009203433990478516  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.761816143989563
loading full batch data spends  0.0022242069244384766
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.266334533691406e-05
step  0
else: feat size  torch.Size([1373, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 102, 4: 111, 5: 82, 6: 60, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e796d8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b208>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bdd8>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9e8>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4d6a0>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b208>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b320>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e49630>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae48>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a278>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb00>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bda0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be48>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b048>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6d8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca90>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c860>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c358>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce48>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cda0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c470>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccc0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ceb8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cf28>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02917003631591797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0291748046875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09952068328857422
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8226265907287598
loading full batch data spends  0.0053136348724365234
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.316734313964844e-05
step  0
else: feat size  torch.Size([1371, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 94, 3: 102, 4: 109, 5: 86, 6: 61, 7: 33, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bc18>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb38>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9b0>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b898>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bdd8>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b3c8>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b358>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9e8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc18>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba58>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b438>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be48>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be10>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b908>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bef0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2e8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b860>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b048>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5c0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b080>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b198>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcf8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf60>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b588>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c320>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029190540313720703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029195308685302734  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10189342498779297
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009313106536865234  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8521599769592285
loading full batch data spends  0.0030603408813476562
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.0531158447265625e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 110, 5: 84, 6: 58, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bbe0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002b278>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b780>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bdd8>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70080>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70b00>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bdd8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066908>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7dd30>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fac8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b3c8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf98>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b358>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b470>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9e8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb38>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b160>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b240>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bba8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bdd8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bfd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b320>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be10>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029044628143310547  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029049396514892578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10767793655395508
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8266644477844238
loading full batch data spends  0.0022432804107666016
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.2901763916015625e-05
step  0
else: feat size  torch.Size([1348, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 104, 4: 108, 5: 85, 6: 61, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4ff98>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bc18>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce48>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c470>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c7f0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6d8>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc18>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccf8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cda0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c860>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e908>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75cf8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb38>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf98>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b160>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b630>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd30>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc88>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b748>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b710>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba90>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029048919677734375  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029053688049316406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10626983642578125
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009190559387207031  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8290210962295532
loading full batch data spends  0.002964019775390625
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.2438507080078125e-05
step  0
else: feat size  torch.Size([1370, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 108, 5: 86, 6: 59, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bbe0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b630>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bbe0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b898>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb38>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bc18>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b320>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b828>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccc0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb38>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c358>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce10>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c908>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c630>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6a0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c860>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cda0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cef0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9218f3a2e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fe48>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002b278>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064668>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fe10>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fe48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cc0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029132843017578125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029137611389160156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09972405433654785
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7716481685638428
loading full batch data spends  0.003061056137084961
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.0994415283203125e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 103, 4: 107, 5: 85, 6: 60, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a9b0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b198>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b8d0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be48>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be10>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b080>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b240>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b828>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9b0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b710>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7b8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be48>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b1d0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba20>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bbe0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b358>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb38>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cef0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c438>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cac8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c3c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccc0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029071331024169922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029076099395751953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09697437286376953
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009294509887695312  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8095818758010864
loading full batch data spends  0.0026531219482421875
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.2438507080078125e-05
step  0
else: feat size  torch.Size([1343, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 103, 4: 108, 5: 83, 6: 60, 7: 35, 8: 22, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a2e8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7f0>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bdd8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd68>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b8d0>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b278>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b898>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be80>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bda0>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be48>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2b0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bbe0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b4a8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd30>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b240>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b320>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b828>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b208>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b048>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b1d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cba8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c438>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028884410858154297  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028889179229736328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1007230281829834
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7367067337036133
loading full batch data spends  0.0029540061950683594
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.172325134277344e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 109, 5: 85, 6: 59, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e796d8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b6a0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba90>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf28>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bf98>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bac8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b8d0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bdd8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4edd8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e496d8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b278>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb38>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b748>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b630>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b908>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcf8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf28>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bdd8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be80>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bef0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be10>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc50>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b470>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904653549194336  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905130386352539  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09859108924865723
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009235858917236328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7841553688049316
loading full batch data spends  0.0028815269470214844
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.1484832763671875e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 108, 5: 85, 6: 58, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f470>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c0f0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c7f0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c470>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc18>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6a0>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce80>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c320>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c3c8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c668>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e908>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e550>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bd30>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4edd8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e492e8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e49240>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e908>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bdd8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a2e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f470>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b748>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd68>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029018878936767578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02902364730834961  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09837079048156738
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.801745057106018
loading full batch data spends  0.0030639171600341797
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.314018249511719e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 104, 4: 107, 5: 84, 6: 59, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb00>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d860>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7dd30>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002b278>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df60>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df98>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bb70>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002b0f0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d5f8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df98>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9b0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca20>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6a0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c470>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c8d0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c0f0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce10>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70a20>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70f28>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cf8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e49240>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e53518>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e62198>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e49240>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029139041900634766  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029143810272216797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09705877304077148
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009294509887695312  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7631431818008423
loading full batch data spends  0.0022351741790771484
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.2901763916015625e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 94, 3: 103, 4: 110, 5: 86, 6: 60, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f400>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bba8>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b048>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b240>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b780>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc18>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bfd0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba20>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b198>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b358>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5c0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b710>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b630>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b908>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b898>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b668>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5f8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cda0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c400>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb00>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce48>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca20>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce80>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029006481170654297  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029011249542236328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09656476974487305
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7636018991470337
loading full batch data spends  0.002714395523071289
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.1961669921875e-05
step  0
else: feat size  torch.Size([1356, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 109, 5: 84, 6: 59, 7: 33, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f438>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba58>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b4a8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9e8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcf8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b320>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b710>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb70>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bac8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bdd8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b358>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bc18>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7dd30>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df98>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b630>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d860>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bdd8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d0f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b8d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bc18>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cf28>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c400>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb38>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029064655303955078  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02906942367553711  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10501861572265625
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00923013687133789  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7567099332809448
loading full batch data spends  0.0030956268310546875
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.315376281738281e-05
step  0
else: feat size  torch.Size([1363, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 108, 5: 85, 6: 59, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fd30>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9e8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bdd8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2b0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f92100295f8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029438>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d358>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029710>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7dd30>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029b38>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f080>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f438>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fd30>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f470>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf60>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b160>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bef0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bba8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b860>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc50>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b6a0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bfd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b438>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029051780700683594  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029056549072265625  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09839272499084473
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7618176937103271
loading full batch data spends  0.003075122833251953
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.075599670410156e-05
step  0
else: feat size  torch.Size([1375, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 109, 5: 85, 6: 59, 7: 33, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be48>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f4a8>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cac8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca20>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9b0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb38>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c668>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6a0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c0f0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c438>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f9218f3a2e8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064438>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a9b0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d860>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bac8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a9b0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df98>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d0f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70d30>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf60>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b160>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6beb8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd68>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b860>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02912139892578125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02912616729736328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09944868087768555
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009331703186035156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7459921836853027
loading full batch data spends  0.0030927658081054688
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.482269287109375e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 104, 4: 107, 5: 87, 6: 58, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bac8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e495f8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b668>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be48>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bd30>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be10>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb38>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be48>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b630>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b8d0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c908>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cdd8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5f8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc50>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb00>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c668>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce80>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c438>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4d358>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064438>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df98>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064668>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7dac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a2e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02901744842529297  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029022216796875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10043120384216309
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7630424499511719
loading full batch data spends  0.0023000240325927734
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.910064697265625e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 110, 5: 84, 6: 60, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be10>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f92100295f8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7dac8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d358>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d860>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b358>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7dac8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fb00>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7dac8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f5f8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fd30>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f438>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f4a8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f3c8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fd68>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f1d0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cac8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce10>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6d8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c470>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5c0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c8d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce48>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029086589813232422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029091358184814453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.08596205711364746
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009273052215576172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8062841892242432
loading full batch data spends  0.001489400863647461
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.314018249511719e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 106, 4: 111, 5: 83, 6: 58, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029b38>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bef0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b198>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be10>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bfd0>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd68>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6beb8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7f0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcc0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b240>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b908>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc50>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f3c8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f470>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f898>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f5f8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f048>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fb00>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fac8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f1d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c630>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce10>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028997421264648438  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02900218963623047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.08844494819641113
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7197059392929077
loading full batch data spends  0.002657651901245117
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.361701965332031e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 106, 5: 86, 6: 59, 7: 33, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029438>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba90>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b780>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75cf8>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70a20>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fac8>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f898>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f1d0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f4a8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f1d0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fb00>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f898>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f048>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b780>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b160>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be48>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b240>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b748>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcf8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b6a0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b198>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be10>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bfd0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028992176055908203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028996944427490234  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.08484292030334473
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009235858917236328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.726546049118042
loading full batch data spends  0.0014357566833496094
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   2.574920654296875e-05
step  0
else: feat size  torch.Size([1353, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 106, 4: 108, 5: 84, 6: 58, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fe48>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e550>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cef0>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c978>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cba8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce48>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c860>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca20>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5f8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccc0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f438>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fd30>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029b38>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fd68>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002b0f0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df60>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d860>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d390>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70f98>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f898>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70d30>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70a20>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fb00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002b0f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029007911682128906  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029012680053710938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.08305954933166504
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7749816179275513
loading full batch data spends  0.001789093017578125
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.4809112548828125e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 103, 4: 108, 5: 84, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bb00>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a2e8>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a278>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b048>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75cf8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ac18>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b160>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75e10>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b1d0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6a0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca20>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cef0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5c0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c438>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc88>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5f8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c630>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca90>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e53518>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e53668>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d5f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7dd30>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fe48>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029121875762939453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029126644134521484  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.08646941184997559
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009288787841796875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.777711033821106
loading full batch data spends  0.0018880367279052734
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.24249267578125e-05
step  0
else: feat size  torch.Size([1355, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 103, 4: 109, 5: 83, 6: 58, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e47da0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7f0>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b3c8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be10>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b4a8>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb38>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b358>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd30>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5c0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b668>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b710>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b908>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcc0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bac8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c978>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb00>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6d8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c3c8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6a0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c0f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce80>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cba8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02896881103515625  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02897357940673828  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.08558869361877441
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7787628173828125
loading full batch data spends  0.00722813606262207
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.677078247070312e-05
step  0
else: feat size  torch.Size([1346, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 110, 5: 82, 6: 61, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4edd8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd68>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b908>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd30>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba90>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b160>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b358>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bac8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7b8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bfd0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b048>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b668>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b828>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b8d0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bba8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9b0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b630>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7dac8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d390>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b588>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d5f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d358>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b320>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028947830200195312  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028952598571777344  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10343480110168457
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00917673110961914  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7760300636291504
loading full batch data spends  0.0022253990173339844
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.337860107421875e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 109, 5: 84, 6: 59, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e496d8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f080>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f5f8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f860>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4edd8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9218f3a2e8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df98>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7dd30>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bb00>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d5f8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd30>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf98>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc88>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b198>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b048>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b240>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b160>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b748>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bdd8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b358>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b828>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b8d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be10>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029085159301757812  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029089927673339844  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11601996421813965
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7748721837997437
loading full batch data spends  0.0026590824127197266
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.1021575927734375e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 109, 5: 84, 6: 58, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bef0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f080>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6a0>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6d8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccc0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c668>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cba8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9b0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca90>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccf8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bb00>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002b0f0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75e48>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cf8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066908>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75e48>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064668>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70a20>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b278>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b908>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b208>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba90>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd30>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b198>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc18>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029039859771728516  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029044628143310547  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.08100223541259766
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009241104125976562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.762573003768921
loading full batch data spends  0.0023376941680908203
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.410743713378906e-05
step  0
else: feat size  torch.Size([1374, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 107, 5: 85, 6: 59, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc50>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fac8>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc50>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f080>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f860>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fd30>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4ffd0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bbe0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c400>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c978>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c3c8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c8d0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c128>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c470>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ceb8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccf8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca90>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c438>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cf8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064668>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002b278>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e79b00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df98>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bb00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002b278>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029170513153076172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029175281524658203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.08301115036010742
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7194877862930298
loading full batch data spends  0.0034542083740234375
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.363059997558594e-05
step  0
else: feat size  torch.Size([1370, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 108, 5: 84, 6: 60, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fb00>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb38>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be48>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a9b0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9e8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf28>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a2b0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcf8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b898>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae80>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd30>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b320>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bfd0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf98>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf28>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc50>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bbe0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c978>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c438>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cef0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c630>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c400>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029120445251464844  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029125213623046875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.08108210563659668
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009305000305175781  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7183654308319092
loading full batch data spends  0.004900455474853516
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.1021575927734375e-05
step  0
else: feat size  torch.Size([1356, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 109, 5: 84, 6: 60, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066908>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b780>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf98>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcf8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b198>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b898>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf28>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf60>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b588>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcc0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2e8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be80>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d860>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b438>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bbe0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7dd30>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e705f8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70a20>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d5f8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70f98>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70d30>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7dd30>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cda0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cef0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904510498046875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904987335205078  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.08516192436218262
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.724884033203125
loading full batch data spends  0.0040302276611328125
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.698204040527344e-05
step  0
else: feat size  torch.Size([1370, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 110, 5: 82, 6: 59, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f1d0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be10>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd68>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7b8>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75e10>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75cf8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70d30>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70518>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d358>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7dd30>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4ffd0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fb00>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fd30>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f5f8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f400>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f1d0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9b0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb38>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc88>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf28>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd30>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba20>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b780>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc50>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0291290283203125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02913379669189453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.08136582374572754
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009305000305175781  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7161258459091187
loading full batch data spends  0.0029757022857666016
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.1961669921875e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 104, 4: 109, 5: 84, 6: 60, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df98>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce80>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c128>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccf8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cba8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cdd8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c940>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5c0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c908>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c630>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70d30>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70080>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e53668>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e47da0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029b38>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064438>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4ffd0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f860>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f898>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f400>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e53668>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4ffd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f860>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029063701629638672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029068470001220703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.06784200668334961
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7210752964019775
loading full batch data spends  0.002131938934326172
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   2.956390380859375e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 106, 4: 109, 5: 84, 6: 59, 7: 35, 8: 21, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d5f8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75e48>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75cf8>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb70>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f3c8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75e48>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f470>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f860>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb70>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c3c8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce48>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cdd8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccf8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc50>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce80>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc88>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e47da0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cf8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066908>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fc18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064438>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029094219207763672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029098987579345703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.06692910194396973
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009273052215576172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8465975522994995
loading full batch data spends  0.0014355182647705078
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   2.5272369384765625e-05
step  0
else: feat size  torch.Size([1361, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 104, 4: 108, 5: 85, 6: 61, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f400>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b198>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bbe0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf28>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5c0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2e8>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7b8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b588>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bba8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba58>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b160>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b358>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb70>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcc0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b048>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b208>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc88>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc18>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca90>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c860>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c630>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6a0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c3c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c940>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029084205627441406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029088973999023438  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.06719350814819336
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9365042448043823
loading full batch data spends  0.002455472946166992
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.2438507080078125e-05
step  0
else: feat size  torch.Size([1363, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 107, 5: 85, 6: 59, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f080>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029b38>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b048>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b908>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba90>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b438>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b470>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bdd8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bfd0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6beb8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cf8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7f0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc18>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b208>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b320>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ac18>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc18>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b710>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a9b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b278>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c978>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02906513214111328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029069900512695312  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.0659782886505127
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009267807006835938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 2.053220510482788
loading full batch data spends  0.001897573471069336
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.361701965332031e-05
step  0
else: feat size  torch.Size([1361, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 110, 5: 81, 6: 61, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e49240>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f3c8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d860>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70a20>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cf8>
func(nbatch).neighbor  torch.Size([81, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066908>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a9b0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae48>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb70>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ac18>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b828>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b6a0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf60>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6beb8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba58>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b208>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b860>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b6a0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd68>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f400>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b278>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4ff98>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904033660888672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904510498046875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.06311154365539551
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.911186695098877
loading full batch data spends  0.002543210983276367
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.1948089599609375e-05
step  0
else: feat size  torch.Size([1371, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 108, 5: 83, 6: 59, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df60>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70f28>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb70>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb00>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c3c8>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c978>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9e8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c630>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce80>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cef0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae48>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a978>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f92100295f8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a2b0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bb70>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029438>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae48>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bb70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029b38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a2b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e496d8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f92100295f8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e496d8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d390>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02910137176513672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02910614013671875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.07961320877075195
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009310245513916016  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8029686212539673
loading full batch data spends  0.0014264583587646484
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   2.7418136596679688e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 106, 4: 109, 5: 84, 6: 57, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f438>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029438>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029b38>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b630>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a278>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be48>
func(nbatch).neighbor  torch.Size([57, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bbe0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba20>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5c0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae48>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cf28>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cdd8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc88>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c908>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc50>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9e8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c470>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cef0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4edd8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e518>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bdd8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e49630>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bb00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e492e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02908468246459961  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02908945083618164  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09239935874938965
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7650917768478394
loading full batch data spends  0.0019140243530273438
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.504753112792969e-05
step  0
else: feat size  torch.Size([1353, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 94, 3: 103, 4: 110, 5: 84, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d0f0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b438>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b668>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb70>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2b0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b908>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd68>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bac8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b358>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc18>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5c0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be48>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bbe0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc50>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b470>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b198>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c7f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c978>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c400>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c8d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccf8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6a0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029041290283203125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029046058654785156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.08628106117248535
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009214401245117188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7716487646102905
loading full batch data spends  0.0019037723541259766
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.361701965332031e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 108, 5: 84, 6: 60, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d358>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba58>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf60>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b828>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b1d0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b588>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b710>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b860>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b3c8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9e8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcf8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b630>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f1d0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f860>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f898>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fd68>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f048>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f860>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4ffd0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f470>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f4a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6d8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c400>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02902698516845703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029031753540039062  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.08351349830627441
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7384588718414307
loading full batch data spends  0.0019965171813964844
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   2.5510787963867188e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 98, 3: 105, 4: 106, 5: 85, 6: 59, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70b00>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bba8>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba90>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bac8>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e49240>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e49630>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d358>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f438>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f860>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f898>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064438>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70b00>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70f28>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc18>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b6a0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb70>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b438>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b908>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b080>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bda0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b160>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b668>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bdd8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba58>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029063701629638672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029068470001220703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.08041596412658691
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7857153415679932
loading full batch data spends  0.0014309883117675781
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   2.5987625122070312e-05
step  0
else: feat size  torch.Size([1349, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 102, 4: 107, 5: 83, 6: 60, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bd30>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b898>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce80>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cac8>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cba8>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c7f0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c0f0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb38>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc88>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cda0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70a20>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70b00>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e49240>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029b38>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bc18>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e495f8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029438>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bd30>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e49240>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b898>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e496d8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e49240>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b6a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf98>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02895832061767578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028963088989257812  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.08560729026794434
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8180980682373047
loading full batch data spends  0.0016777515411376953
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   2.9087066650390625e-05
step  0
else: feat size  torch.Size([1363, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 101, 4: 109, 5: 83, 6: 61, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75e10>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb70>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b4a8>
func(nbatch).neighbor  torch.Size([101, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b160>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be10>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bdd8>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b860>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b630>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd68>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cdd8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb38>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce80>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c400>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c630>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c128>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc88>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9b0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce48>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029b38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064668>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f400>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064438>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e495f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4ff98>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02910900115966797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02911376953125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.08636975288391113
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009267807006835938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7605206966400146
loading full batch data spends  0.0014586448669433594
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   2.6941299438476562e-05
step  0
else: feat size  torch.Size([1363, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 94, 3: 106, 4: 107, 5: 86, 6: 61, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb70>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc88>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bdd8>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b208>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b828>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b358>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bda0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b710>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba58>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bbe0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b4a8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb70>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba90>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b748>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cac8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c898>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c358>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc18>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cdd8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca20>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cf28>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c908>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce10>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cba8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6d8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029107093811035156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029111862182617188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.08523964881896973
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7750508785247803
loading full batch data spends  0.0026988983154296875
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.2438507080078125e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 110, 5: 80, 6: 59, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e62198>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b438>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b1d0>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b048>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcf8>
func(nbatch).neighbor  torch.Size([80, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7f0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b908>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be80>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b4a8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc50>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcc0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bbe0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fac8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fd68>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fb00>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f4a8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f470>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d358>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7dac8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f3c8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d0f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f048>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fd30>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccf8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029047489166259766  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029052257537841797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.08307862281799316
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009246349334716797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8142919540405273
loading full batch data spends  0.0014429092407226562
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   2.6702880859375e-05
step  0
else: feat size  torch.Size([1360, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 108, 5: 84, 6: 60, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bdd8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b048>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b710>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be48>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e79b00>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e796d8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d0f0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d358>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df98>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d860>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70b00>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70e80>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75cf8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70f98>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e492e8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70b00>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb38>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bba8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b198>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b588>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc18>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905750274658203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029062271118164062  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09203839302062988
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7493441104888916
loading full batch data spends  0.00567317008972168
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.412101745605469e-05
step  0
else: feat size  torch.Size([1350, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 105, 4: 109, 5: 83, 6: 59, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f898>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd68>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cdd8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c908>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc50>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cac8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5f8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce48>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca20>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c358>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bdd8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bf98>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d0f0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70f98>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d358>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70e80>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df98>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70e80>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d358>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d390>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e705f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d860>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70f28>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70f98>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d390>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028958797454833984  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028963565826416016  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10475492477416992
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009198188781738281  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.810028314590454
loading full batch data spends  0.0029044151306152344
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.57763671875e-05
step  0
else: feat size  torch.Size([1346, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 106, 5: 86, 6: 59, 7: 34, 8: 21, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f400>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e79b00>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb00>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b860>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc88>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7f0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b898>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b8d0>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce10>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cf28>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([627, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc18>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce80>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb00>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c978>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c470>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c358>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca20>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c128>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9218f3a2e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e492e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70b00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cf8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70f98>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70f28>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028906822204589844  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028911590576171875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11104059219360352
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7777879238128662
loading full batch data spends  0.004300355911254883
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.38690185546875e-05
step  0
else: feat size  torch.Size([1363, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 109, 5: 85, 6: 60, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be48>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b080>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b1d0>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba58>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf28>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b828>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b160>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba90>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5c0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6beb8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b898>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bda0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7f0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf98>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb00>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b048>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd30>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cf28>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c128>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c940>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cda0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c630>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5c0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce10>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907276153564453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029077529907226562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10937762260437012
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009267807006835938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7470226287841797
loading full batch data spends  0.0024247169494628906
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.552436828613281e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 105, 4: 110, 5: 86, 6: 58, 7: 33, 8: 21, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cf8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064438>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bbe0>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5c0>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b358>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9e8>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b3c8>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bbe0>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba90>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b6a0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b898>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b860>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be10>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bfd0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9b0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd30>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b048>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf98>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b320>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be80>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b780>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc88>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c320>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c940>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02910757064819336  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02911233901977539  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10024285316467285
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7587693929672241
loading full batch data spends  0.0032973289489746094
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.6253204345703125e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 106, 4: 109, 5: 85, 6: 57, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bdd8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a2b0>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d5f8>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7dd30>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fe10>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b898>
func(nbatch).neighbor  torch.Size([57, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e492e8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bd30>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b630>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4d358>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7f0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b898>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb38>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b860>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b668>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd30>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6beb8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf98>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9b0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be80>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b8d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc50>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fd30>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc50>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0291290283203125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02913379669189453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10821127891540527
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009288787841796875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7717320919036865
loading full batch data spends  0.0032804012298583984
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.649162292480469e-05
step  0
else: feat size  torch.Size([1355, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 106, 4: 108, 5: 84, 6: 58, 7: 35, 8: 21, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b6a0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc18>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce10>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc88>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5f8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c860>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9b0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ceb8>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cac8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce48>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70080>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b630>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75e48>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f3c8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bdd8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bb00>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e908>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4edd8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e79b00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df60>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002b0f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bf98>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bdd8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b898>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028987407684326172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028992176055908203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10394167900085449
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7501469850540161
loading full batch data spends  0.003771066665649414
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.3392181396484375e-05
step  0
else: feat size  torch.Size([1363, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 108, 5: 83, 6: 60, 7: 34, 8: 21, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fb00>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6f9b0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fc18>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be80>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fe10>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf28>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fc18>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6f9b0>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be80>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b630>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6a0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5c0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c860>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc88>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccc0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc18>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce80>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c630>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e62198>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bbe0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bdd8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e492e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e79b00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e796d8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e49240>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029050827026367188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905559539794922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10604143142700195
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009267807006835938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7589198350906372
loading full batch data spends  0.004408359527587891
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.031990051269531e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 106, 5: 86, 6: 59, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d358>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b208>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf60>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6beb8>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bdd8>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b320>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b588>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc50>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2e8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2b0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b710>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b1d0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b828>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9b0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcc0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bda0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c630>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cba8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c668>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c358>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cdd8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5c0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029117584228515625  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029122352600097656  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10701775550842285
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7690365314483643
loading full batch data spends  0.002763032913208008
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.604194641113281e-05
step  0
else: feat size  torch.Size([1366, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 104, 4: 107, 5: 85, 6: 59, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b630>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd30>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2b0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bef0>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b908>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b1d0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcc0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b160>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b668>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb70>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb38>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df98>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df60>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002b0f0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d860>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d0f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bb70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bdd8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d358>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d0f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d5f8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6d8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cf28>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029139995574951172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029144763946533203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1042337417602539
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00928354263305664  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7392901182174683
loading full batch data spends  0.003560304641723633
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.67572021484375e-05
step  0
else: feat size  torch.Size([1356, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 106, 5: 85, 6: 59, 7: 35, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b668>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc50>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b358>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2e8>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e53668>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e53518>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bdd8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bf98>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7dd30>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bac8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cf8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cc0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf60>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b470>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba20>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be48>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b748>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bba8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6beb8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bdd8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b780>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd68>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bfd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b278>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029066085815429688  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907085418701172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09815287590026855
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8167335987091064
loading full batch data spends  0.0035965442657470703
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.981590270996094e-05
step  0
else: feat size  torch.Size([1356, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 109, 5: 84, 6: 60, 7: 33, 8: 21, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b898>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcc0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cda0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cef0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6a0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cf28>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccc0>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c860>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc18>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccf8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cf8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f860>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ac18>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f5f8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b8d0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae80>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e908>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4edd8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064438>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fe48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a2b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba90>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028980255126953125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028985023498535156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11222505569458008
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00923013687133789  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7541728019714355
loading full batch data spends  0.0033440589904785156
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.410743713378906e-05
step  0
else: feat size  torch.Size([1363, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 106, 4: 109, 5: 84, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e796d8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be80>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f4a8>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fd68>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f470>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fd30>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f1d0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f898>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fac8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fb00>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5c0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce48>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c630>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb38>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c3c8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccc0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c8d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccf8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e908>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75e10>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fc18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b898>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7dac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b630>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6f9b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029132366180419922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029137134552001953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11448264122009277
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8295332193374634
loading full batch data spends  0.0027718544006347656
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.3392181396484375e-05
step  0
else: feat size  torch.Size([1360, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 103, 4: 109, 5: 86, 6: 60, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b8d0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b160>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b198>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb70>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b278>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b898>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b208>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba58>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b358>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf28>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b470>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9b0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf98>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b438>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b4a8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cda0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cf28>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c7f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c978>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc88>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c320>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce80>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cdd8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029073238372802734  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029078006744384766  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11121296882629395
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009251594543457031  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7842034101486206
loading full batch data spends  0.004897356033325195
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.008148193359375e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 110, 5: 85, 6: 60, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bac8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b048>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b748>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b8d0>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b828>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bac8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b630>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcf8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bbe0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b898>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b908>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b470>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcf8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b240>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d0f0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b470>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bda0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7dac8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df60>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bef0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf60>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca20>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cda0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce10>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c7f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02906036376953125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02906513214111328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10267210006713867
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7435057163238525
loading full batch data spends  0.005685329437255859
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.5789947509765625e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 110, 5: 84, 6: 60, 7: 34, 8: 21, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bb00>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70f98>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f5f8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70b00>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d5f8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df98>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a080>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d860>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d0f0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a2b0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b860>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bbe0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bda0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bac8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be80>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b3c8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b320>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b908>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be48>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb38>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b3c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bef0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02898693084716797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02899169921875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10454368591308594
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7698732614517212
loading full batch data spends  0.0023415088653564453
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.457069396972656e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 103, 4: 107, 5: 86, 6: 59, 7: 33, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bbe0>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e705f8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9b0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce80>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c3c8>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c898>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9e8>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc18>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cdd8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6d8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e908>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fac8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7dac8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e550>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bac8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d860>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be48>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d358>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e550>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d860>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df98>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b8d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7dac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be10>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029078960418701172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029083728790283203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09969925880432129
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8115891218185425
loading full batch data spends  0.003107786178588867
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.506111145019531e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 103, 4: 110, 5: 87, 6: 58, 7: 33, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc50>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bc18>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bd30>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba20>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bd30>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bda0>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bdd8>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be10>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be80>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c358>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc18>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9b0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c320>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc50>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c940>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cdd8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca20>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cba8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9218f3a2e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bf98>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d5f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002b278>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df98>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bac8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029062747955322266  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029067516326904297  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10692310333251953
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009235858917236328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7832969427108765
loading full batch data spends  0.002357959747314453
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.4809112548828125e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 94, 3: 105, 4: 110, 5: 83, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7dac8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd68>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b828>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b898>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcc0>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b588>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b860>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf28>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2e8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba58>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba20>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b358>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7f0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be80>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce80>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c630>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c978>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccf8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c358>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce48>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c7f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccc0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c3c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02912759780883789  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029132366180419922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.14487218856811523
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7559784650802612
loading full batch data spends  0.0077478885650634766
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   0.00010180473327636719
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 108, 5: 83, 6: 61, 7: 33, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bb70>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7dd30>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b668>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d390>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b080>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5c0>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70518>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70d30>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d390>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d358>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df98>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70d30>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70f98>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70b00>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70e80>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f5f8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f080>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fd30>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fd68>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f4a8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f1d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce10>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028998851776123047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029003620147705078  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11447310447692871
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7969951629638672
loading full batch data spends  0.003149747848510742
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.553794860839844e-05
step  0
else: feat size  torch.Size([1374, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 101, 4: 108, 5: 85, 6: 60, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002b0f0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b208>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([101, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b1d0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e796d8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e79b00>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7dd30>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e53668>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d860>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6f9b0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b898>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f048>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002b0f0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb38>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064668>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002b0f0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be48>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4edd8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b898>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5c0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b780>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bfd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6beb8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b6a0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0292205810546875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02922534942626953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10126686096191406
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7362709045410156
loading full batch data spends  0.0023577213287353516
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.4809112548828125e-05
step  0
else: feat size  torch.Size([1362, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 102, 4: 107, 5: 85, 6: 61, 7: 34, 8: 21, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fb00>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bdd8>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c358>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c7f0>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca90>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce80>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6a0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cba8>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce48>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c978>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e492e8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e53518>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4edd8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75e48>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70b00>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bb00>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75e48>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70518>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75e10>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70f98>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4edd8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75cf8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70b00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e53518>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75e10>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029015064239501953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029019832611083984  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10280871391296387
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009262561798095703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7734688520431519
loading full batch data spends  0.003895998001098633
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.6743621826171875e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 109, 5: 87, 6: 60, 7: 34, 8: 21, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f470>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75cf8>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2e8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bbe0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b278>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be10>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b588>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b320>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccc0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c470>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccf8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9b0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cef0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c860>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb00>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c978>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce48>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c940>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cc0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cf8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ac18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e550>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4d358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4edd8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904510498046875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904987335205078  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1070101261138916
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7250080108642578
loading full batch data spends  0.0033888816833496094
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.981590270996094e-05
step  0
else: feat size  torch.Size([1360, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 110, 5: 85, 6: 60, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75e10>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b358>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb38>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc50>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd30>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb70>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b160>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf28>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9e8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b080>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b3c8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be10>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2b0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2e8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be48>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b208>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c470>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c940>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c438>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6d8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc50>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c8d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c0f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccc0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029110431671142578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02911520004272461  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11063814163208008
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009251594543457031  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.751699447631836
loading full batch data spends  0.0022933483123779297
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.4809112548828125e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 109, 5: 85, 6: 61, 7: 35, 8: 23, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75e48>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9218f3a2e8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a2e8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf28>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b438>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7b8>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b1d0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba58>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b160>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba90>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b080>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b898>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf60>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b198>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9b0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b208>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be48>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be80>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc18>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b278>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b6a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ceb8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c438>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029035568237304688  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904033660888672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09645986557006836
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7259492874145508
loading full batch data spends  0.0023038387298583984
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.7206878662109375e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 102, 4: 109, 5: 83, 6: 59, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e796d8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b8d0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bdd8>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b630>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fe48>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a080>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fd30>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a2b0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae80>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a978>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb38>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bba8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be10>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b4a8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba20>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd30>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b080>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcf8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf60>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b198>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b208>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029010295867919922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029015064239501953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10010600090026855
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.763665795326233
loading full batch data spends  0.0030922889709472656
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.458427429199219e-05
step  0
else: feat size  torch.Size([1361, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 107, 5: 83, 6: 59, 7: 35, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba90>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccf8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccc0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cdd8>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6a0>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cac8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca20>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c668>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce80>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cba8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cc0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e77a90>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df98>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e79b00>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fe48>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae80>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fd68>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f438>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e705f8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb00>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bfd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb38>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b4a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b748>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b1d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029073238372802734  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029078006744384766  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10048747062683105
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.732701063156128
loading full batch data spends  0.004260540008544922
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.458427429199219e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 109, 5: 85, 6: 60, 7: 33, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cf8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b358>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb38>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bbe0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb70>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be10>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf60>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b668>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b630>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b8d0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c400>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c8d0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cac8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cdd8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c908>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccf8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9b0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc50>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d0f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d5f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df98>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fe48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fe10>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029006481170654297  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029011249542236328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10098695755004883
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009246349334716797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7261461019515991
loading full batch data spends  0.002889394760131836
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.38690185546875e-05
step  0
else: feat size  torch.Size([1360, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 108, 5: 84, 6: 59, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75cf8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bda0>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be80>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7b8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bac8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc18>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba90>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf98>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc50>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b470>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b898>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc88>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7f0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b710>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bfd0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc50>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c3c8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cf28>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c978>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cba8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c358>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c400>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c8d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca20>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02906322479248047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0290679931640625  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10395526885986328
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.745850920677185
loading full batch data spends  0.004166364669799805
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.817413330078125e-05
step  0
else: feat size  torch.Size([1356, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 109, 5: 83, 6: 61, 7: 34, 8: 21, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb70>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f080>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bda0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bef0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bbe0>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bac8>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf28>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb38>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b4a8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf98>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b710>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b048>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc50>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcc0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bdd8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b780>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b630>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcf8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be10>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b6a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cf28>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c470>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029045581817626953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029050350189208984  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1044001579284668
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00923013687133789  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7400250434875488
loading full batch data spends  0.003096342086791992
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.363059997558594e-05
step  0
else: feat size  torch.Size([1346, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 108, 5: 85, 6: 59, 7: 35, 8: 22, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bd30>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf98>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba58>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2b0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e47da0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e492e8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fac8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cf8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b630>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f048>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2b0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5c0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bbe0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd30>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bac8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b588>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b828>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bda0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba20>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6beb8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba90>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b278>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02890157699584961  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02890634536743164  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10281634330749512
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7255154848098755
loading full batch data spends  0.005739688873291016
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.7670135498046875e-05
step  0
else: feat size  torch.Size([1369, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 105, 4: 108, 5: 82, 6: 60, 7: 35, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e49240>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7f0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6d8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9b0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c400>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c470>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc88>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cba8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccf8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce10>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e796d8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9218f3a2e8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e492e8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6f9b0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b630>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fe48>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cf8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f92100295f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4edd8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ac18>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5c0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bba8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b160>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd30>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029142379760742188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02914714813232422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1023702621459961
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009299755096435547  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6964069604873657
loading full batch data spends  0.0022974014282226562
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.457069396972656e-05
step  0
else: feat size  torch.Size([1361, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 108, 5: 84, 6: 60, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e496d8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd68>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc50>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b748>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bfd0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba58>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b860>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bdd8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7f0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcf8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c898>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cac8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc50>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce80>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c908>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc88>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce10>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6f9b0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fe48>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e47da0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e53668>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b630>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7dd30>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907276153564453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029077529907226562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10280323028564453
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7298718690872192
loading full batch data spends  0.003092527389526367
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.38690185546875e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 106, 4: 110, 5: 82, 6: 59, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e62198>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9e8>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b438>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b160>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b320>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b630>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b3c8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb00>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be48>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7f0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba58>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b860>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b1d0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be80>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bda0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5f8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6d8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c470>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cef0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cdd8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c978>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c358>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029063701629638672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029068470001220703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10779094696044922
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7335199117660522
loading full batch data spends  0.002535581588745117
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.410743713378906e-05
step  0
else: feat size  torch.Size([1347, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 109, 5: 86, 6: 61, 7: 35, 8: 23, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bdd8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf28>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9e8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5c0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba90>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcc0>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb70>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b3c8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b160>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b630>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([634, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bef0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bda0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2e8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc88>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bfd0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b860>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6beb8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b198>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b588>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce48>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6d8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5c0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cef0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02903461456298828  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029039382934570312  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1091146469116211
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7152714729309082
loading full batch data spends  0.003194570541381836
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.409385681152344e-05
step  0
else: feat size  torch.Size([1362, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 98, 3: 104, 4: 109, 5: 85, 6: 60, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a278>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ac18>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4d358>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae48>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bbe0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bf98>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e53518>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb00>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064668>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fc18>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b438>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf28>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b160>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcf8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b1d0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb00>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc18>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcc0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b080>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b780>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc50>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be80>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029099464416503906  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029104232788085938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09908390045166016
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009262561798095703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7358733415603638
loading full batch data spends  0.0030279159545898438
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.38690185546875e-05
step  0
else: feat size  torch.Size([1371, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 104, 4: 109, 5: 82, 6: 60, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b198>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a2e8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca20>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c978>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc18>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c668>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c358>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c400>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c438>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb70>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70f28>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70e80>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75cf8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d860>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e49240>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fb00>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fd30>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75cf8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e62198>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bf98>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75e48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a978>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae80>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bba8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bbe0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029181957244873047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029186725616455078  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10224366188049316
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7354310750961304
loading full batch data spends  0.0023658275604248047
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.220008850097656e-05
step  0
else: feat size  torch.Size([1353, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 103, 4: 110, 5: 85, 6: 60, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fac8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf60>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc88>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b240>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5c0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bda0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be48>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b198>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd68>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cac8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c400>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca20>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca90>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce10>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccf8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c438>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce48>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c8d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e62198>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e49240>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae80>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002b278>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e518>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bac8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029058456420898438  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02906322479248047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10251092910766602
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009214401245117188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7112020254135132
loading full batch data spends  0.002218008041381836
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.24249267578125e-05
step  0
else: feat size  torch.Size([1347, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 94, 3: 104, 4: 110, 5: 83, 6: 58, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f470>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2b0>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bba8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b668>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b240>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b710>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b160>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b908>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b898>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b8d0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([627, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9b0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be80>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5c0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd68>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c978>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc50>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c860>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ceb8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cac8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c908>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c630>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5f8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028913497924804688  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02891826629638672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09952521324157715
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7466706037521362
loading full batch data spends  0.004099130630493164
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.0531158447265625e-05
step  0
else: feat size  torch.Size([1345, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 109, 5: 83, 6: 60, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be48>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd30>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb70>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9b0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9e8>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b278>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7f0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be80>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcc0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b8d0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcc0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bbe0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcf8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba90>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd68>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f898>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fd68>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f048>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f3c8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f5f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fb00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f400>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5c0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028950214385986328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02895498275756836  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10013198852539062
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009171485900878906  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.712942123413086
loading full batch data spends  0.0028481483459472656
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.1961669921875e-05
step  0
else: feat size  torch.Size([1366, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 107, 5: 86, 6: 59, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bdd8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be10>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b8d0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2b0>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e518>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e550>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f3c8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fd30>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f048>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4ff98>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be48>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bdd8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc18>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bdd8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b438>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bfd0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b898>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b3c8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b1d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc50>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b208>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf60>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b710>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02918386459350586  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02918863296508789  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10273981094360352
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7334628105163574
loading full batch data spends  0.0024607181549072266
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.601478576660156e-05
step  0
else: feat size  torch.Size([1351, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 109, 5: 85, 6: 59, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f400>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd68>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c630>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cac8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c400>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cf28>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c860>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c8d0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c908>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c128>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bd30>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be48>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df98>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bdd8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f470>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7dd30>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df98>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f3c8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70d30>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b8d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4ff98>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f470>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bdd8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b4a8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0290069580078125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02901172637939453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10442757606506348
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009203433990478516  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7301620244979858
loading full batch data spends  0.0038573741912841797
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.793571472167969e-05
step  0
else: feat size  torch.Size([1346, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 103, 4: 107, 5: 86, 6: 61, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e79b00>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e53668>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fd30>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fd68>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f5f8>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f438>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f898>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f048>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc88>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9b0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c978>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca20>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cda0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cba8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb00>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c128>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c908>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccf8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bf98>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6f9b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e518>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be48>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4edd8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bdd8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029072284698486328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907705307006836  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10729312896728516
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.746263861656189
loading full batch data spends  0.0032672882080078125
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.647804260253906e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 105, 5: 87, 6: 61, 7: 35, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b8d0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be80>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcf8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b908>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b8d0>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2e8>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bbe0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b710>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bba8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be10>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b438>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd30>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf98>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf28>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b588>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccf8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c3c8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce10>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc88>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02919769287109375  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02920246124267578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09932351112365723
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009297370910644531  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7498551607131958
loading full batch data spends  0.0029723644256591797
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.2438507080078125e-05
step  0
else: feat size  torch.Size([1341, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 105, 4: 107, 5: 83, 6: 59, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bf98>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4edd8>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be10>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bba8>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b1d0>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b208>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba20>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6beb8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b710>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b6a0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b438>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b278>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9e8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb70>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b668>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb38>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b588>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b4a8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b780>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b240>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5c0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccc0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c3c8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028953075408935547  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028957843780517578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10292387008666992
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6994023323059082
loading full batch data spends  0.0031652450561523438
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.008148193359375e-05
step  0
else: feat size  torch.Size([1348, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 102, 4: 110, 5: 85, 6: 61, 7: 33, 8: 23, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fe10>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b630>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f080>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b898>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7dac8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e77a90>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bac8>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b8d0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf98>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6beb8>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b1d0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba90>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b198>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9e8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bfd0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b4a8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b048>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b860>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7b8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b240>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb38>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be10>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b048>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02895832061767578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028963088989257812  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1034390926361084
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009187698364257812  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6944221258163452
loading full batch data spends  0.0031385421752929688
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.5299530029296875e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 103, 4: 110, 5: 86, 6: 59, 7: 34, 8: 20, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b320>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c978>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc88>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c438>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c860>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c7f0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cdd8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5c0>
func(nbatch).neighbor  torch.Size([20, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cf28>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c8d0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4edd8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066908>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002b278>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e908>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bf98>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bb70>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e518>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e550>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066908>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cc0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002b278>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bb70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b8d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf98>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02900409698486328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029008865356445312  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09711098670959473
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7439109086990356
loading full batch data spends  0.0031256675720214844
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.528594970703125e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 110, 5: 83, 6: 59, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d358>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2e8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bdd8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf60>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be10>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bbe0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb70>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be48>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b8d0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ceb8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9e8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c7f0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c438>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6a0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c978>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca20>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce10>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4d358>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4d6a0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4edd8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fe10>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bb00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e518>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029024600982666016  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029029369354248047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10943889617919922
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009235858917236328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7299307584762573
loading full batch data spends  0.002489805221557617
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.1961669921875e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 109, 5: 84, 6: 59, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bd30>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9b0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd30>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be48>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b588>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb00>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bfd0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bac8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc50>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b160>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b908>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcc0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b240>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc18>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7b8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7f0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce10>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc18>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c940>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c128>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c8d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c630>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ceb8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cdd8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029016494750976562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029021263122558594  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.08217072486877441
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6922575235366821
loading full batch data spends  0.0014693737030029297
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   2.7179718017578125e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 105, 4: 109, 5: 84, 6: 60, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6f9b0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2b0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b3c8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcc0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b198>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b470>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc18>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b438>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7b8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b278>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([634, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb70>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bdd8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b4a8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b1d0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f048>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4ffd0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f4a8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f400>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f080>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fac8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fd68>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f3c8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c940>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029145240783691406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029150009155273438  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.08576846122741699
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009288787841796875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.728350043296814
loading full batch data spends  0.0014455318450927734
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   2.6226043701171875e-05
step  0
else: feat size  torch.Size([1371, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 104, 4: 107, 5: 87, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e518>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be48>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bb00>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b898>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e47da0>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e53518>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fac8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4ffd0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fd68>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fd30>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9e8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be48>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b860>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b8d0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2b0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bfd0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcc0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bac8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5c0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b198>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b470>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcf8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b160>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029184341430664062  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029189109802246094  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.0858755111694336
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7140766382217407
loading full batch data spends  0.001956462860107422
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   2.6464462280273438e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 109, 5: 86, 6: 59, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4ff98>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bc18>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce48>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9e8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ceb8>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9b0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c8d0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c7f0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c978>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c320>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e550>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e518>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e53668>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e53518>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6f9b0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a9b0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a080>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a2e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fe10>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fd68>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029b38>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b278>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029079437255859375  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029084205627441406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.08568739891052246
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009235858917236328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7400500774383545
loading full batch data spends  0.0018739700317382812
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.62396240234375e-05
step  0
else: feat size  torch.Size([1365, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 109, 5: 84, 6: 59, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f470>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b630>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b208>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b3c8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bbe0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd68>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bdd8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be48>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bc18>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b668>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6d8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cef0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce10>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb00>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c128>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c8d0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cdd8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c320>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e53668>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e53518>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029b38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df98>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4d6a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a080>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029091358184814453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029096126556396484  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.08156275749206543
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7704206705093384
loading full batch data spends  0.0014634132385253906
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   2.6941299438476562e-05
step  0
else: feat size  torch.Size([1355, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 109, 5: 83, 6: 60, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002b0f0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b160>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b240>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b198>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd30>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7b8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b860>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9e8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be48>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7f0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bdd8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b470>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf98>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b630>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b208>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce48>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9b0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca20>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c3c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c438>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c0f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c630>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029023170471191406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029027938842773438  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10530996322631836
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009224891662597656  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9777849912643433
loading full batch data spends  0.0029592514038085938
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.2438507080078125e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 106, 4: 109, 5: 83, 6: 61, 7: 33, 8: 20, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bdd8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b048>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6beb8>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be10>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcc0>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b320>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be80>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b278>
func(nbatch).neighbor  torch.Size([20, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70a20>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70e80>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b080>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b630>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be10>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b3c8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb00>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bbe0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9b0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b898>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be48>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bc18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c358>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cba8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca20>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029026031494140625  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029030799865722656  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09691500663757324
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9514626264572144
loading full batch data spends  0.003443479537963867
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.886222839355469e-05
step  0
else: feat size  torch.Size([1366, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 105, 4: 108, 5: 85, 6: 60, 7: 35, 8: 21, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d358>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b358>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b588>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b860>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4d358>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4d6a0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb38>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064668>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b898>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bd30>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cf8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066908>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b160>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba90>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b240>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc18>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcf8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b1d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf60>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5c0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b828>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029049396514892578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905416488647461  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09496569633483887
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00928354263305664  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8433711528778076
loading full batch data spends  0.0037293434143066406
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.507469177246094e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 103, 4: 107, 5: 85, 6: 59, 7: 34, 8: 22, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb70>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7b8>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c470>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c898>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccc0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5c0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cf28>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c978>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c320>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c400>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4d358>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9218f3a2e8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066908>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cf8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e77a90>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029b38>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bbe0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029438>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029b38>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d390>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b198>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028948307037353516  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028953075408935547  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.08729147911071777
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.731191635131836
loading full batch data spends  0.0014493465423583984
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   2.8371810913085938e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 106, 4: 111, 5: 82, 6: 59, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb00>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b080>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4ff98>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4ffd0>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f4a8>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f3c8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f860>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fb00>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fd30>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce80>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c978>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c470>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c0f0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6a0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb70>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c320>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c358>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca90>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cc0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066908>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e47da0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e908>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4edd8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029129505157470703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029134273529052734  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.08636736869812012
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009273052215576172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.730033278465271
loading full batch data spends  0.0020122528076171875
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.409385681152344e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 109, 5: 84, 6: 59, 7: 35, 8: 21, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029710>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcc0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb38>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b3c8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba20>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bef0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bdd8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc50>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bda0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b8d0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b470>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb00>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b6a0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c898>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6d8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c3c8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce10>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce80>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ceb8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc50>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca20>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccc0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb38>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029074668884277344  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029079437255859375  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.08885693550109863
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7467526197433472
loading full batch data spends  0.002550840377807617
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.696846008300781e-05
step  0
else: feat size  torch.Size([1365, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 108, 5: 84, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bdd8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b748>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bac8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7b8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b588>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb38>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bfd0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bdd8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcc0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b4a8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b630>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b470>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b898>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b240>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b358>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba90>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b6a0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd68>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5c0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b8d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cba8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029104232788085938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02910900115966797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.08553791046142578
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009278297424316406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7226051092147827
loading full batch data spends  0.0018835067749023438
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.24249267578125e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 104, 4: 108, 5: 86, 6: 58, 7: 35, 8: 22, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b8d0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70f98>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70b00>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70d30>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f860>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4ffd0>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029438>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cf8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d5f8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210066cc0>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b208>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b048>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bef0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b080>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc18>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcc0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bfd0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b630>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc50>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b3c8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b898>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b240>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba90>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02898263931274414  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028987407684326172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.08026933670043945
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7382986545562744
loading full batch data spends  0.0014476776123046875
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   2.6941299438476562e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 110, 5: 83, 6: 59, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b828>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70f28>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce80>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c3c8>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c400>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc18>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccc0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ceb8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca90>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c8d0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e53668>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002b278>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e49630>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df60>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029b38>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f92100295f8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b908>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba20>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bef0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b588>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b208>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b080>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b748>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf60>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bfd0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029065608978271484  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029070377349853516  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.08573246002197266
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.751109004020691
loading full batch data spends  0.0015459060668945312
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   2.86102294921875e-05
step  0
else: feat size  torch.Size([1356, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 106, 4: 108, 5: 82, 6: 58, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd30>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b470>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b898>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bdd8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bbe0>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb38>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b8d0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb70>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc88>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c898>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce10>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c630>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9e8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c438>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c7f0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c8d0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca90>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6a0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002b278>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e53518>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d5f8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e49630>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7dac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df60>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0290679931640625  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907276153564453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.08677530288696289
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7202653884887695
loading full batch data spends  0.001958131790161133
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   2.5272369384765625e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 107, 5: 84, 6: 59, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b668>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d0f0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b898>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df60>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d860>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcf8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d358>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210029b38>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a2b0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d5f8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bbe0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b320>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a978>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b1d0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bbe0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2e8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae48>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c898>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6a0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c470>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb38>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cc88>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905416488647461  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905893325805664  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.08423304557800293
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009241104125976562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7473583221435547
loading full batch data spends  0.0014333724975585938
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.719329833984375e-05
step  0
else: feat size  torch.Size([1362, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 104, 4: 108, 5: 84, 6: 59, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bdd8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b710>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bef0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba20>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b048>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b780>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b748>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b208>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc88>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc18>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b630>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba58>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf60>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2e8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf28>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bbe0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9b0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcf8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b8d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b160>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b668>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bf98>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cdd8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c470>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029020309448242188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02902507781982422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.08535981178283691
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6995923519134521
loading full batch data spends  0.0018889904022216797
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.4332275390625e-05
step  0
else: feat size  torch.Size([1379, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 102, 4: 106, 5: 87, 6: 59, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b668>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bf98>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70518>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd68>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4d358>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4d6a0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e796d8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae48>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b4a8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bba8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be10>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b5c0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b588>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc88>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b630>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b208>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b278>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b710>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b780>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6beb8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b470>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd30>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b320>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b240>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029236793518066406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029241561889648438  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.14389920234680176
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009356021881103516  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7394442558288574
loading full batch data spends  0.004209756851196289
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.556510925292969e-05
step  0
else: feat size  torch.Size([1360, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 94, 3: 105, 4: 108, 5: 86, 6: 60, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b6a0>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca20>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9e8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c8d0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ccc0>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9b0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cac8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c0f0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c668>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c358>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064668>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f860>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df98>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d390>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f3c8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75e48>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75cf8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b4a8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcc0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba20>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b588>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bfd0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd68>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b3c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029178142547607422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029182910919189453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12984442710876465
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.735169529914856
loading full batch data spends  0.005687713623046875
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   9.083747863769531e-05
step  0
else: feat size  torch.Size([1351, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 94, 3: 104, 4: 108, 5: 86, 6: 59, 7: 34, 8: 23, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d5f8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ac18>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a278>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a978>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70a20>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ac18>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a2b0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70518>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70f28>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a278>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce10>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5c0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9b0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c8d0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb00>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca20>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6d8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fc18>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f92100295f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e49630>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e53668>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f3c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be10>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028944015502929688  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02894878387451172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10206818580627441
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009203433990478516  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7189610004425049
loading full batch data spends  0.0025098323822021484
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.363059997558594e-05
step  0
else: feat size  torch.Size([1355, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 108, 5: 85, 6: 59, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4d6a0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc50>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bda0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2e8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b8d0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b240>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bbe0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b630>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b1d0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9e8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba58>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b860>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b3c8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b2b0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcc0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c860>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca90>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cf28>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce80>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce10>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5c0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cac8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907276153564453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029077529907226562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.08686423301696777
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7089475393295288
loading full batch data spends  0.001455545425415039
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   2.7418136596679688e-05
step  0
else: feat size  torch.Size([1344, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 108, 5: 85, 6: 59, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7df98>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be80>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b358>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b3c8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b278>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b048>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bef0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb00>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b208>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd68>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75e10>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e75e48>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae48>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcf8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b208>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae80>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bb00>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b668>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a2b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7ae80>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a080>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c940>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c898>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028969764709472656  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028974533081054688  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.08200550079345703
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009166240692138672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.756627082824707
loading full batch data spends  0.002403736114501953
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.220008850097656e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 103, 4: 109, 5: 85, 6: 59, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4f5f8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b8d0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7b668>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be48>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e49240>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e492e8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a2b0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e495f8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a2e8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e492e8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba20>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6beb8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b630>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9b0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b4a8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba58>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b588>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be80>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bda0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b160>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b3c8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b278>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b048>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b710>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02906942367553711  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907419204711914  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.08399462699890137
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.70987868309021
loading full batch data spends  0.0024900436401367188
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.337860107421875e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 105, 4: 109, 5: 85, 6: 57, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4fb00>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7be10>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb38>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cef0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce10>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c898>
func(nbatch).neighbor  torch.Size([57, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c358>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c9b0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ca20>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c470>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a9b0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a080>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70080>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6fe48>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064668>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70d30>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7d5f8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bf98>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e550>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba90>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b6a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b4a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b9b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b8d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028985023498535156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028989791870117188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.13136625289916992
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.703070878982544
loading full batch data spends  0.004118919372558594
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.341934204101562e-05
step  0
else: feat size  torch.Size([1350, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 102, 4: 110, 5: 85, 6: 58, 7: 33, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7a2e8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bdd8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bc18>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb70>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb00>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b588>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bc18>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb70>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bbe0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb38>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cba8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c128>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb70>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5f8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c5c0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c358>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cac8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c470>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002bf98>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e4e518>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70f98>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f9210064668>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70b00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e70d30>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028937816619873047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028942584991455078  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12555575370788574
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6744742393493652
loading full batch data spends  0.00554656982421875
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.984306335449219e-05
step  0
else: feat size  torch.Size([1362, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 109, 5: 84, 6: 59, 7: 35, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e7bb70>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b390>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bd68>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b080>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bc18>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b860>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b358>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba58>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6bcf8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6ba90>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be48>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b710>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6be10>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b7b8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6beb8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f91a9e6b320>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c908>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb38>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c898>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c6d8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c400>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c8d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002c0f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002cb00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f921002ce80>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029115676879882812  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029120445251464844  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.13327527046203613
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009262561798095703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.714482307434082
Total (block generation + training)time/epoch 0.11797876954078675
pure train time/epoch 0.10439471930873637

num_input_list  [1342, 1367, 1347, 1359, 1348, 1366, 1368, 1366, 1349, 1361, 1357, 1358, 1365, 1368, 1384, 1357, 1358, 1357, 1369, 1358, 1364, 1348, 1358, 1350, 1348, 1364, 1361, 1358, 1368, 1373, 1357, 1371, 1355, 1347, 1351, 1354, 1369, 1368, 1381, 1358, 1358, 1366, 1358, 1360, 1365, 1366, 1350, 1365, 1367, 1347, 1356, 1349, 1374, 1357, 1359, 1365, 1371, 1352, 1359, 1354, 1367, 1356, 1369, 1352, 1364, 1352, 1362, 1359, 1358, 1361, 1346, 1362, 1370, 1364, 1368, 1359, 1359, 1361, 1351, 1366, 1363, 1354, 1365, 1351, 1373, 1371, 1352, 1348, 1370, 1368, 1343, 1357, 1352, 1368, 1354, 1356, 1363, 1375, 1352, 1364, 1352, 1357, 1353, 1367, 1355, 1346, 1364, 1358, 1374, 1370, 1356, 1370, 1367, 1364, 1361, 1363, 1361, 1371, 1368, 1353, 1352, 1354, 1349, 1363, 1363, 1359, 1360, 1350, 1346, 1363, 1368, 1367, 1355, 1363, 1367, 1366, 1356, 1356, 1363, 1360, 1357, 1354, 1364, 1357, 1367, 1354, 1374, 1362, 1357, 1360, 1352, 1354, 1361, 1359, 1360, 1356, 1346, 1369, 1361, 1354, 1347, 1362, 1371, 1353, 1347, 1345, 1366, 1351, 1346, 1368, 1341, 1348, 1359, 1357, 1357, 1367, 1371, 1357, 1365, 1355, 1358, 1366, 1359, 1364, 1359, 1365, 1357, 1354, 1356, 1358, 1362, 1379, 1360, 1351, 1355, 1344, 1357, 1354, 1350, 1362]
