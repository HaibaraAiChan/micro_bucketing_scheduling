main start at this time 1695408673.495569
  NumNodes: 2708
  NumEdges: 10556
  NumFeats: 1433
  NumClasses: 7
  NumTrainingSamples: 140
  NumValidationSamples: 500
  NumTestSamples: 1000
Done loading data from cached files.
success----------------------------------------
140
500
2068
# Nodes: 2708
# Edges: 10556
# Train: 140
# Val: 500
# Test: 2068
# Classes: 7

in feats:  1433
loading full batch data spends  0.00266265869140625
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   2.765655517578125e-05
step  0
else: feat size  torch.Size([1342, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 105, 4: 109, 5: 83, 6: 58, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69ddcd320>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69ddcd358>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69ddcd7b8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69ddcda20>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69ddcdc88>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69ddcdef0>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69ddc3198>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69ddc3400>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69ddc3668>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69ddc38d0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d5fd128>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d5fd160>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d5fd5c0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d5fd828>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d5fda90>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d5fdcf8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d5fdf60>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d600208>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d600470>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6006d8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d600940>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d600ba8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d600e10>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6010b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d601320>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.552734375 GB
    Memory Allocated: 0.02727031707763672  GigaBytes
Max Memory Allocated: 0.027710914611816406  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.552734375 GB
    Memory Allocated: 0.02727508544921875  GigaBytes
Max Memory Allocated: 0.027710914611816406  GigaBytes

pure train time  0.5069260597229004
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.5625 GB
    Memory Allocated: 0.009155750274658203  GigaBytes
Max Memory Allocated: 0.027710914611816406  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9514586925506592
loading full batch data spends  0.0048596858978271484
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.698204040527344e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 98, 3: 102, 4: 108, 5: 86, 6: 59, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d601cf8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d601e10>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d605160>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6053c8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d605630>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69ddcdcc0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69ddcdf28>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d5fdac8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d600ba8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6ac0ed400>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d605978>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6059b0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d605e10>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6080b8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d608320>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d608588>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6087f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d608a58>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d608cc0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d608f28>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6201d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d620438>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6206a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d620908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d620b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905416488647461  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905893325805664  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.12005496025085449
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009288787841796875  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9435548782348633
loading full batch data spends  0.0023200511932373047
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.695487976074219e-05
step  0
else: feat size  torch.Size([1347, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 109, 5: 85, 6: 57, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d60c550>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d60c588>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d60c9e8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d60cc50>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d60ceb8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d62f160>
func(nbatch).neighbor  torch.Size([57, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d62f3c8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d62f630>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d62f898>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d62fb00>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d627240>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6080b8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d608320>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d600ba8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa689f60>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d60cc50>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d62f160>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6270b8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d627438>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6276a0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d627908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d627b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d627dd8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d629080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6292e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028745651245117188  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02875041961669922  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.10811328887939453
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009182453155517578  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9507864713668823
loading full batch data spends  0.003135204315185547
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.7206878662109375e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 111, 5: 83, 6: 59, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d629d30>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d629c88>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631198>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631400>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631668>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6318d0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631b38>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631da0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633048>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6332b0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633ac8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633b00>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633f60>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635208>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635470>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6356d8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635940>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635ba8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635e10>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d627438>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d627080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d629c88>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633b70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635f28>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028865814208984375  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028870582580566406  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.12053322792053223
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009246349334716797  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9451849460601807
loading full batch data spends  0.002352476119995117
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.743171691894531e-05
step  0
else: feat size  torch.Size([1348, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 105, 4: 111, 5: 82, 6: 59, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d637518>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d637550>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6379b0>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d637c18>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d637e80>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d619128>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d619390>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6195f8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d619860>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d619ac8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b320>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b358>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7b8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61ba20>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bc88>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bef0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630198>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630400>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630668>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6308d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630b38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630da0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d628048>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6282b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d628518>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02881908416748047  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0288238525390625  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.11233806610107422
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009187698364257812  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.935640811920166
loading full batch data spends  0.002321481704711914
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.743171691894531e-05
step  0
else: feat size  torch.Size([1366, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 103, 4: 107, 5: 85, 6: 60, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d619e80>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d619f60>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69b2e8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6285f8>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d628748>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d628b00>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d628c88>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d628eb8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4198>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4400>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4b00>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4b38>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4f98>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69ddc0240>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69ddc04a8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69ddc0710>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69ddc0978>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69ddc0be0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69ddc0e48>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6390f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6395c0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639828>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639a90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639cf8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02897787094116211  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02898263931274414  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.10885167121887207
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00928354263305664  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9320600032806396
loading full batch data spends  0.0031790733337402344
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.649162292480469e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 104, 4: 111, 5: 85, 6: 59, 7: 33, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6710>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6748>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6ba8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6e10>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4ba8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4be0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6390f0>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6285c0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d60c198>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6ef0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3470>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d34a8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3908>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3b70>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3dd8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0080>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d02e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0550>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d07b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0a20>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0c88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0ef0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7198>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7400>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7668>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904653549194336  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905130386352539  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.11300468444824219
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009294509887695312  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9394245147705078
loading full batch data spends  0.005856752395629883
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.987022399902344e-05
step  0
else: feat size  torch.Size([1366, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 105, 4: 107, 5: 86, 6: 58, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631da0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6ad4d1588>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5470>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56d8>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5048>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5438>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56a0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5080>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50b8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5550>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6285c0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639358>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d34e0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d60c198>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d36a0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3518>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633160>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3940>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0c88>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3240>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0a58>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d02e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3dd8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0320>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028983116149902344  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028987884521484375  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.12257814407348633
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00928354263305664  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9235103130340576
loading full batch data spends  0.0023136138916015625
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.790855407714844e-05
step  0
else: feat size  torch.Size([1349, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 108, 5: 85, 6: 60, 7: 34, 8: 21, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a58>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7940>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7198>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d79e8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7eb8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a90>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d79b0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5908>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5550>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a58>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54a8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50b8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5898>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5438>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5978>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5320>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d628b00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69ddc04a8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3940>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69b2e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4b38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d34e0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02893972396850586  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02894449234008789  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.10944652557373047
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009294509887695312  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.912177562713623
loading full batch data spends  0.0031270980834960938
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.222724914550781e-05
step  0
else: feat size  torch.Size([1361, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 108, 5: 85, 6: 57, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b400>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b320>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ac8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7470>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7eb8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7438>
func(nbatch).neighbor  torch.Size([57, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7780>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7908>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ba8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a90>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7f28>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ef0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e58d0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5860>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a90>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5198>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5550>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56d8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5828>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028944969177246094  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028949737548828125  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.11624288558959961
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009256839752197266  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9088852405548096
loading full batch data spends  0.004378557205200195
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.364418029785156e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 105, 4: 106, 5: 85, 6: 58, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7908>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ba8>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7e80>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7438>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7748>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7940>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d74a8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6390f0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b70>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b00>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639dd8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639d68>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7f0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639fd0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bf28>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b3c8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6396a0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b400>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b38>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5630>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5198>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e58d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028942108154296875  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028946876525878906  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.12483620643615723
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009294509887695312  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.930783748626709
loading full batch data spends  0.005791902542114258
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   8.463859558105469e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 103, 4: 107, 5: 85, 6: 61, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5d30>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7198>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e80>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6780>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633160>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d629550>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b358>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69bb70>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bf28>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5860>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c18>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52e8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5198>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b00>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5550>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5d30>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e10>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5fd0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f60>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ef0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5278>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d76a0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02898550033569336  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02899026870727539  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.12165069580078125
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009241104125976562  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9131578207015991
loading full batch data spends  0.0022318363189697266
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.7670135498046875e-05
step  0
else: feat size  torch.Size([1365, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 104, 4: 110, 5: 84, 6: 60, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0c88>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5470>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a20>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0588>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7908>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d79b0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0ef0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d71d0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635cc0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d71d0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4be0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69b2e8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0a20>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d62fda0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0c88>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630b70>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633ac8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630438>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7710>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0a20>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d78d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7908>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b3c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0a20>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7748>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029027462005615234  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029032230377197266  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.1126546859741211
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009294509887695312  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9188897609710693
loading full batch data spends  0.00454401969909668
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.650520324707031e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 102, 4: 109, 5: 84, 6: 60, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d74a8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7908>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4b38>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7748>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d46a0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0a58>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ac8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d48d0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4b00>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d46a0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6198>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6e48>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d60c198>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d46a0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bf28>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7f0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0320>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69ddc04a8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633160>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69bb70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d637518>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d62fda0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6285c0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3b70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029061317443847656  GigaBytes
Max Memory Allocated: 0.029604434967041016  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029066085815429688  GigaBytes
Max Memory Allocated: 0.029604434967041016  GigaBytes

pure train time  0.11716842651367188
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009294509887695312  GigaBytes
Max Memory Allocated: 0.029604434967041016  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9061334133148193
loading full batch data spends  0.005159854888916016
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.435943603515625e-05
step  0
else: feat size  torch.Size([1384, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 108, 5: 84, 6: 58, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3908>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3e10>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633710>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d30f0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633b70>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d34e0>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3b70>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7b8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3940>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bf28>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4b38>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e10>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0588>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3080>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d07f0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0a20>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0080>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d00b8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0cc0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0588>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635be0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635c50>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635ef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d02e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029236316680908203  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029241085052490234  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12482476234436035
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.892738938331604
loading full batch data spends  0.004831552505493164
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.961822509765625e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 108, 5: 86, 6: 58, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57f0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5eb8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a90>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5be0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5828>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5978>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5080>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52b0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5278>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7438>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7748>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d76a0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7780>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d74e0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a58>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a20>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7518>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7048>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7e80>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d76d8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6198>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029030323028564453  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029035091400146484  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11590385437011719
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009235858917236328  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9045310020446777
loading full batch data spends  0.002986431121826172
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.410743713378906e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 94, 3: 103, 4: 109, 5: 86, 6: 59, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a20>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5668>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635ba8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c18>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6371d0>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4b00>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6336a0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7780>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d79e8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7668>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7208>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ac8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d69b0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d76a0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6b70>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d69b0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a20>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6e48>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ac8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7f28>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d69b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5710>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5dd8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029059886932373047  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029064655303955078  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11940288543701172
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9042924642562866
loading full batch data spends  0.002281665802001953
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.790855407714844e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 109, 5: 83, 6: 59, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5470>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5048>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5400>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e80>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a20>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5dd8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50f0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631da0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d60c198>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633b70>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6048>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7f0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6336a0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4208>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d629550>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b400>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633b70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bf28>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bef0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7eb8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d79e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7748>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029006004333496094  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029010772705078125  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.10940408706665039
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009235858917236328  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8901830911636353
loading full batch data spends  0.0029489994049072266
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.9591064453125e-05
step  0
else: feat size  torch.Size([1369, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 102, 4: 108, 5: 85, 6: 60, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d62fbe0>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d62fda0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5668>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5898>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f60>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54a8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e80>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5828>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5278>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5d30>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d637518>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d620a20>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6285c0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d69b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4b00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6285c0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6371d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907562255859375  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02908039093017578  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.10491371154785156
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9071757793426514
loading full batch data spends  0.0029501914978027344
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.744529724121094e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 108, 5: 84, 6: 58, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a90>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7b70>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ef0>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7400>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7470>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52b0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5eb8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50b8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5dd8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5668>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5470>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5048>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c50>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5978>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5be0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54a8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5588>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02899026870727539  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028995037078857422  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.10594344139099121
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009241104125976562  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8841938972473145
loading full batch data spends  0.002236604690551758
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.600120544433594e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 98, 3: 106, 4: 107, 5: 82, 6: 59, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d79e8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7c18>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7f28>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7780>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7518>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7400>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ef0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7e80>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d71d0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7748>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a20>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52b0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5898>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5908>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c18>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5eb8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a90>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e58d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5048>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c50>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905130386352539  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029056072235107422  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11116933822631836
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8919874429702759
loading full batch data spends  0.0022933483123779297
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.5762786865234375e-05
step  0
else: feat size  torch.Size([1348, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 111, 5: 83, 6: 60, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635c18>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635e48>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635be0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635ef0>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6287f0>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d47b8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4b00>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6198>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633ac8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d628b00>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5780>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52b0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5668>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5860>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5198>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5d68>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5908>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5470>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5710>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5be0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a58>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635e48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635940>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635cc0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029033184051513672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029037952423095703  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.10985445976257324
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009187698364257812  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8940808773040771
loading full batch data spends  0.002935171127319336
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.506111145019531e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 110, 5: 82, 6: 60, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b320>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7f0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bef0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7b8>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b3c8>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ac8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d78d0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d79e8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7710>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7048>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff6ad4d1588>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635e48>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d637518>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635e80>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b320>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b3c8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d47b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bf28>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6336a0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633ac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b320>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b3c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4b00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e10>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029013633728027344  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029018402099609375  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.10815572738647461
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8843867778778076
loading full batch data spends  0.0022220611572265625
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.6716461181640625e-05
step  0
else: feat size  torch.Size([1350, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 109, 5: 86, 6: 59, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b00>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d629550>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631b70>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5be0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d629c88>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f98>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ef0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a58>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6285c0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5470>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d78d0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7518>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a58>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7898>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d76a0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ac8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7908>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d74e0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635f28>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d637518>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d47b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61ba58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4b00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028991222381591797  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028995990753173828  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.10838031768798828
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009198188781738281  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.883540391921997
loading full batch data spends  0.003087759017944336
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.673004150390625e-05
step  0
else: feat size  torch.Size([1348, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 103, 4: 110, 5: 86, 6: 59, 7: 33, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e10>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5da0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5eb8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5630>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5860>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c50>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b00>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5978>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5898>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b70>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5550>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a90>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5470>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b00>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e58d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f98>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7eb8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ef0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7630>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d74e0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7780>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d78d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02902507781982422  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02902984619140625  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.10911679267883301
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.88870370388031
loading full batch data spends  0.0022776126861572266
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.457069396972656e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 103, 4: 109, 5: 83, 6: 60, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5400>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54a8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5630>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5358>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52b0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5780>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5860>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5278>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50b8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a58>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5240>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5908>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c88>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5470>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56a0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b38>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a20>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e80>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ef0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029078960418701172  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029083728790283203  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11627793312072754
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009273052215576172  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.905031681060791
loading full batch data spends  0.002444744110107422
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.315376281738281e-05
step  0
else: feat size  torch.Size([1361, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 102, 4: 108, 5: 85, 6: 60, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639898>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639dd8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69b2e8>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d78d0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b358>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d620be0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69b2e8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b320>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4b00>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b358>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7710>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d78d0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639ac8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639d68>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7908>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f98>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f60>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639d30>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5d68>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5eb8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5278>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5400>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56d8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029082298278808594  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029087066650390625  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11869263648986816
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.874819040298462
loading full batch data spends  0.005606412887573242
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.4836273193359375e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 109, 5: 84, 6: 58, 7: 33, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635e48>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635ef0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635e80>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635c50>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7eb8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ba8>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7898>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7940>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7438>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d79b0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([627, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6198>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d637518>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d601550>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b00>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d628b00>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f98>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631b70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631da0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639ac8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4be0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5278>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639d30>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028963088989257812  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028967857360839844  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12479066848754883
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009241104125976562  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8717821836471558
loading full batch data spends  0.004836082458496094
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.367134094238281e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 103, 4: 111, 5: 83, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f60>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f28>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f60>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6354a8>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635b70>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639cf8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d74e0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ba8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7eb8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7518>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7940>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d78d0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7f28>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7e80>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7470>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a58>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3550>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7630>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d629550>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d60c198>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4b00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4b38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635be0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d628b00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029140472412109375  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029145240783691406  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12538838386535645
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.876249074935913
loading full batch data spends  0.0039060115814208984
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.412101745605469e-05
step  0
else: feat size  torch.Size([1373, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 106, 5: 86, 6: 58, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54a8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50b8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635710>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50b8>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635ba8>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635ef0>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6048>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635eb8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635c18>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6198>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635c18>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6354a8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635cc0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635dd8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7908>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d74e0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d76a0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7898>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ba8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ef0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7940>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d76d8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7c18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7630>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029159069061279297  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029163837432861328  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12601399421691895
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009321212768554688  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.886633276939392
loading full batch data spends  0.005769491195678711
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.698204040527344e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 102, 4: 110, 5: 84, 6: 61, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5710>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5390>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5438>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5630>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c88>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52e8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5828>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b320>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5400>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5518>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d69b0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5fd0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6198>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d60f0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ef0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6128>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5198>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d71d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d76a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a20>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7eb8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7f28>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904653549194336  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905130386352539  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12777924537658691
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.87740957736969
loading full batch data spends  0.005543708801269531
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.602836608886719e-05
step  0
else: feat size  torch.Size([1371, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 103, 4: 109, 5: 86, 6: 58, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5080>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5dd8>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56d8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b358>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d48d0>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d620a20>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d627470>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6b70>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69b2e8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69bb70>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7898>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d78d0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b400>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ba8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bf28>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7208>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7748>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b358>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ef0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c50>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5978>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f60>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5208>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5278>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029149532318115234  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029154300689697266  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11221933364868164
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009310245513916016  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8834867477416992
loading full batch data spends  0.002213716506958008
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.504753112792969e-05
step  0
else: feat size  torch.Size([1355, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 105, 4: 107, 5: 83, 6: 59, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a90>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cf8>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5dd8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5470>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c18>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5438>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5048>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f98>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54a8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3518>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d60f0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6358>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d71d0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d60f0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ba8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61ba58>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d71d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d78d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ba8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ef0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d78d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b3c8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7780>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bf28>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d60f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029017925262451172  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029022693634033203  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11009526252746582
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8734686374664307
loading full batch data spends  0.003023862838745117
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.673004150390625e-05
step  0
else: feat size  torch.Size([1347, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 106, 5: 84, 6: 60, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5390>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5518>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5860>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c88>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56a0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5828>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f60>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5278>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57b8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5048>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50f0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5630>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5208>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5438>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ef0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69bb70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6780>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d629550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69bb70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d62fda0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4b00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b550>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028928756713867188  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02893352508544922  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11746788024902344
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009182453155517578  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8771638870239258
loading full batch data spends  0.0023398399353027344
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.744529724121094e-05
step  0
else: feat size  torch.Size([1351, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 100, 4: 110, 5: 85, 6: 61, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630fd0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635710>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630fd0>
func(nbatch).neighbor  torch.Size([100, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3550>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d30f0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6308d0>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3080>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54a8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5dd8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a90>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5240>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5390>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5780>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5be0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5828>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5518>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5710>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56a0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a20>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5da0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029088497161865234  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029093265533447266  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.10828018188476562
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8765558004379272
loading full batch data spends  0.003105640411376953
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.744529724121094e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 102, 4: 110, 5: 84, 6: 60, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d79b0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d71d0>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7f28>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7518>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635cc0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7898>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635ef0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635be0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a90>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7048>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635eb8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ac8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5be0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e80>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c88>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b38>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5240>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5dd8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5780>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5898>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5518>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02899789810180664  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029002666473388672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11526942253112793
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8745352029800415
loading full batch data spends  0.0030918121337890625
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.792213439941406e-05
step  0
else: feat size  torch.Size([1369, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 100, 4: 108, 5: 85, 6: 60, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ba8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b70>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5208>
func(nbatch).neighbor  torch.Size([100, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d79e8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6336a0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d62fbe0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bf28>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635e48>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d620be0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635e80>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639a58>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639d30>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639fd0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f28>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639d68>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639898>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a58>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7f28>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7eb8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ef0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d74e0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7c18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d71d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02913522720336914  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029139995574951172  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.1113128662109375
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.896541714668274
loading full batch data spends  0.0031533241271972656
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.458427429199219e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 106, 4: 109, 5: 86, 6: 59, 7: 35, 8: 23, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4b00>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d46a0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69bb70>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3e10>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3908>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3550>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7630>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d34a8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7470>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7668>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([634, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d601550>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6308d0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d46a0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4b00>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5048>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6ad4d1588>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69b2e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d620be0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5438>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d62fbe0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635be0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7518>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d74a8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029129505157470703  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029134273529052734  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11167407035827637
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009294509887695312  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.881320595741272
loading full batch data spends  0.002304553985595703
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.886222839355469e-05
step  0
else: feat size  torch.Size([1381, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 103, 4: 108, 5: 84, 6: 59, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5358>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e80>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7748>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3550>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3470>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3908>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3ba8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6e48>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6780>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3518>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d36a0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6780>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6128>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3080>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3dd8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6ad4d1588>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d637518>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635940>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d620be0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69bb70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631da0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029250144958496094  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029254913330078125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11957454681396484
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8783016204833984
loading full batch data spends  0.002749204635620117
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.673004150390625e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 109, 5: 85, 6: 60, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5da0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56d8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c88>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c18>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ac8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5898>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5080>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e58d0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5208>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c18>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5710>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3dd8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d36a0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3908>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5198>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d34e0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3550>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d34a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3940>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3080>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029085159301757812  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029089927673339844  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10844755172729492
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009241104125976562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8693337440490723
loading full batch data spends  0.0023224353790283203
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.528594970703125e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 107, 5: 84, 6: 59, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6b70>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6128>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b00>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d60f0>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639cf8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639d68>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6e48>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639ac8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b38>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6048>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639898>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639d30>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5518>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a90>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a58>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5240>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5780>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54a8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5630>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5fd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5438>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029003143310546875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029007911682128906  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11615419387817383
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8703831434249878
loading full batch data spends  0.002288341522216797
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.7670135498046875e-05
step  0
else: feat size  torch.Size([1366, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 110, 5: 85, 6: 60, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635dd8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635cc0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635be0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635f28>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6780>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6285c0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7400>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d69b0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69b2e8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6287f0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([636, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d60f0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639fd0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639d30>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b00>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639a58>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635ba8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639d68>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639a58>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635c50>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639ac8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639a58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6359b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635ef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635c18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635ba8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029211997985839844  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029216766357421875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11130833625793457
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00928640365600586  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8744817972183228
loading full batch data spends  0.0022199153900146484
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.695487976074219e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 106, 4: 108, 5: 83, 6: 59, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635eb8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6e48>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635e80>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5908>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5fd0>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5208>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5898>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5630>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b38>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3ba8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6336a0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b38>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6371d0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639d68>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f28>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d637518>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639fd0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6396a0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6371d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639d30>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d637518>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635be0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905130386352539  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029056072235107422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12110328674316406
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.877742052078247
loading full batch data spends  0.003263235092163086
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.604194641113281e-05
step  0
else: feat size  torch.Size([1360, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 106, 4: 109, 5: 83, 6: 60, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ef0>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a90>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7438>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52e8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56d8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5518>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5358>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5390>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5240>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e58d0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5898>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54a8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5630>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f98>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3ba8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6336a0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3940>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f98>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639d30>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02908945083618164  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029094219207763672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11521172523498535
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009251594543457031  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8717533349990845
loading full batch data spends  0.00396275520324707
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.6743621826171875e-05
step  0
else: feat size  torch.Size([1365, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 94, 3: 103, 4: 107, 5: 87, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7eb8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7f28>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a90>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7780>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7048>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a58>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d76d8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7630>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7208>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5240>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5da0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5470>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5668>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5780>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5dd8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e80>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f98>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5518>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5908>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5fd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f60>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5390>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5550>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02912425994873047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0291290283203125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11868524551391602
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8780994415283203
loading full batch data spends  0.0040128231048583984
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.650520324707031e-05
step  0
else: feat size  torch.Size([1366, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 103, 4: 109, 5: 85, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0ef0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0320>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d07f0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56d8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52e8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5710>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5dd8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b00>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5780>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5668>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5518>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e58d0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57f0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c18>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5fd0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ac8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f60>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a20>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5d68>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5550>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029132843017578125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029137611389160156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11998319625854492
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00928354263305664  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8663713932037354
loading full batch data spends  0.004847526550292969
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.890296936035156e-05
step  0
else: feat size  torch.Size([1350, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 104, 4: 110, 5: 86, 6: 57, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b00>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6390f0>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639fd0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f98>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6287f0>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d60c198>
func(nbatch).neighbor  torch.Size([57, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5780>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5470>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5550>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3240>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a58>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3080>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a58>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3dd8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3470>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3518>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3240>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3940>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a58>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028969287872314453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028974056243896484  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12332940101623535
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8620145320892334
loading full batch data spends  0.005388498306274414
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.3882598876953125e-05
step  0
else: feat size  torch.Size([1365, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 110, 5: 83, 6: 60, 7: 35, 8: 21, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6e48>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6128>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639fd0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639ac8>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6128>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6048>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639dd8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639da0>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ba8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7438>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3080>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3550>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d46a0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3240>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635be0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3b70>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3e10>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635dd8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6048>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d47b8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3b70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6780>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6e48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f28>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029048442840576172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029053211212158203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12154483795166016
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009278297424316406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8773919343948364
loading full batch data spends  0.0022346973419189453
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.029273986816406e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 106, 4: 109, 5: 82, 6: 60, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e10>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5278>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5860>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5d68>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b00>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5be0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3908>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3550>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a58>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e80>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a20>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5470>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7b70>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ac8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7630>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d620be0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69b2e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635eb8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d47b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639ac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635e48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d46a0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029133319854736328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02913808822631836  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11688899993896484
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8667229413986206
loading full batch data spends  0.0029633045196533203
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.553794860839844e-05
step  0
else: feat size  torch.Size([1347, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 105, 4: 108, 5: 84, 6: 59, 7: 35, 8: 22, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5780>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52e8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5550>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c50>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f98>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54a8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ef0>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e58d0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5400>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b38>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5358>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5be0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5da0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5eb8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5198>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a90>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e10>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a20>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5208>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028905868530273438  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02891063690185547  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10648655891418457
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009182453155517578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8667852878570557
loading full batch data spends  0.0022296905517578125
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.5762786865234375e-05
step  0
else: feat size  torch.Size([1356, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 105, 4: 109, 5: 85, 6: 58, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6354a8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635e80>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635be0>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ac8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d79e8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a58>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ba8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7208>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d74e0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7b70>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d79b0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7e80>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d76a0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7400>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7780>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7898>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cf8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56d8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5828>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5780>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5908>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029036521911621094  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029041290283203125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10310125350952148
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8674818277359009
loading full batch data spends  0.0029549598693847656
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.76837158203125e-05
step  0
else: feat size  torch.Size([1349, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 109, 5: 84, 6: 60, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635cc0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635c18>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d34a8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3b70>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d07f0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b358>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f98>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630908>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6128>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b00>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69b2e8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635cc0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635ba8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4be0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4208>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69bb70>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5978>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5080>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5fd0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e80>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a58>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029000282287597656  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029005050659179688  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10731792449951172
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009192943572998047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8588672876358032
loading full batch data spends  0.0022444725036621094
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.6716461181640625e-05
step  0
else: feat size  torch.Size([1374, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 105, 4: 109, 5: 86, 6: 60, 7: 35, 8: 21, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6359b0>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635dd8>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631b70>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635c50>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635e48>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635ef0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635f28>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0a20>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7710>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d79e8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6336a0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d48d0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631e10>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d34a8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6308d0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630908>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3908>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69bb70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635be0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635940>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d36a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635710>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0588>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0a20>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635e80>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029144763946533203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029149532318115234  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11742067337036133
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8639965057373047
loading full batch data spends  0.0040547847747802734
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.744529724121094e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 108, 5: 84, 6: 60, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c50>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ef0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b38>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e80>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b00>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5fd0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a58>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50f0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639898>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639da0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b70>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639dd8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639fd0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f60>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6396a0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639ac8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633ac8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d48d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6308d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d30f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633ac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631da0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029017925262451172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029022693634033203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10979223251342773
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009235858917236328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.870759129524231
loading full batch data spends  0.003297567367553711
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.269050598144531e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 105, 4: 108, 5: 84, 6: 57, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b38>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5550>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50f0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([57, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a58>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ef0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5048>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b38>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56d8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f98>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56d8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b3c8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b320>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5080>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639a58>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639898>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639ac8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639dd8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639358>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f98>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639cf8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639da0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029020309448242188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02902507781982422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11131119728088379
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8800766468048096
loading full batch data spends  0.003949880599975586
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.698204040527344e-05
step  0
else: feat size  torch.Size([1365, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 107, 5: 84, 6: 59, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f98>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639da0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f28>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5d68>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56a0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5898>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52e8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5860>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57f0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f98>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5438>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e80>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a58>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56d8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5828>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cf8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5198>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ac8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029108047485351562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029112815856933594  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12653040885925293
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009278297424316406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8587886095046997
loading full batch data spends  0.0053670406341552734
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.602836608886719e-05
step  0
else: feat size  torch.Size([1371, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 102, 4: 107, 5: 84, 6: 59, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630b70>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52b0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630438>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633ac8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635dd8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d07b8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7b8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633ac8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d69b0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6128>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f28>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639da0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639cf8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6390f0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b38>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5dd8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56a0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5208>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029155254364013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029160022735595703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1244957447052002
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8584365844726562
loading full batch data spends  0.0039899349212646484
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.76837158203125e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 107, 5: 84, 6: 59, 7: 34, 8: 21, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f98>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50b8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5828>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5358>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52b0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5470>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5048>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5710>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6e48>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3240>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639dd8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639ac8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6371d0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f60>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6390f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d637518>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639cf8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639dd8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f98>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639cf8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639dd8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028943538665771484  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028948307037353516  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10961008071899414
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009209156036376953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8739718198776245
loading full batch data spends  0.002315521240234375
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.647804260253906e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 110, 5: 82, 6: 60, 7: 33, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5518>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635e48>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5860>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6354a8>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635ef0>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635cc0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635710>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5be0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5eb8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5438>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5198>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7518>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69bb70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631e10>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d620a20>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630908>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3240>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029082775115966797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029087543487548828  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11026191711425781
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8529855012893677
loading full batch data spends  0.0030972957611083984
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.696846008300781e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 108, 5: 86, 6: 61, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5908>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5fd0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5390>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5668>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ac8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5400>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c50>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([634, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b38>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a58>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ef0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5208>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50b8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5048>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5860>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e80>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5198>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7710>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029102325439453125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029107093811035156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11160802841186523
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00922250747680664  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8599720001220703
loading full batch data spends  0.0030982494354248047
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.7206878662109375e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 107, 5: 87, 6: 60, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69ddc04a8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633160>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633710>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6336a0>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7c18>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d76d8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a90>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7048>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7908>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7438>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7e80>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d76a0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7eb8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ef0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7630>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7470>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5668>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5fd0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5908>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5390>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5d68>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029088497161865234  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029093265533447266  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1106867790222168
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8537166118621826
loading full batch data spends  0.006036281585693359
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.963180541992188e-05
step  0
else: feat size  torch.Size([1356, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 102, 4: 108, 5: 86, 6: 61, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630fd0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630b70>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633710>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69ddc04a8>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d60f0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6287f0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6396a0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633710>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3470>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6336a0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d620a20>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3dd8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5080>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e80>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c88>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5dd8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5668>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5fd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029044151306152344  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029048919677734375  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11829781532287598
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00923013687133789  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8583576679229736
loading full batch data spends  0.002917051315307617
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.744529724121094e-05
step  0
else: feat size  torch.Size([1369, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 109, 5: 82, 6: 59, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b400>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639dd8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0a20>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bef0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0588>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0c88>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b550>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0320>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0080>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0ef0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3e10>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6336a0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4b00>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3908>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6308d0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4be0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3dd8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6287f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b550>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630b70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630438>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4be0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b3c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0c88>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029043197631835938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904796600341797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11352419853210449
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8528305292129517
loading full batch data spends  0.003245115280151367
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.793571472167969e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 109, 5: 85, 6: 59, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f98>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50f0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5dd8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cf8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e80>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5048>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7b8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f60>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cf8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5390>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d48d0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bf28>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7b8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5438>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7208>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7710>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69bb70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635c50>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3dd8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d629550>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d02e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d628b00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d620a20>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904367446899414  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029048442840576172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11600232124328613
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009209156036376953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8554922342300415
loading full batch data spends  0.0058515071868896484
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.173683166503906e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 102, 4: 108, 5: 85, 6: 60, 7: 35, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5be0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5828>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5470>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5780>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a20>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5668>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b38>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cf8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5550>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57b8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e80>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5400>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5da0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5d68>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ba8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f60>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5048>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d79b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7e80>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029140472412109375  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029145240783691406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11681890487670898
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.861329197883606
loading full batch data spends  0.0078582763671875
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.0067901611328125e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 107, 5: 84, 6: 60, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d60c198>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3940>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3908>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635ba8>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635710>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635eb8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7b70>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7208>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d76d8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7048>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d79e8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7908>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d74e0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7470>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ef0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7780>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d78d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7940>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5208>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ef0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5be0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5828>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02902078628540039  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029025554656982422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11655735969543457
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009209156036376953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8518731594085693
loading full batch data spends  0.005266904830932617
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.128715515136719e-05
step  0
else: feat size  torch.Size([1362, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 111, 5: 84, 6: 60, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d62fda0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630b70>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d620a20>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6354a8>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3940>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639ac8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635c18>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d60c198>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635710>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3908>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3e10>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635dd8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6371d0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3ba8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d620be0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3940>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3550>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5d68>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ba8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c50>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5208>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ef0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905130386352539  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029056072235107422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10642337799072266
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8490148782730103
loading full batch data spends  0.0022902488708496094
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.4332275390625e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 108, 5: 84, 6: 59, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d30f0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5198>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6780>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3240>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6359b0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6198>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6048>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d34e0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3240>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7898>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d620a20>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4be0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639ac8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630fd0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630438>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639ac8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635c18>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6308d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d07f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635f28>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635e80>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6e48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635eb8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029073715209960938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907848358154297  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10454368591308594
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009246349334716797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8588566780090332
loading full batch data spends  0.003173828125
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.7206878662109375e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 107, 5: 84, 6: 59, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5fd0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5be0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a20>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5048>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5438>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52e8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5be0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cf8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57b8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5898>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5208>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e58d0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f60>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7c18>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7518>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d629c88>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d620be0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631da0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630b70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635c18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0cc0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904224395751953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029047012329101562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10847783088684082
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8500158786773682
loading full batch data spends  0.0042400360107421875
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.458427429199219e-05
step  0
else: feat size  torch.Size([1361, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 105, 4: 110, 5: 83, 6: 59, 7: 35, 8: 22, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e10>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50f0>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5908>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5d68>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5630>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c50>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5710>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a90>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5668>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ba8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5860>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57f0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c88>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56a0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5eb8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54a8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5208>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f60>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e58d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02902078628540039  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029025554656982422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10503339767456055
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009256839752197266  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8566997051239014
loading full batch data spends  0.002955913543701172
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.3392181396484375e-05
step  0
else: feat size  torch.Size([1346, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 98, 3: 104, 4: 107, 5: 83, 6: 61, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635cc0>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6354a8>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635ef0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635e48>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d74e0>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7898>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7b70>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ef0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a58>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7630>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a90>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7908>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7748>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7208>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d74a8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7c18>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5978>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50b8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5550>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5780>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e10>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028998851776123047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029003620147705078  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10629868507385254
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8424484729766846
loading full batch data spends  0.002701282501220703
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.363059997558594e-05
step  0
else: feat size  torch.Size([1362, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 104, 4: 110, 5: 85, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3470>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3080>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d34e0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3908>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635cc0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d620be0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69bb70>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635ef0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d07b8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639dd8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0320>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635940>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6359b0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635710>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635f28>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635dd8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635e80>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5470>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5be0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5fd0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5080>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029133319854736328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02913808822631836  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1138601303100586
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009265422821044922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8384288549423218
loading full batch data spends  0.002615690231323242
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.220008850097656e-05
step  0
else: feat size  torch.Size([1370, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 108, 5: 86, 6: 57, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a90>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5438>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0588>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f98>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52e8>
func(nbatch).neighbor  torch.Size([57, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52b0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0c88>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7470>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7710>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3e10>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4208>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635c50>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635eb8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635be0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635cc0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3080>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635e48>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635eb8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d30f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635ba8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d07b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635eb8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635ef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0a58>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029162883758544922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029167652130126953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11007165908813477
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8454205989837646
loading full batch data spends  0.0030596256256103516
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.5762786865234375e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 105, 4: 110, 5: 81, 6: 59, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5eb8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ac8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50b8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5d68>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5400>
func(nbatch).neighbor  torch.Size([81, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5438>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a90>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52e8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0588>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f98>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f60>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6354a8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e58d0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5278>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c88>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635710>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633b70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d60c198>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4208>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69bb70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631b70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633ac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3e10>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02903604507446289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029040813446044922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10986757278442383
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009273052215576172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8537713289260864
loading full batch data spends  0.002937793731689453
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.172325134277344e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 110, 5: 83, 6: 60, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b00>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b70>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5080>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cf8>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c50>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5668>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e80>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5860>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a20>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ac8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5630>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a90>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ba8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e58d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5898>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5908>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029095172882080078  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02909994125366211  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10999226570129395
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8499568700790405
loading full batch data spends  0.003756284713745117
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.2928924560546875e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 110, 5: 85, 6: 60, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f98>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639358>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639da0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6390f0>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d74e0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a58>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7710>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7048>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a90>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7470>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([634, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d76d8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ac8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7940>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7400>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7748>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7b70>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54a8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5208>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5978>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5710>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02915191650390625  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02915668487548828  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11018705368041992
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009249210357666016  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.842953085899353
loading full batch data spends  0.002305269241333008
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.457069396972656e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 105, 4: 108, 5: 82, 6: 60, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57b8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52b0>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5780>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69b2e8>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d627470>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6128>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633b70>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4b38>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d34e0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5048>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c88>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b00>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5860>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5080>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5278>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56d8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5358>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56a0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5780>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5470>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f98>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5898>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029076576232910156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029081344604492188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10771012306213379
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8471771478652954
loading full batch data spends  0.005350828170776367
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.316734313964844e-05
step  0
else: feat size  torch.Size([1361, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 104, 4: 110, 5: 85, 6: 60, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e80>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5d68>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5898>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a90>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5208>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e58d0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b38>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([635, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d629c88>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4b38>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6b70>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d620be0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633b70>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b358>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630438>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6359b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633160>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6287f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5048>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5860>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cf8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e10>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029112815856933594  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029117584228515625  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1062006950378418
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009256839752197266  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8453837633132935
loading full batch data spends  0.002930164337158203
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.291534423828125e-05
step  0
else: feat size  torch.Size([1351, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 105, 4: 107, 5: 84, 6: 59, 7: 34, 8: 23, 9: 8, 10: 65}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7f0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b320>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61ba58>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7b8>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5eb8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b38>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56d8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52b0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5780>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f98>
func(nbatch).neighbor  torch.Size([65, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e80>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5400>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5668>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ef0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a58>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4b38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d629550>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633ac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d628b00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6287f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61ba58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633710>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028908252716064453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028913021087646484  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.107940673828125
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8454101085662842
loading full batch data spends  0.003103017807006836
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.482269287109375e-05
step  0
else: feat size  torch.Size([1366, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 104, 4: 107, 5: 87, 6: 60, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5518>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5908>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cf8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c88>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b00>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54a8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5048>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5630>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5550>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5898>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5390>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5d68>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5470>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c50>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5080>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5dd8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e80>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56d8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a58>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7908>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02917957305908203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029184341430664062  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11626219749450684
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00928640365600586  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.845855712890625
loading full batch data spends  0.003240346908569336
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.245208740234375e-05
step  0
else: feat size  torch.Size([1363, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 104, 4: 110, 5: 85, 6: 58, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b320>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b358>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b400>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7470>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7048>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d78d0>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d74e0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a58>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7438>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7710>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7400>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7940>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d76d8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7e80>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7898>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7780>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5978>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5908>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e10>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5518>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cf8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5278>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029146194458007812  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029150962829589844  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11018681526184082
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8570151329040527
loading full batch data spends  0.004135608673095703
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.76837158203125e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 105, 4: 110, 5: 83, 6: 59, 7: 33, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633b70>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6336a0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a90>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5dd8>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b358>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b320>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4b38>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bef0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630438>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b400>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d637518>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b358>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6371d0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b70>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5438>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a20>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56a0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f98>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5da0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028964519500732422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028969287872314453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10953211784362793
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8423008918762207
loading full batch data spends  0.003120899200439453
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.1484832763671875e-05
step  0
else: feat size  torch.Size([1365, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 102, 4: 109, 5: 85, 6: 60, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635f28>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635c50>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f98>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635c18>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635c50>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639fd0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4be0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6390f0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639ac8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6396a0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630438>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d629c88>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0080>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630438>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635ef0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633710>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0320>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631b70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4be0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6308d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3dd8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630908>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635f28>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639ac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61ba58>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029071331024169922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029076099395751953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10007715225219727
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8345363140106201
loading full batch data spends  0.002318143844604492
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.552436828613281e-05
step  0
else: feat size  torch.Size([1351, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 106, 4: 107, 5: 80, 6: 60, 7: 33, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a58>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ef0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f98>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5710>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50f0>
func(nbatch).neighbor  torch.Size([80, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f60>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5278>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b00>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e10>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5048>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5518>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635e48>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635dd8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5da0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7518>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d74e0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d46a0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631b70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6336a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4be0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633b70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4b38>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02898120880126953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028985977172851562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10877633094787598
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009203433990478516  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8517048358917236
loading full batch data spends  0.0029528141021728516
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.291534423828125e-05
step  0
else: feat size  torch.Size([1373, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 102, 4: 111, 5: 82, 6: 60, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5fd0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5630>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5978>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57f0>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b70>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a20>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c50>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52b0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5eb8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5908>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b00>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5be0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5278>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5668>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f98>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c18>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5da0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e10>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ba8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7400>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02917003631591797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0291748046875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10768461227416992
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8470009565353394
loading full batch data spends  0.003089427947998047
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.24249267578125e-05
step  0
else: feat size  torch.Size([1371, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 94, 3: 102, 4: 109, 5: 86, 6: 61, 7: 33, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0a58>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0cc0>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0080>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b400>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0a58>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d02e8>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ac8>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7518>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7908>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d79b0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7048>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a90>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7748>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7780>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7e80>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7470>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7f28>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7b70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56d8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5d68>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5208>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5fd0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029190540313720703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029195308685302734  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11734867095947266
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009313106536865234  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8260490894317627
loading full batch data spends  0.004472255706787109
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.341934204101562e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 110, 5: 84, 6: 58, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6371d0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e10>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d62fda0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4208>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3908>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6b70>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69b2e8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d62fbe0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a90>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5d68>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5198>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e58d0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e80>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5780>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cf8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e10>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56a0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c18>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029044628143310547  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029049396514892578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1119692325592041
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8522284030914307
loading full batch data spends  0.005789756774902344
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.772445678710938e-05
step  0
else: feat size  torch.Size([1348, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 104, 4: 108, 5: 85, 6: 61, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639d30>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b00>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bef0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f28>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639898>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b400>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f60>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b3c8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b358>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7630>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d629550>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631da0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630fd0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d629550>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d46a0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630908>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639fd0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69b2e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639898>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f28>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d07f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f28>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639fd0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029048919677734375  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029053688049316406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10893011093139648
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009190559387207031  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8199965953826904
loading full batch data spends  0.0057926177978515625
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.987022399902344e-05
step  0
else: feat size  torch.Size([1370, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 108, 5: 86, 6: 59, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cf8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d627470>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5dd8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ef0>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52b0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0c88>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0550>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5dd8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d02e8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0c88>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5908>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0f28>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0a58>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0320>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0ef0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7048>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7e80>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69bb70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635eb8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6b70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6048>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d46a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6396a0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029132843017578125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029137611389160156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11018013954162598
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8478704690933228
loading full batch data spends  0.006945133209228516
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.030632019042969e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 103, 4: 107, 5: 85, 6: 60, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5208>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5860>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57b8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5898>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5710>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50b8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f98>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5198>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54a8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5be0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5668>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0a58>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c88>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5668>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d07b8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0588>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0cc0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0a20>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d0a58>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029071331024169922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029076099395751953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11466646194458008
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009294509887695312  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8817251920700073
loading full batch data spends  0.00525665283203125
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.200241088867188e-05
step  0
else: feat size  torch.Size([1343, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 103, 4: 108, 5: 83, 6: 60, 7: 35, 8: 22, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3dd8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3080>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630908>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5390>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5898>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5518>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5208>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5860>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e10>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b38>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52b0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f60>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5198>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ef0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cf8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56a0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5400>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c18>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5828>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5978>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5fd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ac8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028884410858154297  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028889179229736328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11125707626342773
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8469809293746948
loading full batch data spends  0.005702018737792969
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.1021575927734375e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 109, 5: 85, 6: 59, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b550>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b358>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7b8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6287f0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630908>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633b70>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d620be0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69ddc04a8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d34a8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3908>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3b70>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3908>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7f0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61ba58>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6b70>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5390>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a90>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5780>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f98>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5208>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904653549194336  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905130386352539  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11563968658447266
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009235858917236328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.828234314918518
loading full batch data spends  0.0048198699951171875
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.628036499023438e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 108, 5: 85, 6: 58, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639d30>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635cc0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b70>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639898>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639d68>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57f0>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f60>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a20>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5be0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7b8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b3c8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6287f0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7f0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69b2e8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69bb70>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bef0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3b70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635cc0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b400>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b3c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029018878936767578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02902364730834961  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1115267276763916
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8603347539901733
loading full batch data spends  0.00745701789855957
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.125999450683594e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 104, 4: 107, 5: 84, 6: 59, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57b8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5400>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5198>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50f0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5208>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c88>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c50>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5668>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52b0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57f0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56a0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a20>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5390>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e58d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69b2e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630908>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d628b00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d627470>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635ba8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d629c88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6287f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029139041900634766  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029143810272216797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11313199996948242
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009294509887695312  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8401278257369995
loading full batch data spends  0.004067420959472656
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.3882598876953125e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 94, 3: 103, 4: 110, 5: 86, 6: 60, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639da0>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639fd0>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639a58>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639898>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639358>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639d30>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5630>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f98>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54a8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5978>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5278>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5898>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b00>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56d8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5908>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cf8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5208>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5080>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5400>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ef0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5518>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029006481170654297  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029011249542236328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10788369178771973
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8274558782577515
loading full batch data spends  0.0047075748443603516
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.14984130859375e-05
step  0
else: feat size  torch.Size([1356, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 109, 5: 84, 6: 59, 7: 33, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d78d0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7e80>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7048>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7710>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7438>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ef0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7630>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7208>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7908>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7c18>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5048>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e80>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b00>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5fd0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5470>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5630>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56d8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f60>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5978>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5898>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cf8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5208>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029064655303955078  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02906942367553711  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10716485977172852
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00923013687133789  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.855896234512329
loading full batch data spends  0.0057489871978759766
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.054473876953125e-05
step  0
else: feat size  torch.Size([1363, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 108, 5: 85, 6: 59, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b400>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6780>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d60f0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6336a0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d628b00>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3470>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630b70>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4be0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633710>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7518>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d78d0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d79b0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7400>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7c18>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ef0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7898>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d74e0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7908>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7630>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7e80>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d74e0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7668>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029051780700683594  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029056549072265625  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1091160774230957
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.872559666633606
loading full batch data spends  0.0071337223052978516
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.604194641113281e-05
step  0
else: feat size  torch.Size([1375, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 109, 5: 85, 6: 59, 7: 33, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a58>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52b0>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56d8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a20>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5828>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57f0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f98>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5080>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5198>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50b8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631da0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4be0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6285c0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631b70>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7748>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7048>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7898>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ba8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7518>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d74e0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d76a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ba8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7e80>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6128>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7748>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02912139892578125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02912616729736328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11152172088623047
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009331703186035156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.866455078125
loading full batch data spends  0.004052877426147461
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.1975250244140625e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 104, 4: 107, 5: 87, 6: 58, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5390>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5470>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5780>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5fd0>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a58>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5828>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c18>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5080>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5048>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5978>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b00>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5438>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c50>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631da0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4be0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7518>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630b70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7048>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6336a0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02901744842529297  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029022216796875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11641931533813477
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8607772588729858
loading full batch data spends  0.0057201385498046875
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.14984130859375e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 110, 5: 84, 6: 60, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b00>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639d30>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3940>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3ba8>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d34a8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5898>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f98>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5400>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5d68>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56a0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5470>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f60>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5278>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5780>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5668>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5fd0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5860>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5710>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56d8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ef0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029086589813232422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029091358184814453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1154029369354248
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009273052215576172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8631125688552856
loading full batch data spends  0.004839658737182617
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.604194641113281e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 106, 4: 111, 5: 83, 6: 58, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3518>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3b70>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3550>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5400>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5eb8>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5828>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c50>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f98>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5da0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57b8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5470>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5080>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a20>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5860>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5390>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5278>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5710>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5198>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ef0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028997421264648438  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02900218963623047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10988807678222656
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8510305881500244
loading full batch data spends  0.007254838943481445
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.081031799316406e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 106, 5: 86, 6: 59, 7: 33, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6e48>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6b70>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639da0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3dd8>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6287f0>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630438>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b550>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5898>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631e10>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631b70>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5278>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631e10>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5d68>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d46a0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635940>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5278>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5198>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5dd8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ba8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028992176055908203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028996944427490234  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11023473739624023
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009235858917236328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8523883819580078
loading full batch data spends  0.0054779052734375
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.078315734863281e-05
step  0
else: feat size  torch.Size([1353, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 106, 4: 108, 5: 84, 6: 58, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d69b0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f60>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3ba8>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3080>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3b70>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3240>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3dd8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3080>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d34e0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639a58>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ba8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d46a0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d637518>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7898>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635940>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635be0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d74a8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6128>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d78d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7400>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635be0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6198>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d74a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6359b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029007911682128906  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029012680053710938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11487627029418945
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8396741151809692
loading full batch data spends  0.004496097564697266
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.365776062011719e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 103, 4: 108, 5: 84, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5630>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5780>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a20>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5400>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5278>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f98>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ac8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5400>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639da0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639898>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639cf8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5080>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5828>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639cf8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639358>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5358>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d30f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633ac8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d62fbe0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635c18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633ac8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6359b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4208>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d69b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029121875762939453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029126644134521484  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11215901374816895
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009288787841796875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8626474142074585
loading full batch data spends  0.004907131195068359
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.319450378417969e-05
step  0
else: feat size  torch.Size([1355, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 103, 4: 109, 5: 83, 6: 58, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5390>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5438>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5be0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5470>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c18>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52b0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52e8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a20>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5550>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ac8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5668>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5780>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5978>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a58>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5630>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5048>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5400>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5518>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d36a0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02896881103515625  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02897357940673828  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12208962440490723
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8583258390426636
loading full batch data spends  0.006857633590698242
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.1975250244140625e-05
step  0
else: feat size  torch.Size([1346, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 110, 5: 82, 6: 61, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d60f0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d48d0>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d60f0>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b70>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3080>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639da0>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3550>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3e10>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639898>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b70>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d36a0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3908>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5198>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56a0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a90>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c88>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5eb8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c50>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5390>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5da0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028947830200195312  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028952598571777344  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11340546607971191
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00917673110961914  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8545902967453003
loading full batch data spends  0.004815578460693359
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.604194641113281e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 109, 5: 84, 6: 59, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ba8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d76d8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f98>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7748>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d60f0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630438>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3dd8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3080>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3908>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3ba8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6396a0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639a58>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b00>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f28>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639358>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639fd0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7b70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7208>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7048>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d76d8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7748>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ba8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d78d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029085159301757812  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029089927673339844  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12426304817199707
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8409194946289062
loading full batch data spends  0.005072593688964844
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.222724914550781e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 109, 5: 84, 6: 58, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5da0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c88>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b358>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b550>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b38>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bef0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b550>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5358>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52e8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635eb8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631e10>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f28>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631da0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639358>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b70>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639da0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6396a0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639dd8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639d68>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639dd8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bf28>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029039859771728516  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029044628143310547  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12906980514526367
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009241104125976562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8384517431259155
loading full batch data spends  0.005277872085571289
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.91278076171875e-05
step  0
else: feat size  torch.Size([1374, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 107, 5: 85, 6: 59, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cf8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f60>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5400>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c50>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b70>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c18>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a58>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5550>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56d8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5d68>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5630>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ef0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3e10>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5518>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d36a0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3b70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6285c0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631b70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639dd8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639da0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6359b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6396a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635c18>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029170513153076172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029175281524658203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11709880828857422
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8352900743484497
loading full batch data spends  0.006077289581298828
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.3392181396484375e-05
step  0
else: feat size  torch.Size([1370, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 108, 5: 84, 6: 60, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6287f0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639a58>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b550>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7b8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bf28>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b400>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bef0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5668>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5278>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e10>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b38>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5be0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cf8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5fd0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54a8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5390>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5198>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c50>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5eb8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5400>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029120445251464844  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029125213623046875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12145662307739258
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009305000305175781  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8366655111312866
loading full batch data spends  0.004988670349121094
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.245208740234375e-05
step  0
else: feat size  torch.Size([1356, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 109, 5: 84, 6: 60, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ac8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d79b0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7940>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d76d8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7c18>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ef0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a90>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7470>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7048>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d74e0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e10>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5358>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e58d0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b38>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5be0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5860>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5668>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f60>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cf8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5828>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904510498046875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904987335205078  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11134099960327148
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8395838737487793
loading full batch data spends  0.0031325817108154297
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.863739013671875e-05
step  0
else: feat size  torch.Size([1370, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 110, 5: 82, 6: 59, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b3c8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b400>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7b70>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5da0>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d627470>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630b70>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639d30>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635c18>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f60>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639d30>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635ba8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635eb8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52e8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5048>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5fd0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e58d0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5da0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5860>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5898>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0291290283203125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02913379669189453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10729646682739258
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009305000305175781  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8397566080093384
loading full batch data spends  0.0030946731567382812
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.410743713378906e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 104, 4: 109, 5: 84, 6: 60, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639da0>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f98>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639358>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b38>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639ac8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7780>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7438>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7630>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7eb8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d79b0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d48d0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635ba8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6336a0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69bb70>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3550>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d62fda0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639ac8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3080>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639898>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3908>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b550>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f60>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639ac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639fd0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029063701629638672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029068470001220703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10284256935119629
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.827548623085022
loading full batch data spends  0.004818439483642578
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.340576171875e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 106, 4: 109, 5: 84, 6: 59, 7: 35, 8: 21, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5860>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e58d0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50b8>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5390>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6e48>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6128>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6780>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5518>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e10>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d79e8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7518>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7c18>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7208>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d74a8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69b2e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6336a0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69b2e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f98>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029094219207763672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029098987579345703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10209918022155762
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009273052215576172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.846380591392517
loading full batch data spends  0.0031299591064453125
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.3392181396484375e-05
step  0
else: feat size  torch.Size([1361, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 104, 4: 108, 5: 85, 6: 61, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f98>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5d68>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5dd8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5470>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5978>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57b8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52b0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5400>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f60>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50f0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5be0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5518>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5da0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e80>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c50>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ba8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d76d8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7b70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a58>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029084205627441406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029088973999023438  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10460877418518066
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8389321565628052
loading full batch data spends  0.0024776458740234375
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.5299530029296875e-05
step  0
else: feat size  torch.Size([1363, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 107, 5: 85, 6: 59, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6308d0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6336a0>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630fd0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5400>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50b8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52e8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56d8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5668>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5780>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50f0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e80>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5518>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5908>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5da0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5630>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e58d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5198>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e10>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5eb8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a20>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02906513214111328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029069900512695312  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11128592491149902
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009267807006835938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8273985385894775
loading full batch data spends  0.005792856216430664
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.796287536621094e-05
step  0
else: feat size  torch.Size([1361, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 110, 5: 81, 6: 61, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a90>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7668>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5278>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7668>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6336a0>
func(nbatch).neighbor  torch.Size([81, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d627470>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630438>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635f28>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d34a8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b358>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d78d0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7630>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d79b0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ba8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d76a0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7668>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ba8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5400>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a90>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5dd8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56d8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904033660888672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904510498046875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11441302299499512
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.827314853668213
loading full batch data spends  0.003634929656982422
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.14984130859375e-05
step  0
else: feat size  torch.Size([1371, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 108, 5: 83, 6: 59, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7b8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bf28>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7f0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635940>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b320>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e58d0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a58>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e10>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5390>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630908>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630438>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69ddc04a8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630908>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6336a0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3e10>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d36a0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635c18>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635c50>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630fd0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6308d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d620be0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6354a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7048>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ef0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02910137176513672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02910614013671875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10070085525512695
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009310245513916016  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.812540888786316
loading full batch data spends  0.002230405807495117
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.3855438232421875e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 106, 4: 109, 5: 84, 6: 57, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5080>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5898>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56d8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5860>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5358>
func(nbatch).neighbor  torch.Size([57, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50b8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5518>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a90>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5400>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c50>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b00>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5fd0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c18>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57b8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e58d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56a0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d620a20>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d62fbe0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630b70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635f28>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635c50>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02908468246459961  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02908945083618164  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10887718200683594
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8185901641845703
loading full batch data spends  0.00588536262512207
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.915496826171875e-05
step  0
else: feat size  torch.Size([1353, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 94, 3: 103, 4: 110, 5: 84, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4b38>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630fd0>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630908>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4b00>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630438>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5828>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ef0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e10>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ba8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5470>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ac8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5908>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52e8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f60>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5438>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50b8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5358>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5630>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5668>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5208>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029041290283203125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029046058654785156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10472846031188965
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009214401245117188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.838265061378479
loading full batch data spends  0.002241373062133789
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.337860107421875e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 108, 5: 84, 6: 60, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631b70>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7470>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7eb8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7c18>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7710>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d79b0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7048>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d76a0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7e80>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a90>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5da0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5828>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b70>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52b0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e10>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f98>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5978>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5908>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5dd8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f60>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02902698516845703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029031753540039062  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.0991969108581543
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8595001697540283
loading full batch data spends  0.004065752029418945
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.1961669921875e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 98, 3: 105, 4: 106, 5: 85, 6: 59, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d628b00>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d62fda0>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bef0>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3240>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d629550>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631b70>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635940>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6048>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f28>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d629c88>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d76a0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7710>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3ba8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3080>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3240>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3b70>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7710>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d34a8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3080>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7908>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d34a8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3940>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e58d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029063701629638672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029068470001220703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10889601707458496
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8647511005401611
loading full batch data spends  0.004481792449951172
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.198883056640625e-05
step  0
else: feat size  torch.Size([1349, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 102, 4: 107, 5: 83, 6: 60, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5be0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5278>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5208>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5080>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54a8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5860>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5710>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5978>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5470>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d62fda0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d627470>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d60c198>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b550>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3908>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bf28>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d34a8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3ba8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61ba58>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3e10>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3240>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bf28>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3940>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d79b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3908>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02895832061767578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028963088989257812  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1116788387298584
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8605202436447144
loading full batch data spends  0.0029230117797851562
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.506111145019531e-05
step  0
else: feat size  torch.Size([1363, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 101, 4: 109, 5: 83, 6: 61, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b00>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([101, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5208>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5780>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52b0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5278>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5828>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56a0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5518>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a20>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5eb8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5da0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5898>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c88>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d48d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d627470>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d62fbe0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d60c198>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6371d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69ddc04a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4b38>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02910900115966797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02911376953125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1084589958190918
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009267807006835938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8594307899475098
loading full batch data spends  0.002226591110229492
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.3855438232421875e-05
step  0
else: feat size  torch.Size([1363, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 94, 3: 106, 4: 107, 5: 86, 6: 61, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b00>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639da0>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f98>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639fd0>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639d68>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5d68>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cf8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b38>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5438>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5470>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f98>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c18>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5208>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50b8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5780>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5048>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5828>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5390>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029107093811035156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029111862182617188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10187816619873047
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8612374067306519
loading full batch data spends  0.004078388214111328
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.220008850097656e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 110, 5: 80, 6: 59, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6198>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633160>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6e48>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6b70>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6128>
func(nbatch).neighbor  torch.Size([80, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6358>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e58d0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b00>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5908>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57b8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cf8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5be0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52b0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ef0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5278>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5978>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5048>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56a0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029047489166259766  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029052257537841797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10590600967407227
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009246349334716797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8425087928771973
loading full batch data spends  0.002222776412963867
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.314018249511719e-05
step  0
else: feat size  torch.Size([1360, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 108, 5: 84, 6: 60, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ba8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7780>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639fd0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d79b0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633ac8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635cc0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d629c88>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6780>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3080>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6e48>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5550>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5400>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e80>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b00>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c50>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c88>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cf8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5dd8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5be0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905750274658203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029062271118164062  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09923362731933594
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8398897647857666
loading full batch data spends  0.002957582473754883
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.291534423828125e-05
step  0
else: feat size  torch.Size([1350, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 105, 4: 109, 5: 83, 6: 59, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6359b0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d76d8>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7b70>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d74a8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ac8>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7780>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7668>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7908>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b38>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f98>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d34e0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6128>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b320>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3908>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6371d0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3470>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d76d8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ef0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7780>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7668>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7b70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d76a0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ba8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d76d8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7710>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028958797454833984  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028963565826416016  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10759353637695312
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009198188781738281  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.858883261680603
loading full batch data spends  0.0022118091583251953
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.504753112792969e-05
step  0
else: feat size  torch.Size([1346, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 106, 5: 86, 6: 59, 7: 34, 8: 21, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50f0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5630>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d47b8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5198>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d620be0>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d46a0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e10>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6780>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56d8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635ef0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([627, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635eb8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6359b0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635cc0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635be0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6390f0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635dd8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639d30>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b320>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633ac8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d62fda0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631da0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6308d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d629c88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d76a0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028906822204589844  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028911590576171875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10260391235351562
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8529462814331055
loading full batch data spends  0.005353450775146484
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.412101745605469e-05
step  0
else: feat size  torch.Size([1363, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 109, 5: 85, 6: 60, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5400>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5780>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56a0>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5dd8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5358>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c88>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5710>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5550>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5978>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cf8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6b70>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52b0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56d8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6198>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6048>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6e48>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f98>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f60>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639ac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639898>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907276153564453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029077529907226562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10115194320678711
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009267807006835938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8392781019210815
loading full batch data spends  0.002936840057373047
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.267692565917969e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 105, 4: 110, 5: 86, 6: 58, 7: 33, 8: 21, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630fd0>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5198>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5710>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f98>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52e8>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e10>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5668>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5860>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f60>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e80>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b70>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ba8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a20>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56d8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5518>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5390>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5898>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5da0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5828>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5be0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02910757064819336  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02911233901977539  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10731625556945801
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8412249088287354
loading full batch data spends  0.002985239028930664
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.5299530029296875e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 106, 4: 109, 5: 85, 6: 57, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7630>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ac8>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635f28>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7940>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6308d0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b400>
func(nbatch).neighbor  torch.Size([57, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6287f0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630908>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d62fda0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f98>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b38>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56a0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5550>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a90>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c88>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b00>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a58>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5278>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5860>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ba8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0291290283203125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02913379669189453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11240196228027344
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009288787841796875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8466142416000366
loading full batch data spends  0.004250288009643555
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.173683166503906e-05
step  0
else: feat size  torch.Size([1355, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 106, 4: 108, 5: 84, 6: 58, 7: 35, 8: 21, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ba8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7208>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d74a8>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7908>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a90>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7748>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d78d0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635be0>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7518>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635dd8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630908>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d62fda0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4b00>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630b70>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69b2e8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6ad4d1588>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69ddc04a8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3470>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4208>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5710>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028987407684326172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028992176055908203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10738539695739746
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.845155954360962
loading full batch data spends  0.003075838088989258
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.504753112792969e-05
step  0
else: feat size  torch.Size([1363, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 108, 5: 83, 6: 60, 7: 34, 8: 21, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5d68>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5358>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d637518>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ba8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f60>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5470>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d79e8>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7438>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7c18>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7e80>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a58>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7630>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7898>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d74a8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d76a0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7eb8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635eb8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633b70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631da0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d629550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6ad4d1588>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d34a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69ddc04a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029050827026367188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905559539794922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10596108436584473
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009267807006835938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8459012508392334
loading full batch data spends  0.002226114273071289
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.266334533691406e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 106, 5: 86, 6: 59, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f98>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e10>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5be0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5978>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a58>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57f0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e58d0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5518>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b38>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5358>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5438>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a90>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635710>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6359b0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635c18>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635f28>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635eb8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635be0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635cc0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d79e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7400>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7208>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ba8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7c18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7668>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029117584228515625  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029122352600097656  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10548949241638184
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8263874053955078
loading full batch data spends  0.0022363662719726562
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.314018249511719e-05
step  0
else: feat size  torch.Size([1366, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 104, 4: 107, 5: 85, 6: 59, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54a8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5668>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56d8>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5eb8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5278>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5898>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b70>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b00>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5518>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5908>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5390>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5470>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ba8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5828>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f60>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c50>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5780>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5da0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5048>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5d68>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029139995574951172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029144763946533203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09893465042114258
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00928354263305664  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8314437866210938
loading full batch data spends  0.0029485225677490234
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.291534423828125e-05
step  0
else: feat size  torch.Size([1356, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 106, 5: 85, 6: 59, 7: 35, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635f28>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635e48>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7e80>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7710>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b320>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633b70>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635e48>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f28>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6285c0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d69b0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7eb8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7e80>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69ddc04a8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6359b0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635eb8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635e48>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54a8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5550>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cf8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e10>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56d8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029066085815429688  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907085418701172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10637831687927246
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8329191207885742
loading full batch data spends  0.00407862663269043
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.315376281738281e-05
step  0
else: feat size  torch.Size([1356, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 109, 5: 84, 6: 60, 7: 33, 8: 21, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6048>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6780>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6198>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d69b0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d60f0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5208>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5390>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b70>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5828>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5fd0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b550>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d62fda0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6e48>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3470>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6358>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b320>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d30f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6048>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d36a0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d60f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6048>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6359b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6048>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635dd8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635c50>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028980255126953125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028985023498535156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10030484199523926
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00923013687133789  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.835784912109375
loading full batch data spends  0.0038733482360839844
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.817413330078125e-05
step  0
else: feat size  torch.Size([1363, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 106, 4: 109, 5: 84, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52b0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5908>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5668>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ac8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5eb8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5898>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56d8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b00>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c18>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5208>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5dd8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5400>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5d68>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5518>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5438>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6780>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6285c0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d62fda0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d30f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635f28>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d60f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029132366180419922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029137134552001953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10517668724060059
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.844298005104065
loading full batch data spends  0.002215147018432617
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.361701965332031e-05
step  0
else: feat size  torch.Size([1360, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 103, 4: 109, 5: 86, 6: 60, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7eb8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7c18>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7e80>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7908>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d74a8>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d79e8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ef0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5470>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b70>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5780>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52b0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54a8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5198>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57b8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56a0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5898>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c88>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e10>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cf8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029073238372802734  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029078006744384766  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09938430786132812
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009251594543457031  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.83804452419281
loading full batch data spends  0.0029506683349609375
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.3392181396484375e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 110, 5: 85, 6: 60, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639d68>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7f0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b358>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639358>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61ba58>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b00>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639dd8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bf28>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639d30>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639a58>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52b0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5be0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5198>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5278>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ef0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5978>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ac8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02906036376953125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02906513214111328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1085352897644043
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.851891040802002
loading full batch data spends  0.003068208694458008
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.218650817871094e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 110, 5: 84, 6: 60, 7: 34, 8: 21, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d30f0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b38>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3940>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3e10>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b320>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6371d0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d620a20>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7b8>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635940>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b358>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bf28>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b3c8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b00>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bef0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6396a0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639cf8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639358>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b3c8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6396a0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3e10>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f60>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f98>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02898693084716797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02899169921875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10223388671875
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8205159902572632
loading full batch data spends  0.0030946731567382812
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.9114227294921875e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 103, 4: 107, 5: 86, 6: 59, 7: 33, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b70>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5438>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d69b0>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5400>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ba8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6048>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5518>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6128>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6048>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d30f0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630438>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7908>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d34e0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3e10>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630908>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630438>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b38>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639cf8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639fd0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639d30>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639da0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639ac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b38>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029078960418701172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029083728790283203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1087183952331543
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8439388275146484
loading full batch data spends  0.002237558364868164
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.4332275390625e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 103, 4: 110, 5: 87, 6: 58, 7: 33, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5390>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f98>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e58d0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52b0>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e10>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5358>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5978>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54a8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b70>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cf8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5860>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5048>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b00>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a58>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ef0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6287f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630438>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b400>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d627470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639da0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630908>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029062747955322266  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029067516326904297  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11325192451477051
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009235858917236328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8514927625656128
loading full batch data spends  0.0039196014404296875
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.650520324707031e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 94, 3: 105, 4: 110, 5: 83, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635eb8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635ef0>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635710>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6128>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635ba8>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5080>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ba8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5be0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ef0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5898>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5668>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ac8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5908>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f60>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5358>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5390>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5978>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5208>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e58d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5470>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5780>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5d68>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02912759780883789  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029132366180419922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10777640342712402
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8339412212371826
loading full batch data spends  0.0035729408264160156
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.267692565917969e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 108, 5: 83, 6: 61, 7: 33, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635be0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635ef0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635eb8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635ba8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635e80>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635cc0>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5080>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5be0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5630>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ef0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57b8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5358>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5550>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5978>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5908>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ac8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5390>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5dd8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5828>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028998851776123047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029003620147705078  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11360311508178711
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8413472175598145
loading full batch data spends  0.002756834030151367
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.2438507080078125e-05
step  0
else: feat size  torch.Size([1374, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 101, 4: 108, 5: 85, 6: 60, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7f28>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ac8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3240>
func(nbatch).neighbor  torch.Size([101, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7668>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bf28>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6ad4d1588>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635e80>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630b70>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635cc0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635c50>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635f28>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635eb8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630438>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52b0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b38>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5278>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a20>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5438>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5be0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5358>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5978>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5908>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0292205810546875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02922534942626953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11020803451538086
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8401349782943726
loading full batch data spends  0.002978801727294922
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.3392181396484375e-05
step  0
else: feat size  torch.Size([1362, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 102, 4: 107, 5: 85, 6: 61, 7: 34, 8: 21, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7518>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7438>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a58>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d78d0>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d74a8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7630>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ac8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7f28>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3ba8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ef0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d46a0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6287f0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69bb70>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6b70>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635be0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639d30>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630438>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635940>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bf28>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635eb8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635e48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6308d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ba8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5278>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029015064239501953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029019832611083984  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1019740104675293
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009262561798095703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8380540609359741
loading full batch data spends  0.0041692256927490234
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.246566772460938e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 109, 5: 87, 6: 60, 7: 34, 8: 21, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a90>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5eb8>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b00>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5198>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5780>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a58>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7b70>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7710>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7400>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d76d8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7f28>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7208>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7668>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7e80>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3dd8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7438>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3518>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3470>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6396a0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6b70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630438>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6285c0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639a58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bf28>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904510498046875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904987335205078  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10212182998657227
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8309284448623657
loading full batch data spends  0.0040454864501953125
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.315376281738281e-05
step  0
else: feat size  torch.Size([1360, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 110, 5: 85, 6: 60, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5da0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ba8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56d8>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b00>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a20>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52b0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f98>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5978>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ef0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5eb8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d36a0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5eb8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3940>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d30f0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3e10>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3240>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3908>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3550>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7470>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7780>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d76d8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ac8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029110431671142578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02911520004272461  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09791183471679688
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009251594543457031  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8292073011398315
loading full batch data spends  0.0029211044311523438
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.315376281738281e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 109, 5: 85, 6: 61, 7: 35, 8: 23, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b70>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e10>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ba8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c50>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50f0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ac8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a20>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5550>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e80>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56a0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5080>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a58>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5828>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5518>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5dd8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5048>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cf8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c18>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029035568237304688  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904033660888672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1002664566040039
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8377909660339355
loading full batch data spends  0.002228260040283203
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.337860107421875e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 102, 4: 109, 5: 83, 6: 59, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b00>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6396a0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7908>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7048>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635940>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4b00>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6371d0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635940>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631e10>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d46a0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d62fbe0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635940>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7940>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7908>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d76a0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7940>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5fd0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5860>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5da0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f98>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5630>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e10>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ba8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f60>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029010295867919922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029015064239501953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10463476181030273
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8386393785476685
loading full batch data spends  0.0024683475494384766
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.2438507080078125e-05
step  0
else: feat size  torch.Size([1361, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 107, 5: 83, 6: 59, 7: 35, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61ba58>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633ac8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b400>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b358>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b320>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5dd8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ac8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e80>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50b8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5eb8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d637518>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d620be0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6285c0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d637518>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639a58>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d48d0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61ba58>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630438>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635710>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61ba58>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4b38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635ef0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b3c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b320>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d79b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029073238372802734  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029078006744384766  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11453866958618164
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8252719640731812
loading full batch data spends  0.0036919116973876953
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.506111145019531e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 109, 5: 85, 6: 60, 7: 33, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a20>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a58>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52e8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5780>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5fd0>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f60>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5438>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5198>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54a8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ba8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5dd8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5550>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e80>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5860>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5d68>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5be0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639fd0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d637518>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4b38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4208>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6371d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029006481170654297  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029011249542236328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10221743583679199
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009246349334716797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8246917724609375
loading full batch data spends  0.003228425979614258
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.8160552978515625e-05
step  0
else: feat size  torch.Size([1360, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 108, 5: 84, 6: 59, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7908>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7e80>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ba8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7780>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7eb8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7208>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5710>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5be0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5630>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5518>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56d8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5080>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5400>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50f0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56a0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5358>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5908>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c50>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e58d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02906322479248047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0290679931640625  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10807585716247559
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.834293246269226
loading full batch data spends  0.002961397171020508
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.410743713378906e-05
step  0
else: feat size  torch.Size([1356, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 109, 5: 83, 6: 61, 7: 34, 8: 21, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d60c198>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d47b8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a90>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d78d0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d76d8>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7048>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7c18>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7780>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7630>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d74e0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5668>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52e8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b38>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5400>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ef0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5710>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ac8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56d8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029045581817626953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029050350189208984  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10819530487060547
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00923013687133789  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8291515111923218
loading full batch data spends  0.0038940906524658203
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.53131103515625e-05
step  0
else: feat size  torch.Size([1346, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 108, 5: 85, 6: 59, 7: 35, 8: 22, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3908>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3940>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5898>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d36a0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635940>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d60c198>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6e48>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635ba8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630fd0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d47b8>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7048>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ef0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d74e0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a90>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d79e8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3e10>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d78d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3550>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3ba8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7518>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d36a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3908>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3940>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3e10>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02890157699584961  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02890634536743164  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10932445526123047
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8165192604064941
loading full batch data spends  0.0030813217163085938
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.2901763916015625e-05
step  0
else: feat size  torch.Size([1369, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 105, 4: 108, 5: 82, 6: 60, 7: 35, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e10>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54a8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57b8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e80>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5198>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5dd8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5780>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5358>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50f0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ef0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d46a0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d620a20>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635e80>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631b70>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d62fda0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630fd0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7e80>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a90>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7208>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d74e0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7048>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d78d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3940>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029142379760742188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02914714813232422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1000051498413086
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009299755096435547  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.807043433189392
loading full batch data spends  0.0038652420043945312
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.888938903808594e-05
step  0
else: feat size  torch.Size([1361, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 108, 5: 84, 6: 60, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5fd0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52e8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5860>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5400>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5630>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5710>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e10>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5080>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5198>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ba8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5358>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5eb8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5da0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56d8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b38>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5828>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c88>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631b70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d620a20>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d79e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d62fda0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7518>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7898>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907276153564453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029077529907226562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1039741039276123
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8394439220428467
loading full batch data spends  0.0022230148315429688
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.409385681152344e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 106, 4: 110, 5: 82, 6: 59, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d60c198>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b38>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6354a8>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635c18>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635cc0>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b00>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5780>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a58>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5550>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5fd0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5080>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5400>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ac8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5978>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5630>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5470>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5710>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c50>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a20>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029063701629638672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029068470001220703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10675573348999023
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8424495458602905
loading full batch data spends  0.0022270679473876953
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.3855438232421875e-05
step  0
else: feat size  torch.Size([1347, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 109, 5: 86, 6: 61, 7: 35, 8: 23, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639358>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b70>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f28>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639ac8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6396a0>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639dd8>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b00>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a58>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5668>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([634, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5550>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5470>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52e8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5710>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5400>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c18>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5630>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5978>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5518>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e10>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5eb8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02903461456298828  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029039382934570312  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10094070434570312
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8192572593688965
loading full batch data spends  0.0053577423095703125
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.507469177246094e-05
step  0
else: feat size  torch.Size([1362, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 98, 3: 104, 4: 109, 5: 85, 6: 60, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3940>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635940>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5d68>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3518>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69ddc04a8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d627470>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3518>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b70>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3908>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639358>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b70>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639ac8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630908>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b00>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6396a0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635eb8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635cc0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635eb8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d69b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6354a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6780>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635940>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f60>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029099464416503906  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029104232788085938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11392474174499512
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009262561798095703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8336584568023682
loading full batch data spends  0.00243377685546875
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.553794860839844e-05
step  0
else: feat size  torch.Size([1371, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 104, 4: 109, 5: 82, 6: 60, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a20>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ef0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5438>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50b8>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e58d0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5630>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5400>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d34e0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3940>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6358>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6048>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7b8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6198>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635dd8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d69b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3518>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635f28>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6048>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635e80>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635cc0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d637518>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635c50>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029181957244873047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029186725616455078  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11043167114257812
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.805378794670105
loading full batch data spends  0.002516031265258789
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.38690185546875e-05
step  0
else: feat size  torch.Size([1353, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 103, 4: 110, 5: 85, 6: 60, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5550>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cf8>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56a0>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5438>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e80>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ac8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5908>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5860>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c50>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5470>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52e8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5198>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f98>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e10>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6308d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d60c198>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6048>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d637518>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d60f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029058456420898438  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02906322479248047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11026120185852051
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009214401245117188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8112879991531372
loading full batch data spends  0.0024116039276123047
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.673004150390625e-05
step  0
else: feat size  torch.Size([1347, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 94, 3: 104, 4: 110, 5: 83, 6: 58, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f98>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639fd0>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639a58>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639358>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f28>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5518>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5390>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50f0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5400>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([627, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5fd0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5550>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ac8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56a0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5828>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5048>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5438>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5278>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ba8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5da0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b38>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028913497924804688  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02891826629638672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10157251358032227
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8213608264923096
loading full batch data spends  0.005395650863647461
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.316734313964844e-05
step  0
else: feat size  torch.Size([1345, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 109, 5: 83, 6: 60, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d79e8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7908>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d30f0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7630>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3b70>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3240>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d79b0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3080>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3e10>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633710>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3550>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d30f0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c88>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e10>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5908>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5d68>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5080>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f60>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5fd0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5978>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e80>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028950214385986328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02895498275756836  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10639643669128418
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009171485900878906  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8182941675186157
loading full batch data spends  0.0045735836029052734
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.031990051269531e-05
step  0
else: feat size  torch.Size([1366, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 107, 5: 86, 6: 59, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635be0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6359b0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a90>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635f28>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d620a20>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69bb70>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3940>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d627470>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d36a0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3940>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3e10>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3550>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6396a0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3e10>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6390f0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6336a0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633b70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6396a0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6336a0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635c18>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f98>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635cc0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635be0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635c50>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635ba8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02918386459350586  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02918863296508789  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11585879325866699
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7962315082550049
loading full batch data spends  0.00557708740234375
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.604194641113281e-05
step  0
else: feat size  torch.Size([1351, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 109, 5: 85, 6: 59, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5860>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c50>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5710>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5828>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f60>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e58d0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56a0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5080>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3550>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7f0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639d30>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3dd8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639358>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633b70>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3080>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639cf8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6336a0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6396a0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6359b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639d30>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6396a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635be0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6390f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0290069580078125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02901172637939453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11142325401306152
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009203433990478516  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8132134675979614
loading full batch data spends  0.00439763069152832
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.221366882324219e-05
step  0
else: feat size  torch.Size([1346, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 103, 4: 107, 5: 86, 6: 61, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cf8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b38>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5518>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5908>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5860>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b70>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c50>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5630>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5048>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e58d0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5fd0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5550>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ac8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5710>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5208>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ef0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d620a20>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6371d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633160>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631b70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029072284698486328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907705307006836  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10617208480834961
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.814750075340271
loading full batch data spends  0.007410287857055664
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.0067901611328125e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 105, 5: 87, 6: 61, 7: 35, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7f0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bf28>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7f0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6358>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6128>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b3c8>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5be0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f98>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5358>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cf8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5668>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5d68>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50f0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5390>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52b0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5518>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5908>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c88>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5400>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c50>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02919769287109375  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02920246124267578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10699248313903809
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009297370910644531  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8304288387298584
loading full batch data spends  0.005775928497314453
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.748603820800781e-05
step  0
else: feat size  torch.Size([1341, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 105, 4: 107, 5: 83, 6: 59, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d62fbe0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d62fda0>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635710>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635f28>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635dd8>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635ba8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635c50>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635ef0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ef0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cf8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c18>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5390>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5518>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5668>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52b0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5d68>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a58>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5358>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ba8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028953075408935547  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028957843780517578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12630200386047363
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.82392418384552
loading full batch data spends  0.00484466552734375
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.723403930664062e-05
step  0
else: feat size  torch.Size([1348, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 102, 4: 110, 5: 85, 6: 61, 7: 33, 8: 23, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7400>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ef0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3550>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3240>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d62fda0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d629550>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635cc0>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d62fbe0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635710>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635e80>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a58>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630908>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50b8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5358>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b00>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5908>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639898>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54a8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b38>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f98>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f98>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6390f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02895832061767578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028963088989257812  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12262487411499023
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009187698364257812  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8329193592071533
loading full batch data spends  0.005784511566162109
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.125999450683594e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 103, 4: 110, 5: 86, 6: 59, 7: 34, 8: 20, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639d30>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7780>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d34a8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639da0>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3240>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639d68>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639da0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3dd8>
func(nbatch).neighbor  torch.Size([20, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3908>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b3c8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d620be0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630b70>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6371d0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d620be0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d629c88>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635cc0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630908>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635f28>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635ba8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6390f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f28>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639a58>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639d68>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02900409698486328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029008865356445312  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11958074569702148
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8377933502197266
loading full batch data spends  0.0070343017578125
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.151199340820312e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 110, 5: 83, 6: 59, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5da0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a90>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b38>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5860>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7668>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7400>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7908>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d76d8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d76a0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7c18>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7438>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d74e0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7e80>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ac8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7898>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3550>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d620a20>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631b70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6ad4d1588>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6371d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d637518>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029024600982666016  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029029369354248047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11630487442016602
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009235858917236328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8299000263214111
loading full batch data spends  0.0057489871978759766
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.724761962890625e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 109, 5: 84, 6: 59, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5fd0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5630>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5048>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5278>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5358>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50b8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5da0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b38>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cf8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e80>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d36a0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3518>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3dd8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3240>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3b70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3550>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3470>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7400>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7940>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7630>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d74a8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029016494750976562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029021263122558594  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11194753646850586
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8414971828460693
loading full batch data spends  0.005026340484619141
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.221366882324219e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 105, 4: 109, 5: 84, 6: 60, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5668>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ac8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56a0>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56d8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5fd0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e58d0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5470>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5400>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5278>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52e8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([634, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5dd8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54a8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5898>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5d68>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b38>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5080>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5390>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5198>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5358>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029145240783691406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029150009155273438  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11656832695007324
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009288787841796875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8286734819412231
loading full batch data spends  0.00577235221862793
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.319450378417969e-05
step  0
else: feat size  torch.Size([1371, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 104, 4: 107, 5: 87, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b3c8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b550>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635e48>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635c50>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7400>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633b70>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b320>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6308d0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b3c8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b320>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff6ad4d1588>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b70>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6396a0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b38>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f98>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639358>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5668>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5780>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5eb8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56d8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029184341430664062  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029189109802246094  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10776042938232422
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8283779621124268
loading full batch data spends  0.007853269577026367
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.0067901611328125e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 109, 5: 86, 6: 59, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d36a0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d47b8>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4b38>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3dd8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d46a0>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5d68>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c88>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5898>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c18>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff6ad4d1588>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69bb70>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69b2e8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b70>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b38>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b550>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61ba58>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639fd0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b358>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6396a0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639fd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b550>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6396a0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029079437255859375  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029084205627441406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10495996475219727
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009235858917236328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8412270545959473
loading full batch data spends  0.0025482177734375
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.291534423828125e-05
step  0
else: feat size  torch.Size([1365, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 109, 5: 84, 6: 59, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5438>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ac8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5fd0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5da0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5278>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56a0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52e8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5828>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5d68>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ef0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56d8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a90>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5dd8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54a8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50b8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635eb8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69b2e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631b70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635cc0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d47b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635ef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69bb70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029091358184814453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029096126556396484  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1032416820526123
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8366893529891968
loading full batch data spends  0.002466917037963867
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.2438507080078125e-05
step  0
else: feat size  torch.Size([1355, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 109, 5: 83, 6: 60, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7c18>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d76a0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d74e0>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7470>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7908>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a58>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5208>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5978>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a20>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5668>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52b0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ba8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5048>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5da0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c50>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5710>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5eb8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5400>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029023170471191406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029027938842773438  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10298418998718262
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009224891662597656  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8307902812957764
loading full batch data spends  0.002222299575805664
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.337860107421875e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 106, 4: 109, 5: 83, 6: 61, 7: 33, 8: 20, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7518>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d78d0>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7f28>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ac8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7048>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7400>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7908>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7470>
func(nbatch).neighbor  torch.Size([20, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7b70>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7710>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f60>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5630>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52b0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e58d0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e10>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ba8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5048>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029026031494140625  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029030799865722656  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10630607604980469
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8368943929672241
loading full batch data spends  0.0038306713104248047
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.363059997558594e-05
step  0
else: feat size  torch.Size([1366, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 105, 4: 108, 5: 85, 6: 60, 7: 35, 8: 21, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b400>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7f0>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b320>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bf28>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69b2e8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631b70>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7438>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d78d0>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7630>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7748>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633ac8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7898>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635c50>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d34e0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635e80>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635c50>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d34e0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635710>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635c50>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bef0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d34e0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3b70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635c50>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5dd8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029049396514892578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905416488647461  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10885906219482422
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00928354263305664  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8275905847549438
loading full batch data spends  0.002231121063232422
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.337860107421875e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 103, 4: 107, 5: 85, 6: 59, 7: 34, 8: 22, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5be0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5d68>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5048>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5390>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5400>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a58>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b550>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d629c88>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d30f0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7f0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3908>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3ba8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b358>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635c50>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d30f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635e80>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d34e0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3240>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7780>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028948307037353516  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028953075408935547  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09758186340332031
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8814631700515747
loading full batch data spends  0.0023038387298583984
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.649162292480469e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 106, 4: 111, 5: 82, 6: 59, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5518>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57f0>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5470>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5780>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5550>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5668>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e58d0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5080>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5630>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c88>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a20>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5438>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69b2e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d627470>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d629c88>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69bb70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3908>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029129505157470703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029134273529052734  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10325503349304199
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009273052215576172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.849911093711853
loading full batch data spends  0.002218484878540039
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.409385681152344e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 109, 5: 84, 6: 59, 7: 35, 8: 21, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635dd8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d47b8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635ef0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635f28>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6354a8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ba8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5358>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57b8>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c18>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5860>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5518>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5550>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5470>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5908>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5dd8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ac8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5780>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f60>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c50>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e48>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029074668884277344  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029079437255859375  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10144376754760742
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8518186807632446
loading full batch data spends  0.0030815601348876953
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.24249267578125e-05
step  0
else: feat size  torch.Size([1365, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 108, 5: 84, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7518>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7748>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7940>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a90>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639dd8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6390f0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b38>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639358>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a90>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b00>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639cf8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f60>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57b8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e80>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5438>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5fd0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56a0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5198>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5860>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e10>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029104232788085938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02910900115966797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09536933898925781
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009278297424316406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8355246782302856
loading full batch data spends  0.002223491668701172
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.361701965332031e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 104, 4: 108, 5: 86, 6: 58, 7: 35, 8: 22, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b320>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bf28>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50b8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bef0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6287f0>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4b38>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635e48>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d629550>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d629c88>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6358>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7c18>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7780>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b358>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7710>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7438>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7f0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a58>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639d68>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639ac8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639358>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639fd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6396a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639898>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02898263931274414  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028987407684326172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10367417335510254
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8245829343795776
loading full batch data spends  0.0022211074829101562
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.3855438232421875e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 110, 5: 83, 6: 59, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5908>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c88>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5470>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f60>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5630>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5358>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a20>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e10>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50b8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d6b70>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7940>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bf28>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7c18>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b320>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7710>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7b8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7438>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b550>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ac8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61ba58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639a58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f60>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029065608978271484  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029070377349853516  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09627866744995117
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8396109342575073
loading full batch data spends  0.002233266830444336
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.2901763916015625e-05
step  0
else: feat size  torch.Size([1356, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 106, 4: 108, 5: 82, 6: 58, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5438>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5198>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b00>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5eb8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5470>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e80>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5780>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52e8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c88>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5630>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f98>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5048>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5860>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5be0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6ad4d1588>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4b38>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639a58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b3c8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639dd8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633710>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0290679931640625  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907276153564453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10108661651611328
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8235632181167603
loading full batch data spends  0.004071712493896484
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.220008850097656e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 107, 5: 84, 6: 59, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7908>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7208>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7908>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7b8>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630fd0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7c18>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b320>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5828>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ac8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c50>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5438>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5da0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f60>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ba8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5518>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5470>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e80>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e53c8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5278>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5898>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5780>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c88>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905416488647461  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905893325805664  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.09749698638916016
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009241104125976562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8386825323104858
loading full batch data spends  0.0025196075439453125
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.220008850097656e-05
step  0
else: feat size  torch.Size([1362, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 104, 4: 108, 5: 84, 6: 59, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7908>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d79e8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6390f0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7940>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639dd8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b70>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6396a0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b38>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639ac8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639cf8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5438>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c50>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5fd0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b70>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5da0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f60>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a58>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5198>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5208>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ba8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5400>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029020309448242188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02902507781982422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10373997688293457
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.829525113105774
loading full batch data spends  0.0031778812408447266
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.982948303222656e-05
step  0
else: feat size  torch.Size([1379, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 102, 4: 106, 5: 87, 6: 59, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7b8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7630>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b320>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3080>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d630b70>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f28>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639b00>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6285c0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639898>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6285c0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6396a0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d79e8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d79b0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7438>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ba8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7eb8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bf28>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b550>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7438>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b550>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d78d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d76a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7630>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029236793518066406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029241561889648438  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10800004005432129
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009356021881103516  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8141653537750244
loading full batch data spends  0.0029630661010742188
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.4345855712890625e-05
step  0
else: feat size  torch.Size([1360, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 94, 3: 105, 4: 108, 5: 86, 6: 60, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5080>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ac8>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5a20>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57f0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5780>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b38>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5908>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ba8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b00>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d628b00>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635f28>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4b38>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d637518>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d48d0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4b38>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3b70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6285c0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d628b00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b3c8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d74e0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7c18>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7048>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7400>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7438>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029178142547607422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029182910919189453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10166072845458984
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8332916498184204
loading full batch data spends  0.004067182540893555
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.4345855712890625e-05
step  0
else: feat size  torch.Size([1351, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 94, 3: 104, 4: 108, 5: 86, 6: 59, 7: 34, 8: 23, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56a0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5518>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50b8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5828>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cf8>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5710>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5da0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5eb8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5be0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54a8>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b70>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5198>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52b0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c18>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ac8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ba8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d637518>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69ddc04a8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61bf28>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d69b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d36a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b320>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b358>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028944015502929688  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02894878387451172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11311602592468262
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009203433990478516  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.819056749343872
loading full batch data spends  0.002948760986328125
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.220008850097656e-05
step  0
else: feat size  torch.Size([1355, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 108, 5: 85, 6: 59, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639f98>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6390f0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639cf8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639da0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639d68>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639d30>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5470>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e80>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5048>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e10>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5438>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52e8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5fd0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e58d0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f60>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5c50>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5710>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cf8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5518>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5cc0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5dd8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5080>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907276153564453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029077529907226562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10759305953979492
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8359737396240234
loading full batch data spends  0.003895998001098633
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.555152893066406e-05
step  0
else: feat size  torch.Size([1344, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 108, 5: 85, 6: 59, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b400>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b3c8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7b8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61ba58>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7f0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b550>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5748>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59e8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57f0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5860>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5da0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5828>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e59b0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e50b8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5978>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e54e0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5710>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5eb8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f98>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e10>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5f28>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5198>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e52b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028969764709472656  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028974533081054688  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11590218544006348
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009166240692138672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8293476104736328
loading full batch data spends  0.005681037902832031
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.507469177246094e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 103, 4: 109, 5: 85, 6: 59, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3dd8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3080>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6359b0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3518>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d62fda0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff6aa69b2e8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b550>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b320>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b358>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b3c8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e10>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d48d0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4b00>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5438>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d47b8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5b70>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4b38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d48d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639da0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e57b8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639a58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639d68>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639da0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6396a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639d30>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02906942367553711  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907419204711914  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1114041805267334
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8442703485488892
loading full batch data spends  0.005608558654785156
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.9591064453125e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 105, 4: 109, 5: 85, 6: 57, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a58>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7780>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ef0>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ba8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3240>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d74a8>
func(nbatch).neighbor  torch.Size([57, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3908>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3470>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d78d0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7b70>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7b8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7f0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639a58>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b550>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639fd0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b358>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639fd0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b3c8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d62fda0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d639fd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b7b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d4208>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6396a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b400>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028985023498535156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028989791870117188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1125190258026123
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.84539794921875
loading full batch data spends  0.0026884078979492188
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.315376281738281e-05
step  0
else: feat size  torch.Size([1350, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 102, 4: 110, 5: 85, 6: 58, 7: 33, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69ddc04a8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ac8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d79e8>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7048>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d78d0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7668>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ba8>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7e80>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a90>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7438>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7780>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7908>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3940>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d34e0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d36a0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3240>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635e80>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3b70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d620a20>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6371d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61ba58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d633b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d61b3c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631da0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d631e10>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028937816619873047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028942584991455078  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10882186889648438
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7965525388717651
loading full batch data spends  0.0022385120391845703
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.3855438232421875e-05
step  0
else: feat size  torch.Size([1362, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 109, 5: 84, 6: 59, 7: 35, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e56a0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5940>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5710>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5550>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5ba8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6e5e10>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7b70>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7048>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d79e8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7ac8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d79b0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7a58>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7780>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d74e0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d76a0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d74a8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3550>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d74a8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d34e0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d30f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d7710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d36a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d635ef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7ff69d6d3240>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029115676879882812  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029120445251464844  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10285377502441406
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009262561798095703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8025529384613037
Total (block generation + training)time/epoch 0.12437898635864258
pure train time/epoch 0.11045940068303323

num_input_list  [1342, 1367, 1347, 1359, 1348, 1366, 1368, 1366, 1349, 1361, 1357, 1358, 1365, 1368, 1384, 1357, 1358, 1357, 1369, 1358, 1364, 1348, 1358, 1350, 1348, 1364, 1361, 1358, 1368, 1373, 1357, 1371, 1355, 1347, 1351, 1354, 1369, 1368, 1381, 1358, 1358, 1366, 1358, 1360, 1365, 1366, 1350, 1365, 1367, 1347, 1356, 1349, 1374, 1357, 1359, 1365, 1371, 1352, 1359, 1354, 1367, 1356, 1369, 1352, 1364, 1352, 1362, 1359, 1358, 1361, 1346, 1362, 1370, 1364, 1368, 1359, 1359, 1361, 1351, 1366, 1363, 1354, 1365, 1351, 1373, 1371, 1352, 1348, 1370, 1368, 1343, 1357, 1352, 1368, 1354, 1356, 1363, 1375, 1352, 1364, 1352, 1357, 1353, 1367, 1355, 1346, 1364, 1358, 1374, 1370, 1356, 1370, 1367, 1364, 1361, 1363, 1361, 1371, 1368, 1353, 1352, 1354, 1349, 1363, 1363, 1359, 1360, 1350, 1346, 1363, 1368, 1367, 1355, 1363, 1367, 1366, 1356, 1356, 1363, 1360, 1357, 1354, 1364, 1357, 1367, 1354, 1374, 1362, 1357, 1360, 1352, 1354, 1361, 1359, 1360, 1356, 1346, 1369, 1361, 1354, 1347, 1362, 1371, 1353, 1347, 1345, 1366, 1351, 1346, 1368, 1341, 1348, 1359, 1357, 1357, 1367, 1371, 1357, 1365, 1355, 1358, 1366, 1359, 1364, 1359, 1365, 1357, 1354, 1356, 1358, 1362, 1379, 1360, 1351, 1355, 1344, 1357, 1354, 1350, 1362]
