main start at this time 1695364860.4241123
  NumNodes: 2708
  NumEdges: 10556
  NumFeats: 1433
  NumClasses: 7
  NumTrainingSamples: 140
  NumValidationSamples: 500
  NumTestSamples: 1000
Done loading data from cached files.
success----------------------------------------
140
500
2068
# Nodes: 2708
# Edges: 10556
# Train: 140
# Val: 500
# Test: 2068
# Classes: 7

in feats:  1433
loading full batch data spends  0.003003835678100586
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   2.8371810913085938e-05
step  0
else: feat size  torch.Size([1342, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 105, 4: 109, 5: 83, 6: 58, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f385007c198>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385007c1d0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385007c630>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385007c898>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385007cb00>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385007cd68>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385007cfd0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644278>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56444e0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644748>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644f60>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644f98>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5646438>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56466a0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5646908>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5646b70>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5646dd8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649080>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56492e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649550>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56497b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649a20>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649c88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649ef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e564b198>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.552734375 GB
    Memory Allocated: 0.02727031707763672  GigaBytes
Max Memory Allocated: 0.027710914611816406  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.552734375 GB
    Memory Allocated: 0.02727508544921875  GigaBytes
Max Memory Allocated: 0.027710914611816406  GigaBytes

pure train time  0.5286035537719727
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.5625 GB
    Memory Allocated: 0.009155750274658203  GigaBytes
Max Memory Allocated: 0.027710914611816406  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9514586925506592
loading full batch data spends  0.0038080215454101562
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.030632019042969e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 98, 3: 102, 4: 108, 5: 86, 6: 59, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e564bc18>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e564bb70>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5652048>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56522b0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5652518>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385007cda0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644278>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5646ba8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649c88>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f38561832e8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5652860>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5652898>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5652cf8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5652f60>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5651208>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5651470>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56516d8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5651940>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5651ba8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5651e10>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56660b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5666320>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5666588>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56667f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5666a58>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905416488647461  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905893325805664  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.12132763862609863
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009288787841796875  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9478996992111206
loading full batch data spends  0.002393007278442383
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.552436828613281e-05
step  0
else: feat size  torch.Size([1347, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 109, 5: 85, 6: 57, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e564f438>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e564f470>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e564f8d0>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e564fb38>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e564fda0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675048>
func(nbatch).neighbor  torch.Size([57, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56752b0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675518>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675780>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56759e8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566e128>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5652080>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5652898>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385009fa90>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56667f0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e564fb38>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675fd0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675550>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566e320>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566e588>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566e7f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ea58>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ecc0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ef28>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56701d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028745651245117188  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02875041961669922  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.11777186393737793
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009182453155517578  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9503470659255981
loading full batch data spends  0.003331899642944336
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.57763671875e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 111, 5: 83, 6: 59, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5670b70>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5670cc0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5664080>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56642e8>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5664550>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56647b8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5664a20>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5664c88>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5664ef0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679198>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56799b0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56799e8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679e48>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567b0f0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567b358>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567b5c0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567b828>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ba90>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567bcf8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ea58>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566e828>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5670e10>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5664c88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679a58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567be10>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028865814208984375  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028870582580566406  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.12227654457092285
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009246349334716797  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.948660969734192
loading full batch data spends  0.004537105560302734
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.175041198730469e-05
step  0
else: feat size  torch.Size([1348, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 105, 4: 111, 5: 82, 6: 59, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5677400>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5677438>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5677898>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5677b00>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5677d68>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5677fd0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5654278>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56544e0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5654748>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56549b0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5678208>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5678240>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56786a0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5678908>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5678b70>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5678dd8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e080>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e2e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e550>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e7b8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ea20>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ec88>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567eef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5669198>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5669400>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02881908416748047  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0288238525390625  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.11993050575256348
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009187698364257812  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.947360634803772
loading full batch data spends  0.003276824951171875
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.5299530029296875e-05
step  0
else: feat size  torch.Size([1366, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 103, 4: 107, 5: 85, 6: 60, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5654278>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5654048>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56665f8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56694e0>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5669630>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56699e8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5669b70>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5669dd8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036080>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f38500362e8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f38500369e8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036a20>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036e80>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5673128>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5673390>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56735f8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5673860>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5673ac8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5673d30>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5673f98>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a240>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a4a8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a978>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566abe0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02897787094116211  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02898263931274414  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.12179994583129883
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00928354263305664  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9474166631698608
loading full batch data spends  0.003265380859375
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.553794860839844e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 104, 4: 111, 5: 85, 6: 59, 7: 33, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f38500385f8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038630>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038a90>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038cf8>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f38500369e8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f38500367b8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a240>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56699e8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385009f518>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038dd8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676358>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676390>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56767f0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a58>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676cc0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f28>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a1d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a438>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6a0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a908>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ab70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003add8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c2e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c550>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904653549194336  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905130386352539  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.12340688705444336
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009294509887695312  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9472516775131226
loading full batch data spends  0.00454401969909668
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.079673767089844e-05
step  0
else: feat size  torch.Size([1366, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 105, 4: 107, 5: 86, 6: 58, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566afd0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a780>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645358>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455c0>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56451d0>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645588>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645160>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56453c8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645438>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036a20>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036e80>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a58>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036c18>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56767f0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676358>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036a20>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036e80>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676cf8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a90>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676cf8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6d8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676cc0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028983116149902344  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028987884521484375  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.12050986289978027
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00928354263305664  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9449833631515503
loading full batch data spends  0.004462242126464844
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.198883056640625e-05
step  0
else: feat size  torch.Size([1349, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 108, 5: 85, 6: 60, 7: 34, 8: 21, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c978>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c588>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c8d0>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c860>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ce10>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cc18>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c080>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c2e8>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca20>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645860>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645470>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645630>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645940>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459b0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455c0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645400>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ef98>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56735f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036a20>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56767f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676588>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036c18>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02893972396850586  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02894449234008789  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.12095451354980469
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009294509887695312  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9418540000915527
loading full batch data spends  0.0033054351806640625
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.673004150390625e-05
step  0
else: feat size  torch.Size([1361, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 108, 5: 85, 6: 57, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567b828>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cb00>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c940>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cda0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c390>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cf60>
func(nbatch).neighbor  torch.Size([57, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c3c8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c518>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c860>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0f0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca20>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c358>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ce10>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c2b0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b00>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645860>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645898>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645588>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645400>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645828>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645748>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645780>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028944969177246094  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028949737548828125  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.11947512626647949
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009256839752197266  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9435940980911255
loading full batch data spends  0.003092050552368164
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.6253204345703125e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 105, 4: 106, 5: 85, 6: 58, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567be10>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567bda0>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567b828>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c940>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c8d0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca90>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c390>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c898>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7b8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c588>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cda0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c2b0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c518>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c908>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649c88>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56492e8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c2b0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649ef0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56492e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c358>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca20>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c5c0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645898>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028942108154296875  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028946876525878906  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.12200140953063965
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009294509887695312  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9406546354293823
loading full batch data spends  0.0023322105407714844
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.220008850097656e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 103, 4: 107, 5: 85, 6: 61, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a58>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56763c8>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036550>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f38500367b8>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038b00>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e564b550>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56697b8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649eb8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649c88>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038630>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c400>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c2b0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679be0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c860>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566acf8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a4a8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c320>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ae48>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c5c0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a1d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a4a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003add8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a240>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567bba8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6d8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02898550033569336  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02899026870727539  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.11789345741271973
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009241104125976562  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9431278705596924
loading full batch data spends  0.00446629524230957
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.8650970458984375e-05
step  0
else: feat size  torch.Size([1365, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 104, 4: 110, 5: 84, 6: 60, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56458d0>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645828>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56451d0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456d8>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645780>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452e8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455f8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645748>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649cf8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56492e8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f60>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649f60>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ef98>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649c88>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649cf8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ac18>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649a58>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5654518>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a4a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649c88>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ef98>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566afd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566acf8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029027462005615234  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029032230377197266  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.11941719055175781
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009294509887695312  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9421011209487915
loading full batch data spends  0.0032951831817626953
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.0558319091796875e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 102, 4: 109, 5: 84, 6: 60, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c5f8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0b8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649c88>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c668>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649cf8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c908>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ce10>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649f98>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c630>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455f8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645978>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645208>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645630>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a58>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645908>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567b390>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5664ef0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566e828>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567bd68>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ef28>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679780>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e7b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029061317443847656  GigaBytes
Max Memory Allocated: 0.029604434967041016  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029066085815429688  GigaBytes
Max Memory Allocated: 0.029604434967041016  GigaBytes

pure train time  0.11914253234863281
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009294509887695312  GigaBytes
Max Memory Allocated: 0.029604434967041016  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.938172698020935
loading full batch data spends  0.0023806095123291016
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.409385681152344e-05
step  0
else: feat size  torch.Size([1384, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 108, 5: 84, 6: 58, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c358>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cb00>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c9e8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c588>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c5f8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca90>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c2e8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c320>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c898>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c080>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0b8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ce10>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c3c8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c668>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c630>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b00>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645438>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645898>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455c0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645588>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645828>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56450f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029236316680908203  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029241085052490234  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11664724349975586
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9386740922927856
loading full batch data spends  0.0044634342193603516
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.200241088867188e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 108, 5: 86, 6: 58, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ef98>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a588>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036e80>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036550>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036c18>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036e80>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c588>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c518>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca90>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c8d0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7b8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c9b0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c668>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c358>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c320>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c3c8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c400>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca20>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c908>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ce10>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645940>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645390>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029030323028564453  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029035091400146484  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12122917175292969
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009235858917236328  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9365544319152832
loading full batch data spends  0.004486799240112305
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.91278076171875e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 94, 3: 103, 4: 109, 5: 86, 6: 59, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645eb8>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f60>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c88>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a588>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56786d8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5670080>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5678240>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ef98>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385009f518>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f38500367b8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5669b70>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036048>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036a20>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645940>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645780>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f28>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645898>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e48>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645fd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e10>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029059886932373047  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029064655303955078  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12122893333435059
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9397685527801514
loading full batch data spends  0.0039196014404296875
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.054473876953125e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 109, 5: 83, 6: 59, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676128>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566acc0>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a58>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649f98>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649c88>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f60>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ea58>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e588>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649a58>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567eef0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036c18>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5669b70>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385009f358>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f38500367b8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676828>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036048>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036e80>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f60>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036550>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676400>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649eb8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036e80>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676828>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a588>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649c88>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029006004333496094  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029010772705078125  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11578965187072754
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009235858917236328  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.93655526638031
loading full batch data spends  0.003229856491088867
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.649162292480469e-05
step  0
else: feat size  torch.Size([1369, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 102, 4: 108, 5: 85, 6: 60, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f60>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cf8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645668>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645eb8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b00>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ac8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645da0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ba8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f98>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645438>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e080>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56453c8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ea58>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e550>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e7b8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5669b70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ef98>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649f60>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ef28>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f38500381d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649ef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56697b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907562255859375  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02908039093017578  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.1134939193725586
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9399230480194092
loading full batch data spends  0.002368927001953125
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.218650817871094e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 108, 5: 84, 6: 58, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c18>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f28>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645400>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456a0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a90>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645128>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e80>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645748>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e48>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645710>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645518>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a58>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645eb8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645828>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645da0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e2e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e7f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef60>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ba8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef28>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e2e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02899026870727539  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028995037078857422  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11513233184814453
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009241104125976562  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9301587343215942
loading full batch data spends  0.003261566162109375
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.506111145019531e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 98, 3: 106, 4: 107, 5: 82, 6: 59, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649a58>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649f60>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649eb8>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455c0>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645748>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e48>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645978>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645550>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ef0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645710>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645eb8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ba8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a58>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645da0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56458d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645898>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e10>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645940>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f60>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905130386352539  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029056072235107422  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11633563041687012
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.941226601600647
loading full batch data spends  0.003306150436401367
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.315376281738281e-05
step  0
else: feat size  torch.Size([1348, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 111, 5: 83, 6: 60, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c5f8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c780>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5664a58>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0b8>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6a0>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5654518>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676cc0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56492e8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef28>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a588>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c908>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cda0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c898>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0b8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c2e8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c550>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c3c8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c2b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c5c0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca20>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f28>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a20>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e80>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029033184051513672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029037952423095703  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11393070220947266
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009187698364257812  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.932129144668579
loading full batch data spends  0.003215312957763672
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.363059997558594e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 110, 5: 82, 6: 60, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455f8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56450f0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ea58>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567eef0>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645dd8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ea58>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56450f0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef60>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566e828>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56665f8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a780>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566e828>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f38500366a0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5670c50>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e7b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5664a58>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ef28>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e550>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ef98>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036e80>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566afd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567eef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ec88>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029013633728027344  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029018402099609375  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11563563346862793
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9251493215560913
loading full batch data spends  0.003236055374145508
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.57763671875e-05
step  0
else: feat size  torch.Size([1350, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 109, 5: 86, 6: 59, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645160>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56453c8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56450f0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567b828>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567bf60>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567be10>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567bf60>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e10>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567b128>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56450f0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645438>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645550>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c588>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c2e8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0b8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c320>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cda0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ef28>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5670c50>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566afd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036550>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e7b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566afd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5664a58>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028991222381591797  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028995990753173828  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11986851692199707
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009198188781738281  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9266060590744019
loading full batch data spends  0.004465341567993164
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.984306335449219e-05
step  0
else: feat size  torch.Size([1348, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 103, 4: 110, 5: 86, 6: 59, 7: 33, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645668>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645080>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ba8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f98>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645390>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455f8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b38>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459b0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d68>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645128>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ac8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645400>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56450f0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645dd8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645438>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645828>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645710>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c978>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c518>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c400>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02902507781982422  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02902984619140625  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11787605285644531
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9258317947387695
loading full batch data spends  0.002428293228149414
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.982948303222656e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 103, 4: 109, 5: 83, 6: 60, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5664a58>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645748>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c50>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c88>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455f8>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645860>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645908>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f28>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a20>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b38>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455c0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e10>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e48>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c18>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56450f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645be0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645160>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645dd8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645710>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645278>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456d8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029078960418701172  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029083728790283203  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11883234977722168
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009273052215576172  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9282068014144897
loading full batch data spends  0.005593061447143555
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.9114227294921875e-05
step  0
else: feat size  torch.Size([1361, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 102, 4: 108, 5: 85, 6: 60, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566acf8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ac88>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a4a8>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a780>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b38>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e320>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aba8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676390>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038b38>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567b828>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a90>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cc0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645550>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645908>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645860>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645748>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645400>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a58>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645588>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56451d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645978>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029082298278808594  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029087066650390625  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11991500854492188
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9257291555404663
loading full batch data spends  0.004462242126464844
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.8650970458984375e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 109, 5: 84, 6: 58, 7: 33, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645dd8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645278>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645dd8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566afd0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a4a8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645710>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca90>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0f0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c5c0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c860>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([627, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef60>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567bf60>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566afd0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef60>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038b38>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e7b8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ef98>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036e80>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a588>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ef28>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a208>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5669b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a588>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566acf8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cc0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028963088989257812  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028967857360839844  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11686563491821289
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009241104125976562  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9246337413787842
loading full batch data spends  0.0028579235076904297
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.482269287109375e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 103, 4: 111, 5: 83, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649f98>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649ef0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649f60>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038d30>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676cf8>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649cf8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56763c8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676438>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56767f0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a58>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676358>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f28>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c3c8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c978>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cf60>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c9e8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cda0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c080>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036e80>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5670c50>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566acf8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b38>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567bf60>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036a20>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56699e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029140472412109375  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029145240783691406  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11480093002319336
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.923708438873291
loading full batch data spends  0.0032923221588134766
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.3392181396484375e-05
step  0
else: feat size  torch.Size([1373, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 106, 5: 86, 6: 58, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e7b8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e2e8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649cf8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ecc0>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038d30>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649c88>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef60>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038630>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f38500381d0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56492e8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ec88>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e2e8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ef98>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a940>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ef28>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a208>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ab70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a780>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a588>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6d8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ab70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ae10>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c320>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029159069061279297  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029163837432861328  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.1161797046661377
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009321212768554688  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.926569938659668
loading full batch data spends  0.0023653507232666016
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.3855438232421875e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 102, 4: 110, 5: 84, 6: 61, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645978>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456a0>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645908>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645780>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ac8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b38>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452e8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645668>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645048>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645eb8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645da0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d68>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56450f0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645358>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645828>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645080>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645630>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645278>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645748>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56453c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645400>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904653549194336  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905130386352539  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11555027961730957
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9240683317184448
loading full batch data spends  0.0023610591888427734
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.2901763916015625e-05
step  0
else: feat size  torch.Size([1371, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 103, 4: 109, 5: 86, 6: 58, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b38>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ea58>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038b00>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ecc0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5654518>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036a20>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef28>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a4a8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f38500381d0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a1d0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567b828>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5678240>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cef0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567b128>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567bda0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c400>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c358>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567bb70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567bda0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567b390>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a20>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645860>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645be0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f98>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029149532318115234  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029154300689697266  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11605238914489746
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009310245513916016  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9323049783706665
loading full batch data spends  0.0035247802734375
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.839897155761719e-05
step  0
else: feat size  torch.Size([1355, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 105, 4: 107, 5: 83, 6: 59, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ba8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645fd0>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cf8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645da0>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645748>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645828>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645278>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645710>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56453c8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f385009f518>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b00>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567bd68>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385009f518>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ba58>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385009f358>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036e80>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567be10>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567b828>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036550>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567bda0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036c18>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ba58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c400>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029017925262451172  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029022693634033203  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11814117431640625
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9137897491455078
loading full batch data spends  0.004283428192138672
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.8160552978515625e-05
step  0
else: feat size  torch.Size([1347, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 106, 5: 84, 6: 60, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645668>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e80>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645208>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645080>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a20>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645748>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cf8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b70>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645be0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459b0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56451d0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645630>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ac8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c50>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676390>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645898>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a58>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56786d8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f38500381d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5678240>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567bd68>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038278>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038d30>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028928756713867188  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02893352508544922  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11557221412658691
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009182453155517578  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9184541702270508
loading full batch data spends  0.004435539245605469
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.984306335449219e-05
step  0
else: feat size  torch.Size([1351, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 100, 4: 110, 5: 85, 6: 61, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a4a8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566acc0>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a240>
func(nbatch).neighbor  torch.Size([100, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456d8>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645978>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645828>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c88>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a90>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645710>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f98>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645208>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a20>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cc0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645358>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645278>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645dd8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56453c8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645fd0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645588>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645da0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676390>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a90>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029088497161865234  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029093265533447266  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11835289001464844
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9176779985427856
loading full batch data spends  0.003227710723876953
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.4345855712890625e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 102, 4: 110, 5: 84, 6: 60, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c898>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cf60>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a58>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676438>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f60>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676390>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676400>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676588>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645860>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645eb8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455f8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e80>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b38>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f28>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456d8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645978>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c88>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ba8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645710>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645940>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a20>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02899789810180664  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029002666473388672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11511564254760742
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.90658438205719
loading full batch data spends  0.004426240921020508
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.984306335449219e-05
step  0
else: feat size  torch.Size([1369, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 100, 4: 108, 5: 85, 6: 60, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cda0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c978>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645588>
func(nbatch).neighbor  torch.Size([100, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c940>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ef28>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385009f358>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676400>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a58>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56699e8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676cf8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a58>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f60>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c550>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c8d0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c898>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c940>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f60>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c518>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cda0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c978>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c390>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f60>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455f8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02913522720336914  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029139995574951172  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11851119995117188
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9319497346878052
loading full batch data spends  0.0033147335052490234
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.291534423828125e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 106, 4: 109, 5: 86, 6: 59, 7: 35, 8: 23, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645dd8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645550>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b00>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645940>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56450f0>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b70>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ac18>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566acf8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645940>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566af98>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([634, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b00>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567b128>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a588>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ae10>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f28>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a588>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ae10>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f28>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a588>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a1d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a940>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56697b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645438>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029129505157470703  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029134273529052734  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11384916305541992
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009294509887695312  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.916406273841858
loading full batch data spends  0.0032362937927246094
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.5299530029296875e-05
step  0
else: feat size  torch.Size([1381, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 103, 4: 108, 5: 84, 6: 59, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b00>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5664a58>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5664ef0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f98>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ef28>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645668>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e10>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676358>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676390>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645358>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452b0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cda0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c390>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca20>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c780>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c668>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c940>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c550>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56697b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5654518>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5678240>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a240>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567b128>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a780>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a940>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029250144958496094  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029254913330078125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11757111549377441
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9045988321304321
loading full batch data spends  0.0023937225341796875
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.2901763916015625e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 109, 5: 85, 6: 60, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645588>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ac8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c88>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645dd8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645eb8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645860>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645278>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56453c8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e80>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56458d0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452b0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645208>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f60>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d68>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e10>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c550>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c978>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c080>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cf60>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c9b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cda0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029085159301757812  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029089927673339844  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11732220649719238
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009241104125976562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9208881855010986
loading full batch data spends  0.0037827491760253906
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.245208740234375e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 107, 5: 84, 6: 59, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5664a58>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038f28>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038630>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645160>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645550>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645278>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56458d0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645860>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645208>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d68>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645048>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645630>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a58>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b00>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645780>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f60>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ba8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645828>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cb00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029003143310546875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029007911682128906  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12093639373779297
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9192829132080078
loading full batch data spends  0.0031824111938476562
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.744529724121094e-05
step  0
else: feat size  torch.Size([1366, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 110, 5: 85, 6: 60, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ecc0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ec88>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a780>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef60>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038630>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5664a58>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675898>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038630>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b38>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038f28>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([636, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ea58>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ec88>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a780>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e080>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566acc0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ec88>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e588>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a4a8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e550>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e2e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566acf8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ac8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645908>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029211997985839844  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029216766357421875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11516237258911133
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00928640365600586  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9113564491271973
loading full batch data spends  0.004433393478393555
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.817413330078125e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 106, 4: 108, 5: 83, 6: 59, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649f60>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56492e8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649f98>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649eb8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649c88>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645780>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56458d0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a58>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b38>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e7b8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e080>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a9b0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567eef0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a240>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ec88>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ecc0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566afd0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567eef0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566af98>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e7f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ecc0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566acc0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aef0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905130386352539  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029056072235107422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11929488182067871
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9159451723098755
loading full batch data spends  0.0033185482025146484
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.9114227294921875e-05
step  0
else: feat size  torch.Size([1360, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 106, 4: 109, 5: 83, 6: 60, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676588>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645160>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645438>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645eb8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455f8>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645208>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f28>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d68>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645978>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645fd0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456a0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ba8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645080>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645748>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c50>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a58>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385009f518>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56735f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a588>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ea58>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ac88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e7b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ea58>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02908945083618164  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029094219207763672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11841773986816406
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009251594543457031  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9286401271820068
loading full batch data spends  0.003224611282348633
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.458427429199219e-05
step  0
else: feat size  torch.Size([1365, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 94, 3: 103, 4: 107, 5: 87, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e7b8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e080>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e7b8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676358>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676128>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e0b8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676390>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645710>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a20>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cf8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b38>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645eb8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cc0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645780>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645860>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e80>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645438>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645208>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645978>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455c0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d68>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645be0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645550>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02912425994873047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0291290283203125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11531519889831543
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9073983430862427
loading full batch data spends  0.0033097267150878906
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.315376281738281e-05
step  0
else: feat size  torch.Size([1366, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 103, 4: 109, 5: 85, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c8d0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c5f8>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cef0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c588>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca20>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ab70>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cda0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca20>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a470>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7b8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c860>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c9b0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c860>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aba8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003add8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c940>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a1d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cf8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645390>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c88>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645eb8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cc0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029132843017578125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029137611389160156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11794424057006836
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00928354263305664  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8942615985870361
loading full batch data spends  0.0025787353515625
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.220008850097656e-05
step  0
else: feat size  torch.Size([1350, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 104, 4: 110, 5: 86, 6: 57, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566acf8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a4a8>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a588>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036a20>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385009f940>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649eb8>
func(nbatch).neighbor  torch.Size([57, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ae10>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649f98>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a470>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a908>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038d30>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a908>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038b00>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cef0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c908>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c8d0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c898>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c518>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c630>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c5f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c9b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c9e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566af98>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028969287872314453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028974056243896484  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11635422706604004
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.917686939239502
loading full batch data spends  0.003278493881225586
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.4345855712890625e-05
step  0
else: feat size  torch.Size([1365, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 110, 5: 83, 6: 60, 7: 35, 8: 21, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a58>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56451d0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cf8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456a0>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a20>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455c0>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b38>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645400>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036a20>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e564b550>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c390>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c978>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c550>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c780>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c630>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cef0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca90>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c860>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca20>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cf60>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c780>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029048442840576172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029053211212158203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11420631408691406
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009278297424316406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9213230609893799
loading full batch data spends  0.003257274627685547
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.76837158203125e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 106, 4: 109, 5: 82, 6: 60, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a438>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ae10>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aef0>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a58>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645be0>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645da0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645438>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456d8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56451d0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645400>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a20>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f28>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645358>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455f8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b70>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455c0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645780>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e48>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e564b550>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56665f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385009f358>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038b00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5664a58>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029133319854736328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02913808822631836  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11770510673522949
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9153739213943481
loading full batch data spends  0.002407073974609375
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.266334533691406e-05
step  0
else: feat size  torch.Size([1347, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 105, 4: 108, 5: 84, 6: 59, 7: 35, 8: 22, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cf60>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cb00>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c630>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca20>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036c18>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c518>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cb00>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f38500367b8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036048>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca90>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c9b0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645dd8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645390>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645400>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645710>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c50>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56458d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645208>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ef0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645438>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028905868530273438  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02891063690185547  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1172327995300293
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009182453155517578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8881781101226807
loading full batch data spends  0.004454851150512695
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.841255187988281e-05
step  0
else: feat size  torch.Size([1356, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 105, 4: 109, 5: 85, 6: 58, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aba8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a470>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003add8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c390>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cf60>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0f0>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c2b0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c588>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c8d0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c940>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c978>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0b8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7f0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c908>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c5f8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c3c8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e80>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645dd8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645710>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645fd0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645390>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645630>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645be0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e48>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029036521911621094  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029041290283203125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11971259117126465
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9052934646606445
loading full batch data spends  0.0029296875
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.291534423828125e-05
step  0
else: feat size  torch.Size([1349, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 109, 5: 84, 6: 60, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a90>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f60>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676cf8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56767f0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679400>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038b38>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ecc0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aba8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a470>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56799e8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0f0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c2b0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c3c8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c898>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036a20>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ce10>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c518>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c9e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a240>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c3c8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c2b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a9b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ce10>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56767f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029000282287597656  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029005050659179688  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11640119552612305
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009192943572998047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9148956537246704
loading full batch data spends  0.004433631896972656
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.888938903808594e-05
step  0
else: feat size  torch.Size([1374, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 105, 4: 109, 5: 86, 6: 60, 7: 35, 8: 21, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e48>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645400>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456a0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b38>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455c0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ef0>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645898>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e80>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5678240>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5664a58>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679400>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e550>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a4a8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679400>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a438>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036048>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679278>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6d8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036c18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f28>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a1d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5669b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029144763946533203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029149532318115234  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11816883087158203
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.90384042263031
loading full batch data spends  0.004343748092651367
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.363059997558594e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 108, 5: 84, 6: 60, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56763c8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003add8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676828>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f28>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676358>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676438>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645860>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645278>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d68>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e48>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cc0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ef0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645eb8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645208>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645898>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679278>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b00>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5678240>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5654518>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56735f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679278>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a438>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029017925262451172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029022693634033203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11349058151245117
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009235858917236328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8958890438079834
loading full batch data spends  0.0032351016998291016
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.5299530029296875e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 105, 4: 108, 5: 84, 6: 57, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56492e8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649f98>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ec88>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676438>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef28>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e0b8>
func(nbatch).neighbor  torch.Size([57, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e320>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef60>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e7b8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e0b8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c88>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56450f0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459b0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645278>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645080>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456a0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56458d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645860>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ba8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645358>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56453c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645908>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029020309448242188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02902507781982422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1139533519744873
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.907863736152649
loading full batch data spends  0.0032434463500976562
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.410743713378906e-05
step  0
else: feat size  torch.Size([1365, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 107, 5: 84, 6: 59, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b00>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644ba8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c080>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c978>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cf60>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca90>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c940>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c400>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c550>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cb00>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c8d0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c668>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c390>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c5c0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cda0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7b8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459b0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645278>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456d8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645630>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e80>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56458d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029108047485351562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029112815856933594  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1159830093383789
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009278297424316406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9102751016616821
loading full batch data spends  0.0029349327087402344
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.00543212890625e-05
step  0
else: feat size  torch.Size([1371, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 102, 4: 107, 5: 84, 6: 59, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f60>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676438>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676128>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56767f0>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b00>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ef28>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566e828>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b38>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644ba8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b00>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c390>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c860>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56665f8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c5c0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679400>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7b8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a940>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c630>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca20>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a4a8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca20>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036c18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca20>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029155254364013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029160022735595703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11703610420227051
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.904520034790039
loading full batch data spends  0.005154848098754883
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.030632019042969e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 107, 5: 84, 6: 59, 7: 34, 8: 21, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645da0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56453c8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452b0>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ef0>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645400>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645048>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c50>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ac8>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459b0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645780>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56697b8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56665f8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676358>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675f98>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ae10>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c588>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c9b0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ac18>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c860>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c550>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cda0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5669b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c630>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f38500367b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028943538665771484  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028948307037353516  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11993575096130371
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009209156036376953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9081017971038818
loading full batch data spends  0.003354310989379883
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.696846008300781e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 110, 5: 82, 6: 60, 7: 33, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca20>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7b8>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644ba8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a438>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c940>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a20>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ef0>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452b0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d68>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645438>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645fd0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c88>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ac8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645080>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645358>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676358>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56665f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ae10>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676358>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a780>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036c18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a240>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029082775115966797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029087543487548828  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11489224433898926
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.902315616607666
loading full batch data spends  0.003246307373046875
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.3392181396484375e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 108, 5: 86, 6: 61, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c320>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cb00>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c630>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c5f8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cda0>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ce10>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c2b0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c898>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cf60>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c940>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([634, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c50>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56453c8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645780>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645588>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e10>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645908>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455f8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645898>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ba8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645da0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56450f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b38>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029102325439453125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029107093811035156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11645317077636719
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00922250747680664  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8940058946609497
loading full batch data spends  0.004449129104614258
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.984306335449219e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 107, 5: 87, 6: 60, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036c18>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036048>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0b8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c550>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c518>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c940>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c978>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c550>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676390>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56763c8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c080>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca90>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c940>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c908>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cef0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ef0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e48>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645780>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645eb8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c50>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a20>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e10>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645908>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029088497161865234  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029093265533447266  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12357854843139648
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8935496807098389
loading full batch data spends  0.003420591354370117
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.553794860839844e-05
step  0
else: feat size  torch.Size([1356, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 102, 4: 108, 5: 86, 6: 61, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ae10>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6a0>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a1d0>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6d8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036a20>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b00>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675898>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036c18>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036a20>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a90>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c9e8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0b8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56735f8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef60>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c940>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e588>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c940>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef60>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c400>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c518>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c390>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ecc0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a940>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029044151306152344  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029048919677734375  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11508035659790039
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00923013687133789  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8870199918746948
loading full batch data spends  0.0024411678314208984
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.2438507080078125e-05
step  0
else: feat size  torch.Size([1369, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 109, 5: 82, 6: 59, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645908>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56450f0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c50>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645358>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645630>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645780>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645fd0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456a0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a1d0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56735f8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385009f358>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aef0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ae10>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5670c50>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6a0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aef0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649ef0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef60>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f28>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a438>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ecc0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676cf8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029043197631835938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904796600341797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1159360408782959
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8927849531173706
loading full batch data spends  0.003172159194946289
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.410743713378906e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 109, 5: 85, 6: 59, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a470>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6d8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003add8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a208>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645eb8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d68>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645668>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e80>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cc0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c50>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645400>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b00>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645390>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645710>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645630>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645588>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645080>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5670c50>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56735f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e588>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649c88>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5678240>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef28>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567eef0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904367446899414  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029048442840576172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11498880386352539
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009209156036376953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.868255615234375
loading full batch data spends  0.00445866584777832
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.9604644775390625e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 102, 4: 108, 5: 85, 6: 60, 7: 35, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c908>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0b8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7b8>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0f0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c9b0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c9e8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c898>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c668>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cef0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c780>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455c0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c88>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645eb8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645860>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cf8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d68>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645dd8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456d8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645978>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645da0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a20>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645208>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029140472412109375  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029145240783691406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11894822120666504
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.905763030052185
loading full batch data spends  0.004453897476196289
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.410743713378906e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 107, 5: 84, 6: 60, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676588>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56763c8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f60>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c588>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c5c0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c780>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca20>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c5f8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c9e8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0b8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cf60>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca90>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675898>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c2b0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c940>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c630>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c518>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ac8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455f8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02902078628540039  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029025554656982422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11274504661560059
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009209156036376953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8909580707550049
loading full batch data spends  0.0030760765075683594
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.315376281738281e-05
step  0
else: feat size  torch.Size([1362, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 111, 5: 84, 6: 60, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c978>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038f28>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cda0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7f0>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56763c8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676588>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385009f940>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676358>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef28>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675828>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675f98>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56697b8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675f98>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a90>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f60>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675898>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ce10>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c5c0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c9b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c780>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c358>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905130386352539  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029056072235107422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11308097839355469
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8858129978179932
loading full batch data spends  0.003065347671508789
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.1961669921875e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 108, 5: 84, 6: 59, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a20>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645908>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ac8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455c0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645400>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456a0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645588>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676390>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56782b0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675898>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a90>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676358>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676588>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca20>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ce10>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cb00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c780>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c9b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c390>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029073715209960938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907848358154297  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1109166145324707
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009246349334716797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8810758590698242
loading full batch data spends  0.003406524658203125
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.9591064453125e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 107, 5: 84, 6: 59, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56735f8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca90>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679be0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679630>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452b0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455f8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e10>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ba8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645908>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645588>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455c0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a58>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cf8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e48>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645400>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645860>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675828>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56782b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038f28>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5670080>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5670c50>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56699e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56697b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904224395751953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029047012329101562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10909700393676758
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8813163042068481
loading full batch data spends  0.0033736228942871094
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.266334533691406e-05
step  0
else: feat size  torch.Size([1361, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 105, 4: 110, 5: 83, 6: 59, 7: 35, 8: 22, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c860>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cda0>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c8d0>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ce10>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c978>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c390>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cf60>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca20>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c940>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c550>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c898>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56450f0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645978>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452e8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645208>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645898>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645828>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645080>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645da0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e10>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cc0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02902078628540039  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029025554656982422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10280179977416992
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009256839752197266  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.889992356300354
loading full batch data spends  0.002362966537475586
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.4332275390625e-05
step  0
else: feat size  torch.Size([1346, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 98, 3: 104, 4: 107, 5: 83, 6: 61, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c9e8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c320>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56763c8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c978>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676390>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c588>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c978>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f28>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a58>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca20>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7f0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ac18>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a240>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566acf8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566afd0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a240>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d68>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56450f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645860>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456d8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f60>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028998851776123047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029003620147705078  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11800527572631836
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9107794761657715
loading full batch data spends  0.003667593002319336
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.316734313964844e-05
step  0
else: feat size  torch.Size([1362, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 104, 4: 110, 5: 85, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cf60>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c358>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cb00>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7b8>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a940>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f38500366a0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ea58>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ae10>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649a58>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a940>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ac18>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566afd0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676588>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676828>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b00>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56767f0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676cf8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676390>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c630>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c390>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca20>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c9e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ce10>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c940>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029133319854736328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02913808822631836  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11236429214477539
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009265422821044922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8899112939834595
loading full batch data spends  0.0036258697509765625
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.269050598144531e-05
step  0
else: feat size  torch.Size([1370, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 108, 5: 86, 6: 57, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ba8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455c0>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645978>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b00>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645eb8>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645908>
func(nbatch).neighbor  torch.Size([57, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645438>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d68>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b00>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675da0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c940>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c390>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385009f518>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c780>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c9b0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f28>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c518>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c9b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676828>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca20>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676128>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c518>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca20>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029162883758544922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029167652130126953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10803842544555664
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8723628520965576
loading full batch data spends  0.0032699108123779297
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.4332275390625e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 105, 4: 110, 5: 81, 6: 59, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ae10>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a780>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566acf8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566acc0>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ac18>
func(nbatch).neighbor  torch.Size([81, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566afd0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645080>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645780>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456a0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645be0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ba8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a58>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c50>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645630>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645eb8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645438>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e48>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385009f518>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675da0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038b00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5664a58>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56763c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385009f358>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02903604507446289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029040813446044922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1036374568939209
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009273052215576172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.880435824394226
loading full batch data spends  0.002353191375732422
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.3855438232421875e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 110, 5: 83, 6: 60, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c400>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cef0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c860>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c5f8>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c908>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c588>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c390>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca90>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c630>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c780>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455f8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645668>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645828>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645780>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645898>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645080>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f60>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455c0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029095172882080078  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02909994125366211  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11100292205810547
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8600555658340454
loading full batch data spends  0.0032525062561035156
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.458427429199219e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 110, 5: 85, 6: 60, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c2b0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0f0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c518>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cb00>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c630>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c5c0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c320>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aba8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c588>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a908>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([634, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a940>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a470>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6a0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a208>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aef0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a438>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645828>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645780>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645400>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cf8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645da0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456d8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d68>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645898>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02915191650390625  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02915668487548828  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1079716682434082
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009249210357666016  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8889302015304565
loading full batch data spends  0.004168987274169922
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.935264587402344e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 105, 4: 108, 5: 82, 6: 60, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e0b8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef28>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f38500381d0>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038d30>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679550>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5678240>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aef0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a1d0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56735f8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ae10>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c400>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cf60>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cb00>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cef0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c630>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c908>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ce10>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c978>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567eef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef28>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef60>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef28>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029076576232910156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029081344604492188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10761475563049316
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8730376958847046
loading full batch data spends  0.003259897232055664
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.266334533691406e-05
step  0
else: feat size  torch.Size([1361, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 104, 4: 110, 5: 85, 6: 60, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455c0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56458d0>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e48>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e80>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56450f0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c50>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645550>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ba8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645978>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645588>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([635, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a470>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56735f8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aba8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f38500381d0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aef0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aba8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca90>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c2b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c630>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c518>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c390>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cb00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c320>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029112815856933594  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029117584228515625  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10550451278686523
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009256839752197266  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8714810609817505
loading full batch data spends  0.002355337142944336
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.457069396972656e-05
step  0
else: feat size  torch.Size([1351, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 105, 4: 107, 5: 84, 6: 59, 7: 34, 8: 23, 9: 8, 10: 65}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676cf8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676358>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56763c8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56767f0>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676828>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645390>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e80>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645898>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e48>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([65, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645358>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cc0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459b0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645860>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645080>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ba8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645dd8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038630>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675898>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385009f518>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038d30>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5664ef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038630>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028908252716064453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028913021087646484  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10453581809997559
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8570414781570435
loading full batch data spends  0.002366304397583008
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.314018249511719e-05
step  0
else: feat size  torch.Size([1366, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 104, 4: 107, 5: 87, 6: 60, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c550>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7b8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c908>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c390>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cef0>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c518>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c358>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7f0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c588>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cda0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645550>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645eb8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56458d0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645828>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645588>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f28>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56451d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ef0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645208>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455c0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a20>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02917957305908203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029184341430664062  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10338497161865234
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00928640365600586  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8670706748962402
loading full batch data spends  0.002374887466430664
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.314018249511719e-05
step  0
else: feat size  torch.Size([1363, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 104, 4: 110, 5: 85, 6: 58, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c8d0>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cef0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c320>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c518>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c9b0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7b8>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ae10>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c390>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7b8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a470>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cb00>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c630>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c5f8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7b8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c5c0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e80>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645eb8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456a0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645588>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645390>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56451d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029146194458007812  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029150962829589844  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1056509017944336
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8976643085479736
loading full batch data spends  0.004258632659912109
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.838539123535156e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 105, 4: 110, 5: 83, 6: 59, 7: 33, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c860>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0b8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c908>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c978>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a4a8>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e564b550>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aba8>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b00>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649eb8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aba8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ef28>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a908>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ef98>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ef28>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c9b0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cef0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c9e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c588>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cda0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c780>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c978>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c3c8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c400>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c5f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028964519500732422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028969287872314453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11364221572875977
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8721721172332764
loading full batch data spends  0.0032379627227783203
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.458427429199219e-05
step  0
else: feat size  torch.Size([1365, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 102, 4: 109, 5: 85, 6: 60, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645358>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645668>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645550>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459b0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645dd8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645630>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645588>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645208>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645da0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5670c50>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649eb8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ec88>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b00>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56699e8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a780>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56786d8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5670c50>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5670080>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a470>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef60>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c080>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029071331024169922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029076099395751953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11614418029785156
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8676910400390625
loading full batch data spends  0.0058023929595947266
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   8.177757263183594e-05
step  0
else: feat size  torch.Size([1351, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 106, 4: 107, 5: 80, 6: 60, 7: 33, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f60>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a90>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f28>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676828>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([80, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c18>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455c0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459b0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645550>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56450f0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ef0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645780>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645630>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f28>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c88>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56665f8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566e828>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef60>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5670c50>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649eb8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5670080>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02898120880126953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028985977172851562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11420965194702148
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009203433990478516  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.855716586112976
loading full batch data spends  0.002378702163696289
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.337860107421875e-05
step  0
else: feat size  torch.Size([1373, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 102, 4: 111, 5: 82, 6: 60, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ce10>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c940>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aef0>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c3c8>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c668>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ab70>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c940>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a1d0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6d8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c668>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645278>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645860>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645828>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456d8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ba8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ac8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645080>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645978>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645390>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02917003631591797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0291748046875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10685610771179199
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8692280054092407
loading full batch data spends  0.005321025848388672
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.030632019042969e-05
step  0
else: feat size  torch.Size([1371, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 94, 3: 102, 4: 109, 5: 86, 6: 61, 7: 33, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c780>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7f0>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c9e8>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c2b0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c320>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cb00>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0f0>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c940>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c080>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c400>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c3c8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e7b8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ec88>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e550>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ea58>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef60>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ecc0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645860>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e10>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645828>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645eb8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e80>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645400>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029190540313720703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029195308685302734  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10842394828796387
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009313106536865234  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8651539087295532
loading full batch data spends  0.0023567676544189453
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.337860107421875e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 110, 5: 84, 6: 58, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676588>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f28>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676128>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676438>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56492e8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5670080>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef60>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e7b8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a240>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e080>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a438>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ab70>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6a0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003add8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c2b0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca90>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c518>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c978>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c780>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c390>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c5c0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c588>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56763c8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029044628143310547  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029049396514892578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1166529655456543
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8557757139205933
loading full batch data spends  0.0032629966735839844
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.38690185546875e-05
step  0
else: feat size  torch.Size([1348, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 104, 4: 108, 5: 85, 6: 61, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459b0>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56451d0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e10>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ef0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645278>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452e8>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645978>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645da0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b00>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679588>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56735f8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a4a8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038f28>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566e828>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038630>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003add8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038f28>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676cf8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a1d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003add8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ef98>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676cf8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676128>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca90>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029048919677734375  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029053688049316406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11121320724487305
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009190559387207031  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8644698858261108
loading full batch data spends  0.002465486526489258
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.125999450683594e-05
step  0
else: feat size  torch.Size([1370, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 108, 5: 86, 6: 59, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e320>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e2e8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e0b8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e080>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b70>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f98>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56451d0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b00>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645278>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cf8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645908>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645828>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d68>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645978>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f60>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645358>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679780>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679400>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a438>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56763c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a940>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679400>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029132843017578125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029137611389160156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11211848258972168
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8742847442626953
loading full batch data spends  0.004361629486083984
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.124641418457031e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 103, 4: 107, 5: 85, 6: 60, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7f0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0f0>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ce10>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c9e8>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cef0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c908>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56492e8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cda0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c588>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649f98>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c8d0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645208>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645860>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ba8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c50>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b38>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645780>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c88>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645080>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56450f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029071331024169922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029076099395751953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11291909217834473
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009294509887695312  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8924176692962646
loading full batch data spends  0.002847909927368164
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.458427429199219e-05
step  0
else: feat size  torch.Size([1343, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 103, 4: 108, 5: 83, 6: 60, 7: 35, 8: 22, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cf60>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c390>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c588>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cef0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ce10>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c358>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c898>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c8d0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566acc0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7f0>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca90>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a4a8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a240>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ac18>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566acf8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a240>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645208>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c50>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645358>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cc0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456d8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645dd8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a20>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028884410858154297  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028889179229736328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1111454963684082
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8705828189849854
loading full batch data spends  0.00237274169921875
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.314018249511719e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 109, 5: 85, 6: 59, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679278>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e2e8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679a90>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679588>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566acc0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5669b70>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5678940>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a4a8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649c88>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ac18>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56786d8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56763c8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a90>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cb00>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cda0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c518>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cf60>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c390>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cef0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c940>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e2e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c978>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c400>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e080>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904653549194336  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905130386352539  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10901594161987305
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009235858917236328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8602848052978516
loading full batch data spends  0.003236532211303711
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.3392181396484375e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 108, 5: 85, 6: 58, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ef0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645278>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ba8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645630>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645eb8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c88>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456a0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a9b0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a208>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566acf8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036048>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c518>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566acc0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c9e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c588>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a9b0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c780>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca20>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a780>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c390>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cda0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566acc0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029018878936767578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02902364730834961  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11277985572814941
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8886942863464355
loading full batch data spends  0.007831811904907227
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.9114227294921875e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 104, 4: 107, 5: 84, 6: 59, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649a58>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679780>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649f98>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649eb8>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649cf8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649c88>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645400>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f28>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645080>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645898>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ef0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cf8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c88>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645828>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455f8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456a0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566acf8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5678240>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036048>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c518>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5669b70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56697b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029139041900634766  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029143810272216797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11736416816711426
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009294509887695312  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8671462535858154
loading full batch data spends  0.00574040412902832
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.605552673339844e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 94, 3: 103, 4: 110, 5: 86, 6: 60, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675898>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef28>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ab70>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567eef0>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6d8>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649a58>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56492e8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6a0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649f60>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a208>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d68>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645978>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c18>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f28>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645780>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645400>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f60>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645da0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a20>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645278>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56451d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645390>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029006481170654297  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029011249542236328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11292505264282227
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8597922325134277
loading full batch data spends  0.00467228889465332
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.863739013671875e-05
step  0
else: feat size  torch.Size([1356, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 109, 5: 84, 6: 59, 7: 33, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e080>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c400>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c518>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7b8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0b8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c668>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c8d0>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ce10>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c550>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c588>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c5f8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cf60>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c9e8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c9b0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c390>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7f0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f28>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e80>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f98>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645978>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cc0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645780>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029064655303955078  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02906942367553711  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11730337142944336
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00923013687133789  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8591595888137817
loading full batch data spends  0.004429340362548828
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.936622619628906e-05
step  0
else: feat size  torch.Size([1363, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 108, 5: 85, 6: 59, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676588>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a58>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f28>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676390>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679400>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038d30>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c8d0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0f0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ce10>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c898>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7f0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c780>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649f60>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7f0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649c88>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cf60>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56786d8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649a58>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cf60>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a438>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649f98>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5678240>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003add8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56492e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029051780700683594  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029056549072265625  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11494278907775879
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8845051527023315
loading full batch data spends  0.004355669021606445
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.124641418457031e-05
step  0
else: feat size  torch.Size([1375, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 109, 5: 85, 6: 59, 7: 33, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459b0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56451d0>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a20>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ba8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645dd8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b38>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645be0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645048>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56786d8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a470>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038b38>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f28>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649f98>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5664ef0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038d30>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649c88>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ea58>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e320>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676390>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e0b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e7f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56492e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02912139892578125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02912616729736328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11176776885986328
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009331703186035156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.862673282623291
loading full batch data spends  0.0023622512817382812
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.5762786865234375e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 104, 4: 107, 5: 87, 6: 58, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c9b0>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c550>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c5f8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c588>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c320>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ac8>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a20>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645da0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455f8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c88>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b00>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645278>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645358>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d68>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645be0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5664ef0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5678240>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679588>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e550>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e080>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02901744842529297  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029022216796875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11107325553894043
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8431980609893799
loading full batch data spends  0.003266572952270508
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.315376281738281e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 110, 5: 84, 6: 60, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f38500381d0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6a0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036c18>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566acf8>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036a20>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036c18>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ae10>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f38500366a0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a780>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a4a8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b38>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452b0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56451d0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e80>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645048>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56450f0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645fd0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645390>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645438>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e48>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f60>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645630>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645828>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029086589813232422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029091358184814453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10483813285827637
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009273052215576172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9030653238296509
loading full batch data spends  0.002381563186645508
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.337860107421875e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 106, 4: 111, 5: 83, 6: 58, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566acc0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0f0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c080>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c860>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c5c0>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c9b0>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c400>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c390>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cef0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7b8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c630>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c668>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cf60>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c9e8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0b8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a20>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452b0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ef0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645048>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56458d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ac8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645da0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645fd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645390>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028997421264648438  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02900218963623047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10473775863647461
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8380482196807861
loading full batch data spends  0.004308938980102539
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.7670135498046875e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 106, 5: 86, 6: 59, 7: 33, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aba8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6d8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ab70>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a1d0>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038630>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ef98>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566acc0>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c588>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c400>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c5f8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cef0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b00>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56697b8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0f0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5669b70>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c860>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56763c8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676128>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c978>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ae10>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6a0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028992176055908203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028996944427490234  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11185216903686523
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009235858917236328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8343334197998047
loading full batch data spends  0.002463102340698242
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.457069396972656e-05
step  0
else: feat size  torch.Size([1353, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 106, 4: 108, 5: 84, 6: 58, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645390>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c18>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b38>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645978>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452e8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cc0>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645048>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645358>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645080>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675f98>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5669b70>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5670080>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675f98>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f60>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56697b8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ab70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676128>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675898>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b00>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56763c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676cf8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644ba8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675da0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675898>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029007911682128906  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029012680053710938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10441088676452637
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.862371802330017
loading full batch data spends  0.0023641586303710938
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.552436828613281e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 103, 4: 108, 5: 84, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679588>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679400>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679278>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679780>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56458d0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455f8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645978>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cf8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b38>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ba8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645630>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645860>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645898>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cc0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56450f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ab70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a208>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56767f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6d8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f28>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ab70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038278>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029121875762939453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029126644134521484  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10935735702514648
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009288787841796875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8457083702087402
loading full batch data spends  0.0032460689544677734
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.38690185546875e-05
step  0
else: feat size  torch.Size([1355, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 103, 4: 109, 5: 83, 6: 58, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef28>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f38500367b8>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566acf8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ec88>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e588>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a9b0>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566afd0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566af98>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ae10>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ac88>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645eb8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b00>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e80>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d68>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56458d0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645400>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e10>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645208>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f98>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456a0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02896881103515625  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02897357940673828  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10546708106994629
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8620365858078003
loading full batch data spends  0.004469394683837891
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.291534423828125e-05
step  0
else: feat size  torch.Size([1346, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 110, 5: 82, 6: 61, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036048>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036a20>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f38500366a0>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036c18>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c978>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca90>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c668>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c940>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c630>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c400>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c9b0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7f0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c898>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c9e8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c2b0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c5c0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c320>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645080>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645be0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e80>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a20>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645438>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028947830200195312  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028952598571777344  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10513973236083984
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00917673110961914  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8570257425308228
loading full batch data spends  0.003948688507080078
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.696846008300781e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 109, 5: 84, 6: 59, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cc0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ef0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a438>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645048>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f38500367b8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644ba8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56782b0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f38500366a0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f38500381d0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5670c50>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56453c8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645be0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452b0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645780>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645588>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645eb8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645748>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455c0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a438>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455c0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6d8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029085159301757812  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029089927673339844  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11755514144897461
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.849485993385315
loading full batch data spends  0.0044994354248046875
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.389617919921875e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 109, 5: 84, 6: 58, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e588>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567eef0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56763c8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676588>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ec88>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676358>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a58>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e7f0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c400>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cb00>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566afd0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385009f940>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56786d8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566afd0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ab70>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56786d8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679a58>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6a0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566afd0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676828>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ab70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e2e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a940>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ab70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676358>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029039859771728516  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029044628143310547  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10787725448608398
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009241104125976562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8451435565948486
loading full batch data spends  0.004456281661987305
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.365776062011719e-05
step  0
else: feat size  torch.Size([1374, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 107, 5: 85, 6: 59, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f28>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e320>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e550>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e80>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567eef0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e7b8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645dd8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645630>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef28>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645978>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645208>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e80>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c50>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c9b0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cb00>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5664ef0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5670080>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56763c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649eb8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676828>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a940>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56767f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029170513153076172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029175281524658203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1174919605255127
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.835537075996399
loading full batch data spends  0.0046234130859375
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.863739013671875e-05
step  0
else: feat size  torch.Size([1370, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 108, 5: 84, 6: 60, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645550>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e10>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b00>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cf8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645358>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56453c8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645080>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56458d0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cc0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56451d0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455f8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645da0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645dd8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d68>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645908>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456a0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645630>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645978>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645fd0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029120445251464844  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029125213623046875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10877299308776855
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009305000305175781  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.819179892539978
loading full batch data spends  0.003374814987182617
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.198883056640625e-05
step  0
else: feat size  torch.Size([1356, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 109, 5: 84, 6: 60, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a940>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aba8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ae10>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a470>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645358>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b70>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452b0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645550>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645748>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645710>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cc0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a20>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645438>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ef0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456d8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645da0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645390>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56458d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f28>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456a0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645630>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645208>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904510498046875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904987335205078  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12911510467529297
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8377020359039307
loading full batch data spends  0.0053560733795166016
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.461143493652344e-05
step  0
else: feat size  torch.Size([1370, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 110, 5: 82, 6: 59, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56451d0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679278>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679588>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645828>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a940>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56665f8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038b00>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a470>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f28>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aba8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649eb8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ea58>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e7f0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645550>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645eb8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645358>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645080>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56453c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cf8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645dd8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0291290283203125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02913379669189453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.13045454025268555
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009305000305175781  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8409349918365479
loading full batch data spends  0.005039691925048828
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.340576171875e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 104, 4: 109, 5: 84, 6: 60, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a908>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003add8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a908>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679550>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679be0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ae10>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679630>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c8d0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cf60>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0f0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649eb8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e564b550>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56799e8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036e80>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679278>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385009f518>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56697b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56799e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649cf8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679be0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f28>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645eb8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e10>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029063701629638672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029068470001220703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.13057231903076172
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8099792003631592
loading full batch data spends  0.0078122615814208984
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   8.225440979003906e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 106, 4: 109, 5: 84, 6: 59, 7: 35, 8: 21, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a9b0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ae10>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a940>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a4a8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aef0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6a0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566af98>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aba8>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ae10>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e588>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ecc0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef60>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a908>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e0b8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566af98>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e320>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ecc0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cef0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385009f940>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5678940>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679be0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385009f940>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679588>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5669b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029094219207763672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029098987579345703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12189316749572754
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009273052215576172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.824856162071228
loading full batch data spends  0.004446268081665039
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.031990051269531e-05
step  0
else: feat size  torch.Size([1361, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 104, 4: 108, 5: 85, 6: 61, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645550>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aba8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452b0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a908>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f28>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56458d0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ae10>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645898>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e2e8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645588>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e7b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e588>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cc0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef28>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e0b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ecc0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c940>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029084205627441406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029088973999023438  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11912989616394043
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.839473843574524
loading full batch data spends  0.003635406494140625
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.030632019042969e-05
step  0
else: feat size  torch.Size([1363, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 107, 5: 85, 6: 59, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459b0>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a58>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645550>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c50>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e80>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645400>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645828>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645780>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645fd0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f60>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455f8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645be0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b00>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cf8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645390>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a20>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003add8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6d8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645710>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02906513214111328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029069900512695312  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12160682678222656
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009267807006835938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8296301364898682
loading full batch data spends  0.0044286251068115234
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.008148193359375e-05
step  0
else: feat size  torch.Size([1361, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 110, 5: 81, 6: 61, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e080>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e588>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ea58>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e550>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566acf8>
func(nbatch).neighbor  torch.Size([81, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649eb8>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f38500367b8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ae10>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679a58>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6d8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455c0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645dd8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645278>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a58>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ef0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645da0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456d8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645400>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c50>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f28>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645208>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645588>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904033660888672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904510498046875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12220883369445801
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.81411874294281
loading full batch data spends  0.00612640380859375
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.817413330078125e-05
step  0
else: feat size  torch.Size([1371, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 108, 5: 83, 6: 59, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679a90>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56799e8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef60>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679278>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56799e8>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e2e8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e7b8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef28>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567eef0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e550>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5670c50>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675f98>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679550>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675da0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679be0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679a58>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036550>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649cf8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ec88>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e2e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679a58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567eef0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ea58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e080>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02910137176513672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02910614013671875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11956524848937988
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009310245513916016  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7956920862197876
loading full batch data spends  0.004791736602783203
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.890296936035156e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 106, 4: 109, 5: 84, 6: 57, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452e8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f60>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645358>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e48>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cf8>
func(nbatch).neighbor  torch.Size([57, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56451d0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645780>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645fd0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645860>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645be0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e10>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645208>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645780>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452b0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c5c0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675da0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5670080>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f38500367b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675da0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ec88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036e80>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02908468246459961  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02908945083618164  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11839747428894043
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8080382347106934
loading full batch data spends  0.002838134765625
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.482269287109375e-05
step  0
else: feat size  torch.Size([1353, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 94, 3: 103, 4: 110, 5: 84, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645668>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c50>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456a0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645278>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c18>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e48>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b00>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56453c8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56450f0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645080>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645fd0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ba8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456d8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645dd8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645208>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f60>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e10>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029041290283203125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029046058654785156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11479568481445312
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009214401245117188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8060901165008545
loading full batch data spends  0.0031757354736328125
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.57763671875e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 108, 5: 84, 6: 60, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a208>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aba8>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645828>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645eb8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a58>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b00>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56453c8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645898>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645400>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645780>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645080>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452b0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456d8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645710>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645588>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cc0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645be0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f60>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038b38>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038d30>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cc0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038630>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02902698516845703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029031753540039062  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1144874095916748
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7820093631744385
loading full batch data spends  0.004475593566894531
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.3392181396484375e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 98, 3: 105, 4: 106, 5: 85, 6: 59, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679400>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038630>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679588>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679630>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a240>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649f98>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f38500367b8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a240>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5654518>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a208>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645630>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645048>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645fd0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56453c8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459b0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f98>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a58>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645358>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029063701629638672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029068470001220703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1161644458770752
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7946707010269165
loading full batch data spends  0.002361297607421875
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.314018249511719e-05
step  0
else: feat size  torch.Size([1349, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 102, 4: 107, 5: 83, 6: 60, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038b00>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649c88>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679550>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038d30>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038278>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679278>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679550>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679400>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56799e8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7f0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e2e8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e564b550>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5678240>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e2e8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f38500381d0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5654518>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ea58>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e2e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679a90>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038d30>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56735f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038b00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038d30>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56799e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679780>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02895832061767578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028963088989257812  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11707615852355957
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.813125729560852
loading full batch data spends  0.003575563430786133
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.2928924560546875e-05
step  0
else: feat size  torch.Size([1363, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 101, 4: 109, 5: 83, 6: 61, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456d8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a58>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ac88>
func(nbatch).neighbor  torch.Size([101, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452e8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a588>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566acc0>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456d8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56492e8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a9b0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649ef0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649eb8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649ef0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a4a8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566afd0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566af98>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ae10>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c550>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a908>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5678240>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038d30>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676828>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676cf8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038b38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679278>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02910900115966797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02911376953125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1150355339050293
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009267807006835938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.798643946647644
loading full batch data spends  0.003248453140258789
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.458427429199219e-05
step  0
else: feat size  torch.Size([1363, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 94, 3: 106, 4: 107, 5: 86, 6: 61, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645fd0>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645da0>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645438>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645390>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456a0>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c50>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452b0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56458d0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f28>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645630>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b00>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a780>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d68>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a588>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b00>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566af98>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a58>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a4a8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a780>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d68>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c898>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029107093811035156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029111862182617188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11599326133728027
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7819856405258179
loading full batch data spends  0.004257917404174805
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.1484832763671875e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 110, 5: 80, 6: 59, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e2e8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ea58>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ec88>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e550>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645da0>
func(nbatch).neighbor  torch.Size([80, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645dd8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645898>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459b0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645780>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a20>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f60>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f98>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452b0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ac8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645eb8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645710>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645358>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c18>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c50>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a58>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cf8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645588>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029047489166259766  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029052257537841797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12006974220275879
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009246349334716797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7792059183120728
loading full batch data spends  0.005757808685302734
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.700920104980469e-05
step  0
else: feat size  torch.Size([1360, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 108, 5: 84, 6: 60, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567eef0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e80>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ecc0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e0b8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679588>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56786d8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038b00>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676828>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038b38>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679780>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e10>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645390>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645908>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645400>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452e8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ba8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645438>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f60>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645fd0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f98>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ac8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905750274658203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029062271118164062  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11878585815429688
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7854853868484497
loading full batch data spends  0.004447221755981445
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.936622619628906e-05
step  0
else: feat size  torch.Size([1350, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 105, 4: 109, 5: 83, 6: 59, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a240>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ac88>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ecc0>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ea58>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ec88>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e2e8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef60>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef28>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cf60>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0f0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56665f8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e10>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645dd8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a20>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645080>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645da0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ba8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645908>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f60>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ba8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028958797454833984  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028963565826416016  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11841726303100586
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009198188781738281  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9036431312561035
loading full batch data spends  0.002954721450805664
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.553794860839844e-05
step  0
else: feat size  torch.Size([1346, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 106, 5: 86, 6: 59, 7: 34, 8: 21, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676358>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676438>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a940>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676588>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a90>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a9b0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aef0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ae10>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a9b0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6d8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([627, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566acf8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a438>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aba8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566afd0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a208>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0b8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ce10>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ef98>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385009f940>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675828>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038b38>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5670c50>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038f28>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675f98>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028906822204589844  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028911590576171875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11550450325012207
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8604501485824585
loading full batch data spends  0.004484653472900391
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.410743713378906e-05
step  0
else: feat size  torch.Size([1363, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 109, 5: 85, 6: 60, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456d8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b70>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645080>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645048>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645630>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56451d0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ac8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645438>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ae10>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a780>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645da0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a940>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a438>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6d8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566acf8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a1d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a940>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ae10>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907276153564453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029077529907226562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11834025382995605
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009267807006835938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7617641687393188
loading full batch data spends  0.0026214122772216797
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.458427429199219e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 105, 4: 110, 5: 86, 6: 58, 7: 33, 8: 21, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56458d0>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645550>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645630>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645080>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645208>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e80>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56451d0>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645668>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e10>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f28>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645780>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645908>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d68>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ac8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6a0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645be0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ab70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a908>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676cf8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a208>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a58>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02910757064819336  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02911233901977539  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11921834945678711
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8145958185195923
loading full batch data spends  0.005190849304199219
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.935264587402344e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 106, 4: 109, 5: 85, 6: 57, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452b0>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456d8>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644ba8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5670c50>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036a20>
func(nbatch).neighbor  torch.Size([57, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6a0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676358>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56786d8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a438>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f385003add8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a940>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ab70>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676390>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003add8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a908>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645860>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645630>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645550>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c50>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e80>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0291290283203125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02913379669189453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11792969703674316
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009288787841796875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8235524892807007
loading full batch data spends  0.004438638687133789
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.0558319091796875e-05
step  0
else: feat size  torch.Size([1355, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 106, 4: 108, 5: 84, 6: 58, 7: 35, 8: 21, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f98>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645be0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d68>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cc0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645da0>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b38>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c780>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c390>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c550>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676588>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5670080>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675828>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676358>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036a20>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a1d0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56735f8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e550>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a208>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676390>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f38500366a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003add8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a588>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566af98>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ecc0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028987407684326172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028992176055908203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1191403865814209
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.852778673171997
loading full batch data spends  0.006290435791015625
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.437301635742188e-05
step  0
else: feat size  torch.Size([1363, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 108, 5: 83, 6: 60, 7: 34, 8: 21, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456d8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b00>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d68>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b38>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f98>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645be0>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cc0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ef0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459b0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f28>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b38>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ac8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645908>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cc0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d68>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c3c8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ef28>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56735f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566e828>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649ef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5669b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029050827026367188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905559539794922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11924409866333008
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009267807006835938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8353850841522217
loading full batch data spends  0.004449129104614258
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.9604644775390625e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 106, 5: 86, 6: 59, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b70>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56453c8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455c0>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455f8>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645080>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645780>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c50>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e10>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452e8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645da0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645400>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645278>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b38>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56450f0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645390>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456d8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e48>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cc0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d68>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f28>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c940>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029117584228515625  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029122352600097656  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12287354469299316
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8272892236709595
loading full batch data spends  0.0057256221771240234
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.316734313964844e-05
step  0
else: feat size  torch.Size([1366, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 104, 4: 107, 5: 85, 6: 59, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef60>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ecc0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e550>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e320>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455f8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ef0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56458d0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a58>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c50>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c88>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645400>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645438>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645048>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c18>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645da0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645278>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456d8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645780>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645748>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645390>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029139995574951172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029144763946533203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11725544929504395
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00928354263305664  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8061816692352295
loading full batch data spends  0.004455089569091797
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.0558319091796875e-05
step  0
else: feat size  torch.Size([1356, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 106, 5: 85, 6: 59, 7: 35, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6a0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ab70>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a438>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6d8>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679be0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038630>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef28>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef60>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5664a58>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e7b8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b38>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e10>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c50>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645828>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56451d0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b70>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e80>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cf8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645080>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56453c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455c0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56450f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f98>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029066085815429688  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907085418701172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12190699577331543
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8087146282196045
loading full batch data spends  0.0062103271484375
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.8160552978515625e-05
step  0
else: feat size  torch.Size([1356, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 109, 5: 84, 6: 60, 7: 33, 8: 21, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566acf8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a240>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aef0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a588>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a240>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6d8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a1d0>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003add8>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a208>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a470>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56697b8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038d30>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e2e8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038630>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b00>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ecc0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644ba8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566acf8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56699e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b38>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6d8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aef0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566acf8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a940>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ae10>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028980255126953125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028985023498535156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12084436416625977
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00923013687133789  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7599844932556152
loading full batch data spends  0.0032334327697753906
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.506111145019531e-05
step  0
else: feat size  torch.Size([1363, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 106, 4: 109, 5: 84, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679550>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679a90>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ae10>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679400>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56799e8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679be0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676128>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676cf8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676438>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676588>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a90>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f60>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a58>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649eb8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a90>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56767f0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca20>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c550>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56699e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385009f518>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56786d8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ef98>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038278>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56697b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ef28>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029132366180419922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029137134552001953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11583709716796875
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.764980435371399
loading full batch data spends  0.003252744674682617
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.4345855712890625e-05
step  0
else: feat size  torch.Size([1360, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 103, 4: 109, 5: 86, 6: 60, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645710>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455f8>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645550>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645048>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cf8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b00>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645898>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645be0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645eb8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cc0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452b0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645fd0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f60>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645fd0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676828>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f98>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645748>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676438>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645fd0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676390>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ce10>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c550>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029073238372802734  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029078006744384766  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11046218872070312
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009251594543457031  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7671842575073242
loading full batch data spends  0.004526853561401367
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.151199340820312e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 110, 5: 85, 6: 60, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676358>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6a0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5669b70>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455f8>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645048>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645668>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645400>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452e8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645898>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455c0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645be0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645780>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645828>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645eb8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f98>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645080>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e48>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b00>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645fd0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645dd8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645358>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02906036376953125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02906513214111328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11384391784667969
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7908985614776611
loading full batch data spends  0.007094860076904297
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.935264587402344e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 110, 5: 84, 6: 60, 7: 34, 8: 21, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e320>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ecc0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e7b8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef60>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5670c50>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f38500367b8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5669b70>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a588>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a208>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5669b70>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c88>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56453c8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645438>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cf8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645400>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645898>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ef0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645be0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645780>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645828>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645eb8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f98>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02898693084716797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02899169921875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1076045036315918
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7923051118850708
loading full batch data spends  0.005362749099731445
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.078315734863281e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 103, 4: 107, 5: 86, 6: 59, 7: 33, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038630>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038278>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ecc0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038d30>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038278>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef28>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ea58>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e320>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e550>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c668>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56699e8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5670080>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038d30>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5670c50>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56492e8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56699e8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f60>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ecc0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e7b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038630>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567eef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e550>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ec88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e320>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ecc0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029078960418701172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029083728790283203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11528587341308594
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7979187965393066
loading full batch data spends  0.003715991973876953
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.2928924560546875e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 103, 4: 110, 5: 87, 6: 58, 7: 33, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645860>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e10>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455c0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452e8>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675f98>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645898>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e10>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675da0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a780>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456a0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f60>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645550>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456d8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e10>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c898>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c668>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56699e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56786d8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038d30>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5669b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567eef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5670c50>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038f28>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029062747955322266  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029067516326904297  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10977458953857422
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009235858917236328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7239232063293457
loading full batch data spends  0.003917217254638672
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.91278076171875e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 94, 3: 105, 4: 110, 5: 83, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645278>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c88>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f98>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645588>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645048>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f28>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645208>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ac8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b00>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645be0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f60>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56450f0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456a0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645080>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645780>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645898>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c18>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645550>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645630>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c5c0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02912759780883789  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029132366180419922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11408686637878418
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7548983097076416
loading full batch data spends  0.007611513137817383
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.887580871582031e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 108, 5: 83, 6: 61, 7: 33, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455f8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56450f0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645668>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645898>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645630>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cc0>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645550>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456d8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645fd0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645400>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c18>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676588>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676390>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c18>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452b0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56763c8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e7f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef60>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e080>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ec88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e588>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ae10>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567eef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ac18>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028998851776123047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029003620147705078  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10998988151550293
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7922511100769043
loading full batch data spends  0.0050432682037353516
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.0067901611328125e-05
step  0
else: feat size  torch.Size([1374, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 101, 4: 108, 5: 85, 6: 60, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a438>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645fd0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ab70>
func(nbatch).neighbor  torch.Size([101, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003add8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385009f940>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b00>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676828>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676128>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676cf8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e550>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679400>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036550>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e80>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645780>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b38>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e48>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c50>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56458d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645278>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645358>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645dd8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56450f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0292205810546875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02922534942626953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11482381820678711
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8050177097320557
loading full batch data spends  0.005334138870239258
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.937980651855469e-05
step  0
else: feat size  torch.Size([1362, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 102, 4: 107, 5: 85, 6: 61, 7: 34, 8: 21, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cc0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645be0>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a208>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6a0>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645be0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c18>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ab70>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a940>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca20>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c550>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675898>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a940>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f38500367b8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385009f940>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038d30>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385009f358>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036a20>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6a0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aef0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e588>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003add8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aba8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a208>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6a0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029015064239501953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029019832611083984  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11339831352233887
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009262561798095703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.773151159286499
loading full batch data spends  0.005120754241943359
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.340576171875e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 109, 5: 87, 6: 60, 7: 34, 8: 21, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645dd8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645048>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f60>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459b0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a90>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cc0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459b0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676358>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645048>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676cf8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56763c8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a58>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676128>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c8d0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c080>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c550>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f38500367b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038d30>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56735f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036a20>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385009f940>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904510498046875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904987335205078  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11420083045959473
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7868196964263916
loading full batch data spends  0.006230592727661133
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.936622619628906e-05
step  0
else: feat size  torch.Size([1360, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 110, 5: 85, 6: 60, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645358>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645fd0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455f8>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645438>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645828>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645908>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452e8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645588>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c50>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f98>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459b0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a58>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e10>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676cf8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56767f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a58>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676828>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56763c8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676390>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f28>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a58>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029110431671142578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02911520004272461  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1161959171295166
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009251594543457031  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7985734939575195
loading full batch data spends  0.003936767578125
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.1021575927734375e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 109, 5: 85, 6: 61, 7: 35, 8: 23, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676358>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aef0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675898>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c88>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455f8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645be0>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56453c8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56450f0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ac8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c18>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645908>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645dd8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459b0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f98>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ef0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cc0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645390>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455c0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e48>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d68>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a58>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645780>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56458d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029035568237304688  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904033660888672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10812926292419434
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7711066007614136
loading full batch data spends  0.004957675933837891
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.054473876953125e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 102, 4: 109, 5: 83, 6: 59, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e7b8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567eef0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e7f0>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645da0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ef28>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385009f940>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675898>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385009f518>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649f98>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56697b8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aef0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a438>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645358>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645fd0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645048>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a20>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56453c8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456a0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ac8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645be0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645dd8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029010295867919922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029015064239501953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10791158676147461
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.778610110282898
loading full batch data spends  0.005401611328125
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.4836273193359375e-05
step  0
else: feat size  torch.Size([1361, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 107, 5: 83, 6: 59, 7: 35, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e2e8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e080>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef28>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ecc0>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e7b8>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e588>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ea58>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c2b0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c630>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c898>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5664a58>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036550>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5670c50>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ae10>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649f98>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038b38>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e7f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ec88>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038b00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e2e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e0b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e564b550>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ae10>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a1d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029073238372802734  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029078006744384766  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11531352996826172
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.748354434967041
loading full batch data spends  0.007354736328125
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   8.0108642578125e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 109, 5: 85, 6: 60, 7: 33, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645dd8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566acc0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a9b0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645668>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a940>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56451d0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6a0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645780>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645080>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566af98>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645780>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca90>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385009f940>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5664ef0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56697b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e564b550>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038b38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5670c50>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5670080>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029006481170654297  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029011249542236328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11199259757995605
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009246349334716797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7376090288162231
loading full batch data spends  0.004946470260620117
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.4836273193359375e-05
step  0
else: feat size  torch.Size([1360, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 108, 5: 84, 6: 59, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452b0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645550>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e80>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645630>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c50>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645358>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645fd0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b38>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645400>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c88>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645390>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645be0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645588>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a58>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645748>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455c0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56451d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d68>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c940>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02906322479248047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0290679931640625  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11141633987426758
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7674914598464966
loading full batch data spends  0.004132747650146484
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.961822509765625e-05
step  0
else: feat size  torch.Size([1356, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 109, 5: 83, 6: 61, 7: 34, 8: 21, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036550>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f38500367b8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f38500366a0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036c18>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c50>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455f8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645828>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b38>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645048>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645400>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645be0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645860>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645dd8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cf8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645390>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645588>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455c0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645fd0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645278>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645748>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645208>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d68>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029045581817626953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029050350189208984  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10834813117980957
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00923013687133789  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7935088872909546
loading full batch data spends  0.004383087158203125
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.078315734863281e-05
step  0
else: feat size  torch.Size([1346, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 108, 5: 85, 6: 59, 7: 35, 8: 22, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ac18>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566acc0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a9b0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a780>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566e828>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038b38>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56786d8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036a20>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a1d0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56767f0>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456a0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452b0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b38>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56453c8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e10>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455f8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c18>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c50>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645358>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56450f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645630>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645898>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02890157699584961  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02890634536743164  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10947823524475098
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7455285787582397
loading full batch data spends  0.0064525604248046875
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.412101745605469e-05
step  0
else: feat size  torch.Size([1369, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 105, 4: 108, 5: 82, 6: 60, 7: 35, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679a90>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679550>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a588>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679be0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679550>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566afd0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a780>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ac88>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ae10>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a940>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56786d8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5670080>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679400>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56786d8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e564b550>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56699e8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56735f8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679400>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a4a8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a588>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679278>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ac88>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679588>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679278>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a588>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029142379760742188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02914714813232422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11375784873962402
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009299755096435547  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7323819398880005
loading full batch data spends  0.0058345794677734375
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.843971252441406e-05
step  0
else: feat size  torch.Size([1361, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 108, 5: 84, 6: 60, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455c0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645668>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645278>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645390>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645438>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645fd0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645630>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cf8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645630>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ac8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452e8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b70>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c5f8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c898>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e564b550>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5678240>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5670080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ac88>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675f98>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a9b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ac88>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907276153564453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029077529907226562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11304569244384766
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7879247665405273
loading full batch data spends  0.004658222198486328
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.935264587402344e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 106, 4: 110, 5: 82, 6: 59, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c88>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645be0>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cc0>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645550>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b38>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645080>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645780>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645898>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645748>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645860>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ba8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f28>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ac8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f98>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456d8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e48>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e10>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c898>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029063701629638672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029068470001220703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11111664772033691
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7493373155593872
loading full batch data spends  0.004210233688354492
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.1021575927734375e-05
step  0
else: feat size  torch.Size([1347, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 109, 5: 86, 6: 61, 7: 35, 8: 23, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038d30>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038278>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645dd8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c50>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cf8>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a58>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645710>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645400>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645358>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b00>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([634, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f28>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f98>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e10>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459b0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e48>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452e8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645fd0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452b0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aba8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a208>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ae10>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a1d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02903461456298828  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029039382934570312  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10938191413879395
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7521737813949585
loading full batch data spends  0.0062944889068603516
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.435943603515625e-05
step  0
else: feat size  torch.Size([1362, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 98, 3: 104, 4: 109, 5: 85, 6: 60, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645550>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f60>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645208>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56451d0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5670c50>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567eef0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385009f518>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6a0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a90>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649a58>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a208>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676438>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676cf8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56450f0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645828>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56458d0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645908>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645dd8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cf8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56451d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a58>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645400>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645358>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029099464416503906  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029104232788085938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11451435089111328
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009262561798095703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7534266710281372
loading full batch data spends  0.005267143249511719
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.9591064453125e-05
step  0
else: feat size  torch.Size([1371, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 104, 4: 109, 5: 82, 6: 60, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675f98>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645550>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a20>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645da0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e10>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c88>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cc0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c080>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a208>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6a0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef28>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a208>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038d30>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a908>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef60>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385009f518>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ab70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56458d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56453c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56450f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c50>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645588>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645080>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029181957244873047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029186725616455078  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11340045928955078
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7493926286697388
loading full batch data spends  0.004517078399658203
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.365776062011719e-05
step  0
else: feat size  torch.Size([1353, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 103, 4: 110, 5: 85, 6: 60, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b70>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cc0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ac8>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645eb8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e10>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b70>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676828>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645780>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645390>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645fd0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a20>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645438>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e10>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c080>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385009f940>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038d30>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675828>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385009f358>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56697b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56735f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567eef0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029058456420898438  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02906322479248047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12281203269958496
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009214401245117188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.710985779762268
loading full batch data spends  0.005842447280883789
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.700920104980469e-05
step  0
else: feat size  torch.Size([1347, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 94, 3: 104, 4: 110, 5: 83, 6: 58, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645080>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e80>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645588>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cf8>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56451d0>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645dd8>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b00>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645048>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645908>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c18>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([627, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456d8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645898>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645fd0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455f8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645780>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645208>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645390>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ac8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a20>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645438>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56458d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456a0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c780>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028913497924804688  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02891826629638672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11355924606323242
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.719451904296875
loading full batch data spends  0.005676746368408203
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.0067901611328125e-05
step  0
else: feat size  torch.Size([1345, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 109, 5: 83, 6: 60, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456a0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644ba8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b00>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f60>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645eb8>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a780>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a58>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a588>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a940>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e10>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ac18>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566acc0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f38500381d0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a58>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a9b0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a4a8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676828>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a588>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676cf8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676438>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ab70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a780>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003add8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676390>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028950214385986328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02895498275756836  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11044001579284668
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009171485900878906  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7160433530807495
loading full batch data spends  0.004496097564697266
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.0558319091796875e-05
step  0
else: feat size  torch.Size([1366, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 107, 5: 86, 6: 59, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036e80>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459b0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036048>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036550>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679400>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b38>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566afd0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038278>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ae10>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038278>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f385009f518>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e564b550>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e588>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675f98>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675da0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385009f940>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c88>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455c0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645be0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645dd8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645978>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f98>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56451d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645588>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02918386459350586  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02918863296508789  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11412882804870605
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7648605108261108
loading full batch data spends  0.005620241165161133
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.887580871582031e-05
step  0
else: feat size  torch.Size([1351, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 109, 5: 85, 6: 59, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c18>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645da0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036048>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b00>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f38500367b8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036c18>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56450f0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c630>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c898>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56799e8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003add8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f38500381d0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a438>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5664ef0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56782b0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385009f518>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ef28>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675828>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef28>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036a20>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036c18>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ac88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036048>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675f98>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0290069580078125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02901172637939453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11402678489685059
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009203433990478516  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.742407202720642
loading full batch data spends  0.004200458526611328
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.698204040527344e-05
step  0
else: feat size  torch.Size([1346, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 103, 4: 107, 5: 86, 6: 61, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f98>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567eef0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ea58>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56451d0>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ec88>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56458d0>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455f8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef60>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679a58>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645630>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645278>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d68>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452e8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ac8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c3c8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c320>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c898>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e564b550>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5670c50>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f38500367b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56782b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56786d8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ac88>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029072284698486328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907705307006836  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11108064651489258
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.753835916519165
loading full batch data spends  0.006699323654174805
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.318092346191406e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 105, 5: 87, 6: 61, 7: 35, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645dd8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e80>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459b0>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a58>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645668>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cf8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645748>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f28>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455f8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ef0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b70>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645908>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56451d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456a0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645390>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645278>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645630>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56458d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645eb8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02919769287109375  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02920246124267578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11530947685241699
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009297370910644531  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7877546548843384
loading full batch data spends  0.004327535629272461
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.555152893066406e-05
step  0
else: feat size  torch.Size([1341, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 105, 4: 107, 5: 83, 6: 59, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675828>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385009f940>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675f98>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452b0>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c18>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e48>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645828>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f28>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456d8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645860>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c50>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56458d0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645390>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ac8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645278>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456a0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645358>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645048>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a90>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56450f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676358>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028953075408935547  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028957843780517578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10818076133728027
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7298333644866943
loading full batch data spends  0.005015850067138672
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.982948303222656e-05
step  0
else: feat size  torch.Size([1348, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 102, 4: 110, 5: 85, 6: 61, 7: 33, 8: 23, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e080>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e320>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e550>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e0b8>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385009f940>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56492e8>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f38500367b8>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a58>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675828>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038f28>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e80>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ba8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452b0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645080>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e48>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a58>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d68>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645828>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456d8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c50>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02895832061767578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028963088989257812  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11138629913330078
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009187698364257812  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7129191160202026
loading full batch data spends  0.004418373107910156
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.1021575927734375e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 103, 4: 110, 5: 86, 6: 59, 7: 34, 8: 20, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566e828>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e588>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e550>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e080>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ec88>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e7b8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef60>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7f0>
func(nbatch).neighbor  torch.Size([20, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c358>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7b8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675898>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676438>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679a90>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675898>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ef98>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5670c50>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679278>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e2e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef28>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675da0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e7f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e0b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567eef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef60>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02900409698486328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029008865356445312  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11003780364990234
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7710075378417969
loading full batch data spends  0.0055773258209228516
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.221366882324219e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 110, 5: 83, 6: 59, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56453c8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645208>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645898>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645978>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645748>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645dd8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645be0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a940>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56450f0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645fd0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645908>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456a0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c978>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5670080>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56492e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679630>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649a58>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675828>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675898>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029024600982666016  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029029369354248047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11003708839416504
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009235858917236328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6954725980758667
loading full batch data spends  0.004143476486206055
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.2928924560546875e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 109, 5: 84, 6: 59, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cf8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645780>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645eb8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645550>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645278>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a58>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645400>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f28>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cc0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455c0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456d8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a20>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645588>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f98>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645080>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e80>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645978>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645748>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645be0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456a0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d68>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c940>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029016494750976562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029021263122558594  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11077117919921875
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7180238962173462
loading full batch data spends  0.0045223236083984375
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.103515625e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 105, 4: 109, 5: 84, 6: 60, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679a90>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56799e8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ac8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645208>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455c0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456d8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645eb8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645358>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f28>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([634, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e80>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645dd8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456a0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645be0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56450f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f98>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645978>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a9b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c18>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566acf8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029145240783691406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029150009155273438  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11333823204040527
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009288787841796875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7858716249465942
loading full batch data spends  0.005835771560668945
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.939338684082031e-05
step  0
else: feat size  torch.Size([1371, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 104, 4: 107, 5: 87, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef28>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e7b8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ecc0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ec88>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56799e8>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038b38>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a908>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5670c50>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ef98>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566afd0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c50>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645400>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456d8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ef0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645eb8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645828>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645048>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cf8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645da0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645710>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645780>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a20>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56453c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645668>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029184341430664062  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029189109802246094  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1121377944946289
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.718423843383789
loading full batch data spends  0.0061914920806884766
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.982948303222656e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 109, 5: 86, 6: 59, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566afd0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ac18>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e2e8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036c18>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e550>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e320>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef28>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e0b8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ecc0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567eef0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aba8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a908>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036c18>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aba8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676828>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566e828>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a470>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e320>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e588>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ef28>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e7f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a4a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a240>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e2e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029079437255859375  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029084205627441406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11147952079772949
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009235858917236328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7445638179779053
loading full batch data spends  0.00452423095703125
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.67572021484375e-05
step  0
else: feat size  torch.Size([1365, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 109, 5: 84, 6: 59, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645278>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452b0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f28>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645048>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456a0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56450f0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b38>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645630>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645978>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56453c8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645668>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56453c8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a588>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566af98>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e48>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c630>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c518>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e564b550>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5654518>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef28>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aba8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036a20>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef28>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029091358184814453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029096126556396484  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11562275886535645
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.729515790939331
loading full batch data spends  0.005017757415771484
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.9114227294921875e-05
step  0
else: feat size  torch.Size([1355, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 109, 5: 83, 6: 60, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645208>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645438>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645550>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452e8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645dd8>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645588>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cf8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c50>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459b0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a58>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f98>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56458d0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b38>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ef0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645668>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56451d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e48>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f60>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f28>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c518>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029023170471191406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029027938842773438  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10937714576721191
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009224891662597656  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7572896480560303
loading full batch data spends  0.004880189895629883
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.555152893066406e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 106, 4: 109, 5: 83, 6: 61, 7: 33, 8: 20, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cf8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645898>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645828>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645550>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ba8>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ac8>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645978>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645588>
func(nbatch).neighbor  torch.Size([20, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f98>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459b0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645da0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c88>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645908>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645630>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452b0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645668>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f28>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56458d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a9b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f60>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a588>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566acc0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e80>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a940>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029026031494140625  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029030799865722656  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1106867790222168
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7543764114379883
loading full batch data spends  0.00576019287109375
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.078315734863281e-05
step  0
else: feat size  torch.Size([1366, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 105, 4: 108, 5: 85, 6: 60, 7: 35, 8: 21, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645208>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c18>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676128>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e320>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56697b8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649f98>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566acf8>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676128>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aef0>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a240>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566afd0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645080>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d68>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459b0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645780>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645400>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ba8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645898>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645dd8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ac8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645978>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645588>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f98>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029049396514892578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905416488647461  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11555004119873047
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00928354263305664  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7293108701705933
loading full batch data spends  0.005629539489746094
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.389617919921875e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 103, 4: 107, 5: 85, 6: 59, 7: 34, 8: 22, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649eb8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036a20>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f38500366a0>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ef28>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036e80>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f38500367b8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56492e8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036c18>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c358>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566afd0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a240>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ef98>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566afd0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649c88>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56665f8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003add8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566acc0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566afd0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649a58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e550>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649ef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036c18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e0b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028948307037353516  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028953075408935547  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1071462631225586
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.705375075340271
loading full batch data spends  0.005725860595703125
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.4836273193359375e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 106, 4: 111, 5: 82, 6: 59, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645978>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a9b0>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ae10>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b38>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ac18>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645eb8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566af98>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645588>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a90>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f60>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676438>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676358>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676588>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676128>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f60>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c320>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c358>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ef98>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5678240>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e2e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56665f8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003add8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f38500366a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036a20>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029129505157470703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029134273529052734  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11198878288269043
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009273052215576172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7145692110061646
loading full batch data spends  0.0045015811920166016
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.581710815429688e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 109, 5: 84, 6: 59, 7: 35, 8: 21, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645978>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56786d8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5678940>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ecc0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56786d8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ec88>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036550>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036c18>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566afd0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ecc0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456a0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566af98>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a58>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a9b0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f28>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566af98>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a780>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676128>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ae10>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676358>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a9b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c518>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c9e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029074668884277344  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029079437255859375  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10814118385314941
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.708229660987854
loading full batch data spends  0.006583213806152344
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.435943603515625e-05
step  0
else: feat size  torch.Size([1365, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 108, 5: 84, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649f60>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649a58>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649f98>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649eb8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e48>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456d8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645668>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645da0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f60>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f28>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645fd0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645048>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645208>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ef0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459b0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645390>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645710>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e80>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56450f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645978>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a20>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455f8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029104232788085938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02910900115966797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10972785949707031
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009278297424316406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.671944499015808
loading full batch data spends  0.004010438919067383
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.245208740234375e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 104, 4: 108, 5: 86, 6: 58, 7: 35, 8: 22, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a1d0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a470>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ab70>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6d8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649f60>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566e828>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56699e8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649f98>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a780>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649c88>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b38>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649cf8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b00>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645da0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645668>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a58>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56451d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456d8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645fd0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645048>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645208>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ef0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02898263931274414  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028987407684326172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1087191104888916
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7180274724960327
loading full batch data spends  0.0048711299896240234
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.054473876953125e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 110, 5: 83, 6: 59, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567eef0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e0b8>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ab70>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a940>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6a0>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aef0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aba8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6d8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c7f0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c518>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b38>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675828>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ef28>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566e828>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56451d0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f28>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645668>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f60>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e10>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e48>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029065608978271484  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029070377349853516  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1081230640411377
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7198641300201416
loading full batch data spends  0.005136251449584961
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.0067901611328125e-05
step  0
else: feat size  torch.Size([1356, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 106, 4: 108, 5: 82, 6: 58, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566acc0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e7f0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649f98>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ec88>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649cf8>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649f98>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e0b8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e588>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56767f0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f60>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676cf8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676828>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676438>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56763c8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676588>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002ca90>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c9b0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c518>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ef28>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b00>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ac18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5675828>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a588>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ac18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5679400>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0290679931640625  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907276153564453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11394858360290527
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6970757246017456
loading full batch data spends  0.0061762332916259766
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.841255187988281e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 107, 5: 84, 6: 59, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456d8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645fd0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ba8>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645668>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645048>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b70>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452e8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56451d0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645630>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649eb8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645898>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649a58>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56492e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56763c8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f28>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645828>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56767f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676438>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676128>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676358>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905416488647461  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905893325805664  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11523246765136719
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009241104125976562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6862412691116333
loading full batch data spends  0.0044405460357666016
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.054473876953125e-05
step  0
else: feat size  torch.Size([1362, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 104, 4: 108, 5: 84, 6: 59, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645390>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cc0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455c0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e10>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645908>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c50>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645278>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645eb8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645748>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b00>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e48>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645080>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f60>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645668>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645208>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56451d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c88>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645400>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d68>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038278>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f38500381d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029020309448242188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02902507781982422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10756564140319824
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.683583378791809
loading full batch data spends  0.005518913269042969
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.030632019042969e-05
step  0
else: feat size  torch.Size([1379, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 102, 4: 106, 5: 87, 6: 59, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a90>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676588>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f28>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f60>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5669b70>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b38>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ecc0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038f28>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5670080>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038278>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645390>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56458d0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c50>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645630>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645278>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e10>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a20>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645550>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b38>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645fd0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ba8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029236793518066406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029241561889648438  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11357641220092773
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009356021881103516  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7275569438934326
loading full batch data spends  0.004259347915649414
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.650520324707031e-05
step  0
else: feat size  torch.Size([1360, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 94, 3: 105, 4: 108, 5: 86, 6: 60, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5678240>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676390>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f28>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a90>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676128>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676438>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676828>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c0f0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c518>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c9b0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56665f8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a940>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b00>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385009f518>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a90>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56697b8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f28>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676358>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56767f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676828>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f28>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676438>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ecc0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676cf8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a58>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029178142547607422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029182910919189453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1151123046875
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7331420183181763
loading full batch data spends  0.006957530975341797
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.4836273193359375e-05
step  0
else: feat size  torch.Size([1351, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 94, 3: 104, 4: 108, 5: 86, 6: 59, 7: 34, 8: 23, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645630>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f28>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645080>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b38>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b00>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645dd8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038f28>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645048>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645908>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645978>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56458d0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56763c8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645978>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a90>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455c0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038b38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c358>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5654518>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385009f518>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5664a58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567eef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e2e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028944015502929688  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02894878387451172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10883164405822754
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009203433990478516  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7212141752243042
loading full batch data spends  0.0042591094970703125
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.935264587402344e-05
step  0
else: feat size  torch.Size([1355, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 108, 5: 85, 6: 59, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cf8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645dd8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645748>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56451d0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456d8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56453c8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645da0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c88>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645eb8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56458d0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645c18>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f60>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038f28>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038b38>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038b00>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038b38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645630>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f28>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c898>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907276153564453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029077529907226562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10273861885070801
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7147749662399292
loading full batch data spends  0.003066539764404297
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.5299530029296875e-05
step  0
else: feat size  torch.Size([1344, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 108, 5: 85, 6: 59, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a908>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ab70>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b00>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f98>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645da0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645fd0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a20>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645828>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b38>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ef0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645240>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e10>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56458d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645eb8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455c0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645908>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645d30>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56450f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456a0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028969764709472656  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028974533081054688  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1062321662902832
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009166240692138672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7093427181243896
loading full batch data spends  0.00327301025390625
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.673004150390625e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 103, 4: 109, 5: 85, 6: 59, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676438>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56763c8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676358>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a58>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003add8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649eb8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566e828>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aba8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036a20>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038d30>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e7f0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ecc0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645be0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457f0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645668>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56451d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56457b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cf8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645080>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a20>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645828>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645b38>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02906942367553711  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907419204711914  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10738062858581543
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7050470113754272
loading full batch data spends  0.0033965110778808594
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.743171691894531e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 105, 4: 109, 5: 85, 6: 57, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e0b8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef28>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56767f0>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ea58>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567ef28>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a90>
func(nbatch).neighbor  torch.Size([57, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f60>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676588>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676cf8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f28>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56799e8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566a240>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5644b00>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036e80>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a90>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850038d30>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e564b550>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676cf8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f38500381d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566e828>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676f60>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676588>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645fd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456d8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028985023498535156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028989791870117188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10723590850830078
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6838546991348267
loading full batch data spends  0.003246307373046875
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.839897155761719e-05
step  0
else: feat size  torch.Size([1350, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 102, 4: 110, 5: 85, 6: 58, 7: 33, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56459e8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645e80>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649f60>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567eef0>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649a58>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e550>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e7f0>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56492e8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5649a58>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e567e320>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56453c8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a208>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a908>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6d8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6a0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003aba8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c2b0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c9b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f3850036a20>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5664a58>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385009f358>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5676a58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e564b550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e566ef98>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028937816619873047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028942584991455078  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10144281387329102
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.695791482925415
loading full batch data spends  0.003222227096557617
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.363059997558594e-05
step  0
else: feat size  torch.Size([1362, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 109, 5: 84, 6: 59, 7: 35, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645668>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645198>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56455c0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645cc0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56452e8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e56456d8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645908>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645080>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645358>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a58>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645f98>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645320>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645898>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6d8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645710>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645898>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a6a0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645a20>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645ba8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003ae10>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a940>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f37e5645898>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385003a908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002cda0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f385002c9b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029115676879882812  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029120445251464844  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10257554054260254
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009262561798095703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.699550986289978
Total (block generation + training)time/epoch 0.1287475335597992
pure train time/epoch 0.1142389178276062

num_input_list  [1342, 1367, 1347, 1359, 1348, 1366, 1368, 1366, 1349, 1361, 1357, 1358, 1365, 1368, 1384, 1357, 1358, 1357, 1369, 1358, 1364, 1348, 1358, 1350, 1348, 1364, 1361, 1358, 1368, 1373, 1357, 1371, 1355, 1347, 1351, 1354, 1369, 1368, 1381, 1358, 1358, 1366, 1358, 1360, 1365, 1366, 1350, 1365, 1367, 1347, 1356, 1349, 1374, 1357, 1359, 1365, 1371, 1352, 1359, 1354, 1367, 1356, 1369, 1352, 1364, 1352, 1362, 1359, 1358, 1361, 1346, 1362, 1370, 1364, 1368, 1359, 1359, 1361, 1351, 1366, 1363, 1354, 1365, 1351, 1373, 1371, 1352, 1348, 1370, 1368, 1343, 1357, 1352, 1368, 1354, 1356, 1363, 1375, 1352, 1364, 1352, 1357, 1353, 1367, 1355, 1346, 1364, 1358, 1374, 1370, 1356, 1370, 1367, 1364, 1361, 1363, 1361, 1371, 1368, 1353, 1352, 1354, 1349, 1363, 1363, 1359, 1360, 1350, 1346, 1363, 1368, 1367, 1355, 1363, 1367, 1366, 1356, 1356, 1363, 1360, 1357, 1354, 1364, 1357, 1367, 1354, 1374, 1362, 1357, 1360, 1352, 1354, 1361, 1359, 1360, 1356, 1346, 1369, 1361, 1354, 1347, 1362, 1371, 1353, 1347, 1345, 1366, 1351, 1346, 1368, 1341, 1348, 1359, 1357, 1357, 1367, 1371, 1357, 1365, 1355, 1358, 1366, 1359, 1364, 1359, 1365, 1357, 1354, 1356, 1358, 1362, 1379, 1360, 1351, 1355, 1344, 1357, 1354, 1350, 1362]
