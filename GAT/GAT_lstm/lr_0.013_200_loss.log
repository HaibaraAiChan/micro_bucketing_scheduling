main start at this time 1695409479.5437355
  NumNodes: 2708
  NumEdges: 10556
  NumFeats: 1433
  NumClasses: 7
  NumTrainingSamples: 140
  NumValidationSamples: 500
  NumTestSamples: 1000
Done loading data from cached files.
success----------------------------------------
140
500
2068
# Nodes: 2708
# Edges: 10556
# Train: 140
# Val: 500
# Test: 2068
# Classes: 7

in feats:  1433
loading full batch data spends  0.0027277469635009766
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.147125244140625e-05
step  0
else: feat size  torch.Size([1342, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 105, 4: 109, 5: 83, 6: 58, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920340240>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920340278>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203406d8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920340940>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920340ba8>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920340e10>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b330b8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b33320>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b33588>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b337f0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b37048>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b37080>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b374e0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b37748>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b379b0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b37c18>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b37e80>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b39128>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b39390>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b395f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b39860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b39ac8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b39d30>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b39f98>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b240>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.552734375 GB
    Memory Allocated: 0.02727031707763672  GigaBytes
Max Memory Allocated: 0.027710914611816406  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.552734375 GB
    Memory Allocated: 0.02727508544921875  GigaBytes
Max Memory Allocated: 0.027710914611816406  GigaBytes

pure train time  0.5023517608642578
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.5625 GB
    Memory Allocated: 0.009155750274658203  GigaBytes
Max Memory Allocated: 0.027710914611816406  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9514586925506592
loading full batch data spends  0.0046749114990234375
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.176399230957031e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 98, 3: 102, 4: 108, 5: 86, 6: 59, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3bc88>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3bdd8>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b41128>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b41390>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b415f8>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920340e10>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920340be0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b395f8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8c88b372b0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f892036b898>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b41940>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b41978>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b41dd8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3e080>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3e2e8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3e550>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3e7b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3ea20>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3ec88>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3eef0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b56198>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b56400>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b56668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b568d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b56b38>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905416488647461  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905893325805664  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.11577963829040527
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009288787841796875  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9460163116455078
loading full batch data spends  0.0039293766021728516
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.435943603515625e-05
step  0
else: feat size  torch.Size([1347, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 109, 5: 85, 6: 57, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b51518>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b51550>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b519b0>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b51c18>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b51e80>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b64128>
func(nbatch).neighbor  torch.Size([57, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b64390>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b645f8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b64860>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b64ac8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5d208>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b41978>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b41b70>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b561d0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8923bef7b8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b51c18>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b64f28>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5d0b8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5d400>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5d668>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5d8d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5db38>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5dda0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f048>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f2b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028745651245117188  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02875041961669922  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.1241459846496582
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009182453155517578  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9487947225570679
loading full batch data spends  0.005926847457885742
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.653236389160156e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 111, 5: 83, 6: 59, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5fcf8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5fc50>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b66160>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b663c8>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b66630>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b66898>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b66b00>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b66d68>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b66fd0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b68278>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b68a90>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b68ac8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b68f28>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a1d0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a438>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a6a0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a908>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ab70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6add8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5d400>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5d080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5fc50>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b668d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b68b38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aef0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028865814208984375  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028870582580566406  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.12132787704467773
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009246349334716797  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9454364776611328
loading full batch data spends  0.004436492919921875
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.127357482910156e-05
step  0
else: feat size  torch.Size([1348, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 105, 4: 111, 5: 82, 6: 59, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5c4e0>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5c518>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5c978>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5cbe0>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5ce48>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b650f0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b65358>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b655c0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b65828>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b65a90>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d2e8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d320>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d780>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d9e8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6dc50>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6deb8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57160>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b573c8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57630>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57898>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57b00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57d68>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57fd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58278>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b584e0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02881908416748047  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0288238525390625  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.12123799324035645
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009187698364257812  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9449713230133057
loading full batch data spends  0.004119873046875
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.4836273193359375e-05
step  0
else: feat size  torch.Size([1366, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 103, 4: 107, 5: 85, 6: 60, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b65ef0>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b65908>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b56ef0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b585c0>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58710>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58ac8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58c50>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58e80>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305160>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203053c8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305ac8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305b00>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305f60>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5a208>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5a470>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5a6d8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5a940>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5aba8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5ae10>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b600b8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60320>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60588>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b607f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60a58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60cc0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02897787094116211  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02898263931274414  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.12636661529541016
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00928354263305664  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9439126253128052
loading full batch data spends  0.004976034164428711
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.173683166503906e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 104, 4: 111, 5: 85, 6: 59, 7: 33, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd6d8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd710>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fdb70>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fddd8>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58a20>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58e80>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5a710>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b607f0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b64d68>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fdeb8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302438>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302470>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203028d0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302b38>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302da0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300048>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002b0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300518>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300780>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203009e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300c50>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300eb8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307160>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203073c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307630>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904653549194336  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905130386352539  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.12231564521789551
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009294509887695312  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9467520713806152
loading full batch data spends  0.0037555694580078125
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.53131103515625e-05
step  0
else: feat size  torch.Size([1366, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 105, 4: 107, 5: 86, 6: 58, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57b38>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b66b38>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156a0>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315048>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315668>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315080>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315160>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154a8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315518>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58c88>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305b00>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302b38>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58eb8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203028d0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302438>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58c88>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300c50>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203024a8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300780>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203024e0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203024e0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028983116149902344  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028987884521484375  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.12424015998840332
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00928354263305664  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9413607120513916
loading full batch data spends  0.005782127380371094
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.963180541992188e-05
step  0
else: feat size  torch.Size([1349, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 108, 5: 85, 6: 60, 7: 34, 8: 21, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aef0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a940>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60668>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60da0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aba8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b605c0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60f28>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60b70>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315630>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315860>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203152b0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315080>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a90>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5aba8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b39860>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b56ef0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f892036b2b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302208>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302438>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02893972396850586  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02894449234008789  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.1219019889831543
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009294509887695312  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9338245391845703
loading full batch data spends  0.004217863082885742
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.555152893066406e-05
step  0
else: feat size  torch.Size([1361, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 108, 5: 85, 6: 57, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079e8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203071d0>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079b0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307710>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307c50>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074e0>
func(nbatch).neighbor  torch.Size([57, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307668>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203075f8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307be0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307860>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307160>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a90>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307470>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315710>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315860>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315668>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203158d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a20>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028944969177246094  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028949737548828125  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.12111330032348633
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009256839752197266  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.935567855834961
loading full batch data spends  0.0041234493255615234
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.459785461425781e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 105, 4: 106, 5: 85, 6: 58, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300550>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300780>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203009e8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f898>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300550>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300eb8>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315828>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315518>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315710>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315860>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315780>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a20>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315be0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315668>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203152e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ac8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315048>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156a0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028942108154296875  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028946876525878906  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.12424612045288086
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009294509887695312  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9313186407089233
loading full batch data spends  0.005538225173950195
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.173683166503906e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 103, 4: 107, 5: 85, 6: 61, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f60>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5a710>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203152b0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5aba8>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f518>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8923bef7f0>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300eb8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f7f0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5d668>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300c50>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002e8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300c88>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f7f0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300c50>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300ef0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300eb8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300fd0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300780>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315630>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315550>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02898550033569336  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02899026870727539  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.1220712661743164
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009241104125976562  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.934632420539856
loading full batch data spends  0.00445246696472168
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.269050598144531e-05
step  0
else: feat size  torch.Size([1365, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 104, 4: 110, 5: 84, 6: 60, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315d68>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315dd8>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cc0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315da0>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154a8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a90>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a20>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f28>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157b8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5a710>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d358>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300ef0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f518>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300eb8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300ef0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f390>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300a20>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300fd0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f358>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300c88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300fd0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ac88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd748>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302fd0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029027462005615234  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029032230377197266  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

pure train time  0.11997199058532715
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009294509887695312  GigaBytes
Max Memory Allocated: 0.02959728240966797  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9317750930786133
loading full batch data spends  0.003734111785888672
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.4836273193359375e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 102, 4: 109, 5: 84, 6: 60, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b680b8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a20>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60da0>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315048>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60c88>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b680b8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60da0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b68668>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d780>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60da0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d3c8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60c88>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300c50>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60da0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300518>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300080>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d390>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300fd0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5c710>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5aba8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b66d68>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302b38>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ada0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b240>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5d668>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029061317443847656  GigaBytes
Max Memory Allocated: 0.029604434967041016  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029066085815429688  GigaBytes
Max Memory Allocated: 0.029604434967041016  GigaBytes

pure train time  0.12224459648132324
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009294509887695312  GigaBytes
Max Memory Allocated: 0.029604434967041016  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9238401651382446
loading full batch data spends  0.005276203155517578
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.176399230957031e-05
step  0
else: feat size  torch.Size([1384, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 108, 5: 84, 6: 58, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203152b0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315d68>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ba8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a90>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e80>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b605c0>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159e8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60668>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60668>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157f0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d780>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60ac8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60f28>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6dc50>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300c88>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6def0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300ef0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d2e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300fd0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203007b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300c50>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300550>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029236316680908203  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029241085052490234  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12488412857055664
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.922232747077942
loading full batch data spends  0.004265308380126953
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.221366882324219e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 108, 5: 86, 6: 58, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300780>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300c50>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203009e8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300a20>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300fd0>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315d30>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203152e8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203153c8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315d68>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e10>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203152b0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315828>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315be0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f28>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ba8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029030323028564453  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029035091400146484  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11046671867370605
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009235858917236328  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9187498092651367
loading full batch data spends  0.0039501190185546875
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.602836608886719e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 94, 3: 103, 4: 109, 5: 86, 6: 59, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305b00>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305160>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203051d0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203024a8>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60b70>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b39860>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203009e8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ab70>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300c50>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300fd0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300780>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300550>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002b0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203007b8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203152e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cf8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315d30>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029059886932373047  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029064655303955078  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12484955787658691
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9260653257369995
loading full batch data spends  0.0054891109466552734
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.0067901611328125e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 109, 5: 83, 6: 59, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e48>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157b8>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302668>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159e8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203028d0>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315dd8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159e8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302668>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315240>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302080>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300a20>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5aba8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b68860>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300550>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58c88>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57b38>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57160>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203007b8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302b38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203007b8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203028d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300c88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302518>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029006004333496094  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029010772705078125  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12729454040527344
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009235858917236328  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9122880697250366
loading full batch data spends  0.0036885738372802734
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.435943603515625e-05
step  0
else: feat size  torch.Size([1369, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 102, 4: 108, 5: 85, 6: 60, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c88>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315be0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315048>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156a0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cf8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c50>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e10>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a20>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315748>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ef0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a90>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315d68>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f28>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150b8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154a8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315518>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b68860>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5aba8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b338d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5a710>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d7b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b680b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d3c8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907562255859375  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02908039093017578  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12302827835083008
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9267441034317017
loading full batch data spends  0.005467891693115234
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.412101745605469e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 108, 5: 84, 6: 58, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203152e8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c88>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203153c8>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315518>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315860>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e80>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cc0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b70>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a20>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315630>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b00>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315828>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203152b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e48>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f28>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156a0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02899026870727539  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028995037078857422  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12208247184753418
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009241104125976562  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8967258930206299
loading full batch data spends  0.0039577484130859375
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.1975250244140625e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 98, 3: 106, 4: 107, 5: 82, 6: 59, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203009e8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203007b8>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300550>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203078d0>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307748>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307710>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307978>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203075f8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307ac8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307400>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307160>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b00>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b70>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203073c8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307898>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079b0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307630>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cc0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315080>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203152e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c88>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905130386352539  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029056072235107422  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12071084976196289
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9215635061264038
loading full batch data spends  0.00397181510925293
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.078315734863281e-05
step  0
else: feat size  torch.Size([1348, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 111, 5: 83, 6: 60, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a90>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b70>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302fd0>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305160>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203007b8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d7b8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57d68>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203007b8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d390>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307748>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307c88>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307be0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074e0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079e8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203075f8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a58>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307860>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076d8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203073c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203071d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029033184051513672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029037952423095703  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12128138542175293
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009187698364257812  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9018404483795166
loading full batch data spends  0.004166603088378906
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.841255187988281e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 110, 5: 82, 6: 60, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a90>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ba8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315748>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315710>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315518>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315828>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315240>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300ef0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305668>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d3c8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300080>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d7b8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203009e8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305668>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6def0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300ef0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300550>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305160>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6def0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d390>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300fd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c50>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029013633728027344  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029018402099609375  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12608790397644043
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8945493698120117
loading full batch data spends  0.004769563674926758
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.4836273193359375e-05
step  0
else: feat size  torch.Size([1350, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 109, 5: 86, 6: 59, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154a8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315048>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315780>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315d68>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157b8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315fd0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315160>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ef0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074e0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076d8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307860>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307be0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a58>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203075f8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307198>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076a0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b048>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b33a90>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d2e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5d668>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f390>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d390>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b4a8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028991222381591797  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028995990753173828  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12224721908569336
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009198188781738281  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8913121223449707
loading full batch data spends  0.004068851470947266
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.459785461425781e-05
step  0
else: feat size  torch.Size([1348, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 103, 4: 110, 5: 86, 6: 59, 7: 33, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cc0>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315dd8>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150f0>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315518>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b70>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ba8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159e8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315208>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315160>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157b8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315fd0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307908>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307160>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307748>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076a0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074e0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076d8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02902507781982422  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02902984619140625  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12356829643249512
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8908843994140625
loading full batch data spends  0.005896329879760742
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.05718994140625e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 103, 4: 109, 5: 83, 6: 60, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a90>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a58>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315668>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150b8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e48>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203153c8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315048>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315860>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b70>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150f0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315208>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e80>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315fd0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315080>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a20>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f60>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f28>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ef0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029078960418701172  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029083728790283203  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12525415420532227
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009273052215576172  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.902953028678894
loading full batch data spends  0.0045108795166015625
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.461143493652344e-05
step  0
else: feat size  torch.Size([1361, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 102, 4: 108, 5: 85, 6: 60, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203051d0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305780>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307668>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203071d0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6da20>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5d8d0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300fd0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8923bef7f0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5c710>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b338d0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300fd0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002e8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307d68>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307ef0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307860>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203071d0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307c88>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307978>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315630>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a90>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315da0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315160>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029082298278808594  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029087066650390625  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12593913078308105
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.902074933052063
loading full batch data spends  0.004328250885009766
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.173683166503906e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 109, 5: 84, 6: 58, 7: 33, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60f28>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60f60>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60668>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b605c0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60a58>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315fd0>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315be0>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315860>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315d30>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([627, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002e8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57d68>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b4a8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57b38>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203051d0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300fd0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b605c0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60a58>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5d8d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60b70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305160>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307d68>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307ef0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028963088989257812  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028967857360839844  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12131047248840332
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009241104125976562  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8877332210540771
loading full batch data spends  0.0037953853607177734
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.841255187988281e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 103, 4: 111, 5: 83, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e48>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ac8>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315160>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a58>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315da0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f28>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315780>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315208>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e10>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315d30>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315748>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57b38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b4a8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b66d68>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57b38>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5d8d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203054a8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029140472412109375  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029145240783691406  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12292075157165527
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8848048448562622
loading full batch data spends  0.0053997039794921875
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.033348083496094e-05
step  0
else: feat size  torch.Size([1373, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 106, 5: 86, 6: 58, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203024a8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302518>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60c88>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60a58>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302b38>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60668>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60b70>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b605c0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315748>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150b8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315630>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cf8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315da0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ac8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154a8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315668>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315eb8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a20>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029159069061279297  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029163837432861328  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12366032600402832
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009321212768554688  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8918399810791016
loading full batch data spends  0.0039386749267578125
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.2928924560546875e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 102, 4: 110, 5: 84, 6: 61, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076d8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307be0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b00>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307400>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307390>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307710>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307c88>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307198>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307668>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a90>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307c50>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076a0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307470>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315240>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315048>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315be0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315630>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f98>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315748>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315da0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904653549194336  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905130386352539  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12408590316772461
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.902498483657837
loading full batch data spends  0.0057926177978515625
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.939338684082031e-05
step  0
else: feat size  torch.Size([1371, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 103, 4: 109, 5: 86, 6: 58, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203009e8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300eb8>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300550>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300ef0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8923c0ce48>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b33a90>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f390>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b4e0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f892036b780>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d3c8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074a8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307438>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307ef0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307d68>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307c50>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307710>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307908>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203071d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203078d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300c50>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307ac8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300fd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029149532318115234  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029154300689697266  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12392163276672363
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009310245513916016  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.892525315284729
loading full batch data spends  0.003864288330078125
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.221366882324219e-05
step  0
else: feat size  torch.Size([1355, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 105, 4: 107, 5: 83, 6: 59, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315da0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203152e8>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e80>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302b38>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315828>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e80>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302208>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e80>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203024e0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8923bef7f0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5a710>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002e8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5d668>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300fd0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b4e0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300080>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b470>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300c50>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b240>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302518>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203024a8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029017925262451172  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029022693634033203  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12273454666137695
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8804571628570557
loading full batch data spends  0.005409955978393555
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.772445678710938e-05
step  0
else: feat size  torch.Size([1347, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 106, 5: 84, 6: 60, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150f0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ba8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58c88>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150f0>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60b70>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57b38>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60f28>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60b70>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f518>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b64e80>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60668>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60b70>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307198>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203075f8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079b0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307710>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307d68>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f892036b780>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5aba8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203028d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b4e0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302208>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028928756713867188  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02893352508544922  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11910152435302734
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009182453155517578  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8940529823303223
loading full batch data spends  0.0055544376373291016
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.2928924560546875e-05
step  0
else: feat size  torch.Size([1351, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 100, 4: 110, 5: 85, 6: 61, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203152e8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203152b0>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315710>
func(nbatch).neighbor  torch.Size([100, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315668>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a90>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f98>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315748>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e10>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315208>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b605c0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315828>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60dd8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f28>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60f28>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60668>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307438>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a90>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029088497161865234  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029093265533447266  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.11715388298034668
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8864551782608032
loading full batch data spends  0.005892753601074219
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   8.0108642578125e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 102, 4: 110, 5: 84, 6: 60, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c50>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315358>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315048>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e48>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203153c8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315518>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315be0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a20>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203158d0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315240>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b00>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e80>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f60>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315080>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02899789810180664  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029002666473388672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12337517738342285
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8637863397598267
loading full batch data spends  0.004010438919067383
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.245208740234375e-05
step  0
else: feat size  torch.Size([1369, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 100, 4: 108, 5: 85, 6: 60, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302b70>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203028d0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302b38>
func(nbatch).neighbor  torch.Size([100, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302da0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60da0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f518>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5c710>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f892036b780>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5a710>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b68b70>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315d30>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315358>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315518>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e48>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150b8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cf8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a90>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315630>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203152b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e10>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f28>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02913522720336914  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029139995574951172  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12254023551940918
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9183402061462402
loading full batch data spends  0.004909038543701172
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.556510925292969e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 106, 4: 109, 5: 86, 6: 59, 7: 35, 8: 23, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b33a90>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57400>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57160>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154a8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f60>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315748>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315080>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157f0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f28>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ba8>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([634, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58e80>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f892036b780>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57160>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305b00>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b68668>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5a710>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57fd0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60dd8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60da0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b338d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203020b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302518>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b33a90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315668>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029129505157470703  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029134273529052734  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

pure train time  0.12440967559814453
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009294509887695312  GigaBytes
Max Memory Allocated: 0.029779434204101562  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8955649137496948
loading full batch data spends  0.004163980484008789
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.316734313964844e-05
step  0
else: feat size  torch.Size([1381, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 103, 4: 108, 5: 84, 6: 59, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302668>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302b38>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302da0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f60>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315748>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156a0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315be0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e80>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150f0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c50>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c88>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a58>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b66b38>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c50>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b66d68>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fde10>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58eb8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305160>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58e80>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f892036b780>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd0b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5d668>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029250144958496094  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029254913330078125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11456489562988281
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8735953569412231
loading full batch data spends  0.005834102630615234
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.772445678710938e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 109, 5: 85, 6: 60, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f8923bef7f0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203158d0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315668>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e48>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203152b0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b00>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315518>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315dd8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315d30>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315be0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315da0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156a0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cc0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f60>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203153c8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029085159301757812  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029089927673339844  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12512969970703125
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009241104125976562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8751384019851685
loading full batch data spends  0.004710674285888672
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.747245788574219e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 107, 5: 84, 6: 59, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60ac8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b240>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60a58>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b605c0>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57b38>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60a58>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ba8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315668>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203158d0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315550>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315da0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b00>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203152b0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315dd8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156a0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a20>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315be0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cc0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f60>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029003143310546875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029007911682128906  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12622594833374023
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8871523141860962
loading full batch data spends  0.0038182735443115234
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.14984130859375e-05
step  0
else: feat size  torch.Size([1366, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 110, 5: 85, 6: 60, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315630>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6deb8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d390>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6dc88>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b4a8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd128>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302080>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57fd0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300fd0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b470>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([636, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315668>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315208>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cf8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ac8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315828>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315748>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315160>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315da0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029211997985839844  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029216766357421875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1260383129119873
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00928640365600586  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8749895095825195
loading full batch data spends  0.005261421203613281
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.151199340820312e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 106, 4: 108, 5: 83, 6: 59, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ae80>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a908>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d780>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a978>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a940>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6deb8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a470>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d2e8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6da20>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b70>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd128>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57160>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5d8d0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b048>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ac88>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5c710>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f892036b780>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f892036b2b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a940>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6dc50>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a978>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a908>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ab38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d2e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905130386352539  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029056072235107422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12134146690368652
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8984102010726929
loading full batch data spends  0.005854368209838867
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   8.368492126464844e-05
step  0
else: feat size  torch.Size([1360, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 106, 4: 109, 5: 83, 6: 60, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f60>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c88>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e48>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c50>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e80>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315710>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60a58>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203158d0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315748>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315358>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079b0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307860>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b048>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57160>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6da20>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5c710>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd128>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6dc88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6dc50>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02908945083618164  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029094219207763672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12492680549621582
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009251594543457031  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9053131341934204
loading full batch data spends  0.004372358322143555
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   0.0001010894775390625
step  0
else: feat size  torch.Size([1365, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 94, 3: 103, 4: 107, 5: 87, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315630>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159e8>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315828>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e10>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ba8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b70>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315dd8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f98>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315be0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203158d0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ef0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156a0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315d30>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315358>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315710>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307400>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307630>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02912425994873047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0291290283203125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12480926513671875
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8627874851226807
loading full batch data spends  0.004459857940673828
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.078315734863281e-05
step  0
else: feat size  torch.Size([1366, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 103, 4: 109, 5: 85, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315da0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b70>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a90>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315240>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b00>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ba8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315630>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315d30>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315358>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315048>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315710>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203152b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60d68>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203152b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029132843017578125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029137611389160156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12093877792358398
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00928354263305664  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8484599590301514
loading full batch data spends  0.003897428512573242
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.53131103515625e-05
step  0
else: feat size  torch.Size([1350, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 104, 4: 110, 5: 86, 6: 57, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6def0>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60d68>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6dc88>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d358>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203028d0>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b048>
func(nbatch).neighbor  torch.Size([57, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302fd0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5c710>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159e8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315da0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150f0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315080>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315358>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315048>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315d30>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e80>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315518>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315748>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315208>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028969287872314453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028974056243896484  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12317872047424316
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9153555631637573
loading full batch data spends  0.0058171749114990234
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.867813110351562e-05
step  0
else: feat size  torch.Size([1365, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 110, 5: 83, 6: 60, 7: 35, 8: 21, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60668>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60b70>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6dc88>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60ac8>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60668>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6da20>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60da0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d390>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307748>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307160>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305b00>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8923c0ce48>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b33a90>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f390>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f892036b780>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b56c18>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57d68>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b048>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57fd0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f7f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d780>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6def0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8923bef7f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d390>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60ac8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029048442840576172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029053211212158203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12315225601196289
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009278297424316406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8828990459442139
loading full batch data spends  0.0042572021484375
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.269050598144531e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 106, 4: 109, 5: 82, 6: 60, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f28>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c88>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6deb8>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315748>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d358>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315518>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315358>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315518>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302fd0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302518>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315390>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ba8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cc0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079b0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a58>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074e0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8923c0ce48>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5aba8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5c710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f892036b780>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57d68>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029133319854736328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02913808822631836  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1205298900604248
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8739615678787231
loading full batch data spends  0.0037229061126708984
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.982948303222656e-05
step  0
else: feat size  torch.Size([1347, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 105, 4: 108, 5: 84, 6: 59, 7: 35, 8: 22, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315860>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315be0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b70>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f98>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cf8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315828>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315048>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315550>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e10>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a20>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ac8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f60>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ef0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157b8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315518>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ba8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315390>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e48>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028905868530273438  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02891063690185547  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12128782272338867
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009182453155517578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8485362529754639
loading full batch data spends  0.0048923492431640625
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.794929504394531e-05
step  0
else: feat size  torch.Size([1356, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 105, 4: 109, 5: 85, 6: 58, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ada0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aeb8>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ab38>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a908>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ac88>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076d8>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307400>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307748>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307710>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074e0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307630>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a90>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307be0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076a0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203075f8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307978>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307c88>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203073c8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307ef0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315be0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315630>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315240>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029036521911621094  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029041290283203125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11615252494812012
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8787366151809692
loading full batch data spends  0.0040590763092041016
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.364418029785156e-05
step  0
else: feat size  torch.Size([1349, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 109, 5: 84, 6: 60, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302080>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302fd0>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302b70>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f518>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b39860>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aeb8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f892036b780>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ada0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd128>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302dd8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302208>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302b70>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302080>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302518>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203024a8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c88>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315860>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203158d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315390>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315be0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315630>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029000282287597656  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029005050659179688  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12099814414978027
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009192943572998047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8893203735351562
loading full batch data spends  0.0038149356842041016
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.173683166503906e-05
step  0
else: feat size  torch.Size([1374, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 105, 4: 109, 5: 86, 6: 60, 7: 35, 8: 21, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002e8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ae48>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300080>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a940>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d3c8>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300550>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6deb8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307860>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307668>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a58>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f518>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b64e80>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f892036b2b0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203024e0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60f28>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302b70>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302080>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd0b8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302470>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300518>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302080>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302518>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300518>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6def0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029144763946533203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029149532318115234  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1128079891204834
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8641754388809204
loading full batch data spends  0.007199764251708984
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.2479248046875e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 108, 5: 84, 6: 60, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b70>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ef0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315860>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315eb8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315160>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f98>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315668>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f28>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315710>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315208>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a90>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b00>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f892036b780>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b519e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305780>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b64e80>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f892036b2b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60ac8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029017925262451172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029022693634033203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11257386207580566
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009235858917236328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8693915605545044
loading full batch data spends  0.004429340362548828
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.125999450683594e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 105, 4: 108, 5: 84, 6: 57, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cf8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315748>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315860>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315048>
func(nbatch).neighbor  torch.Size([57, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315630>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315550>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ac8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315240>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a58>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157b8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315668>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315358>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f98>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154a8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307d68>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029020309448242188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02902507781982422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11224222183227539
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8770636320114136
loading full batch data spends  0.004506349563598633
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.246566772460938e-05
step  0
else: feat size  torch.Size([1365, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 107, 5: 84, 6: 59, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60f60>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b605c0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60ac8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b60ef0>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307630>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b38>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307ac8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076d8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307d68>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307908>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076a0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a58>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307ef0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203071d0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b70>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307860>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203073c8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a20>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315390>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315748>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cc0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a20>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029108047485351562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029112815856933594  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12627553939819336
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009278297424316406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8799320459365845
loading full batch data spends  0.0045108795166015625
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.316734313964844e-05
step  0
else: feat size  torch.Size([1371, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 102, 4: 107, 5: 84, 6: 59, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b00>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315be0>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302470>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305b00>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd978>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a470>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b338d0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aeb8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58eb8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203024e0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302dd8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302da0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d7b8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203024e0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302668>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cf8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315240>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315748>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315eb8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203152b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cc0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315208>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029155254364013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029160022735595703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12488150596618652
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8656073808670044
loading full batch data spends  0.0075070858001708984
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.14984130859375e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 107, 5: 84, 6: 59, 7: 34, 8: 21, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ab38>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a940>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ac88>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aef0>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ab70>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076d8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203075f8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079e8>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307c88>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307390>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6dc50>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5c710>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58e80>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6da20>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203051d0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d7b8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b66b38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d780>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d7b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aef0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6def0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302b38>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ab70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a940>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028943538665771484  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028948307037353516  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11236357688903809
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009209156036376953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.871390700340271
loading full batch data spends  0.0041615962982177734
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.459785461425781e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 110, 5: 82, 6: 60, 7: 33, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315208>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203024a8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd0b8>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302b70>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302080>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fdb38>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302dd8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302080>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076d8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203071d0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307160>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307710>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307908>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307390>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307668>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b38>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203051d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5c710>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5aba8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203051d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d780>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f518>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b573c8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029082775115966797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029087543487548828  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11974310874938965
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.854500412940979
loading full batch data spends  0.004106760025024414
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.1975250244140625e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 108, 5: 86, 6: 61, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315748>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315080>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315358>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f98>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a90>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315eb8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157b8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315390>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([634, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cc0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154a8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315208>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074a8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307860>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307898>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b38>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203073c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076d8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203071d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029102325439453125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029107093811035156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.12374663352966309
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00922250747680664  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.84902822971344
loading full batch data spends  0.005072355270385742
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.699562072753906e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 107, 5: 87, 6: 60, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e80>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b70>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315208>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cf8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315518>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302da0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154a8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315828>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302470>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203028d0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a940>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302b38>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315828>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ae48>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302dd8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203024a8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ae10>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aeb8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ab70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029088497161865234  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029093265533447266  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1333622932434082
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8653653860092163
loading full batch data spends  0.00661158561706543
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.982948303222656e-05
step  0
else: feat size  torch.Size([1356, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 102, 4: 108, 5: 86, 6: 61, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300a20>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300c50>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002e8>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300fd0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d780>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b4e0>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203028d0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b66d68>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302fd0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302b70>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203158d0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315048>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a90>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157b8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315748>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cc0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a20>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c88>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e80>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029044151306152344  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029048919677734375  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11139822006225586
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00923013687133789  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8868255615234375
loading full batch data spends  0.003439664840698242
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.982948303222656e-05
step  0
else: feat size  torch.Size([1369, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 109, 5: 82, 6: 59, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300fd0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300780>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300a20>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203007b8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a90>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203073c8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307898>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307668>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203071d0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079b0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ab38>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302da0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300550>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b66d68>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300c88>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5d668>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6deb8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300780>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd978>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd160>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6deb8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203158d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029043197631835938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904796600341797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11101984977722168
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8749775886535645
loading full batch data spends  0.002971649169921875
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.172325134277344e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 109, 5: 85, 6: 59, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ba8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e48>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300ef0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002e8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300eb8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f98>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002b0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e48>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c50>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307908>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079b0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307978>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307710>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074e0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307668>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307898>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203075f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b56c18>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b573c8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ab38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b56c18>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302fd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d780>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a978>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904367446899414  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029048442840576172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11014723777770996
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009209156036376953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8252253532409668
loading full batch data spends  0.003906726837158203
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.1975250244140625e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 102, 4: 108, 5: 85, 6: 60, 7: 35, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315630>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e80>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315be0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157b8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150b8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150f0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154a8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f98>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315390>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307be0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307198>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307748>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203075f8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076d8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307978>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029140472412109375  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029145240783691406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10802006721496582
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.850312352180481
loading full batch data spends  0.005326032638549805
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.1975250244140625e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 107, 5: 84, 6: 60, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157f0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b00>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315748>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b70>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315048>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cf8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203009e8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150b8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203007b8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300a20>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300c88>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002e8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300780>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302b38>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300c50>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302080>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302470>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300ef0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305b00>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302dd8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300c50>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300ef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302fd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302470>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02902078628540039  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029025554656982422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10500907897949219
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009209156036376953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8574713468551636
loading full batch data spends  0.002217531204223633
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.218650817871094e-05
step  0
else: feat size  torch.Size([1362, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 111, 5: 84, 6: 60, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ac8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315eb8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f7f0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8923c0ce48>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002b0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305668>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300fd0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203054a8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302fd0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302dd8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b240>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8923bef7f0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b338d0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302fd0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5c710>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ba8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a58>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203158d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a20>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e80>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203153c8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905130386352539  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029056072235107422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10733222961425781
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8493865728378296
loading full batch data spends  0.0022270679473876953
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.266334533691406e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 108, 5: 84, 6: 59, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302080>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302518>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302908>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203075f8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307470>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079e8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a90>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074a8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076d8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307908>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b240>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b519e8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5aba8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57400>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5c710>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203051d0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300518>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b56c18>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b338d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300080>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203028d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305160>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302da0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300c88>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029073715209960938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907848358154297  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10493659973144531
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009246349334716797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.854857087135315
loading full batch data spends  0.0022318363189697266
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.218650817871094e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 107, 5: 84, 6: 59, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157b8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aba8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157b8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ab38>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ab70>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a908>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157b8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a58>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074a8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203071d0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b00>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203078d0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307470>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a90>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5aba8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8923bef7f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300780>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b56c18>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b33a90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b519e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b338d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904224395751953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029047012329101562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10589790344238281
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8559901714324951
loading full batch data spends  0.003416299819946289
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.029273986816406e-05
step  0
else: feat size  torch.Size([1361, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 105, 4: 110, 5: 83, 6: 59, 7: 35, 8: 22, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e80>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315be0>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ac8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a58>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203153c8>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315668>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203158d0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157f0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b70>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315048>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315080>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157b8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154a8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307630>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307748>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307d68>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02902078628540039  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029025554656982422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11007022857666016
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009256839752197266  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8627197742462158
loading full batch data spends  0.0029592514038085938
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.1484832763671875e-05
step  0
else: feat size  torch.Size([1346, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 98, 3: 104, 4: 107, 5: 83, 6: 61, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300c50>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300780>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203009e8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157f0>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315710>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e10>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315eb8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315080>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cc0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315d30>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315048>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315390>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e48>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315358>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c88>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315630>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203152b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028998851776123047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029003620147705078  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1053168773651123
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8462203741073608
loading full batch data spends  0.003000020980834961
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.1484832763671875e-05
step  0
else: feat size  torch.Size([1362, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 104, 4: 110, 5: 85, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a90>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307400>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307860>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f898>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b66d68>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5d8d0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58eb8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a908>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f7f0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203009e8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300780>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076d8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307400>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a90>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307630>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307668>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203075f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315240>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f60>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029133319854736328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02913808822631836  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10988450050354004
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009265422821044922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8534016609191895
loading full batch data spends  0.0038890838623046875
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.173683166503906e-05
step  0
else: feat size  torch.Size([1370, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 108, 5: 86, 6: 57, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315748>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315860>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315550>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e80>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f28>
func(nbatch).neighbor  torch.Size([57, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ac88>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a978>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e80>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c50>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58e80>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b4a8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6dc50>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b470>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5d8d0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58eb8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076d8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307160>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074e0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203078d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307be0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307c50>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307668>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029162883758544922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029167652130126953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10695052146911621
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8364518880844116
loading full batch data spends  0.003456592559814453
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.00543212890625e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 105, 4: 110, 5: 81, 6: 59, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cf8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315160>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b70>
func(nbatch).neighbor  torch.Size([81, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ba8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315358>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c88>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203153c8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315080>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a470>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315748>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aba8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ada0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315080>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6dc50>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b338d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307be0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6dc50>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307c50>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074e0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b38>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02903604507446289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029040813446044922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10896515846252441
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009273052215576172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8463873863220215
loading full batch data spends  0.0022208690643310547
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.24249267578125e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 110, 5: 83, 6: 60, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315710>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157f0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f60>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315080>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156a0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a58>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cf8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e80>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a20>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203158d0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c50>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315240>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315390>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ae80>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315160>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aeb8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ae48>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cc0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ab38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a940>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029095172882080078  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02909994125366211  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10710024833679199
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8179035186767578
loading full batch data spends  0.002227306365966797
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.2438507080078125e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 110, 5: 85, 6: 60, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ac88>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ada0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aef0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ae10>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a940>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ab38>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a908>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150b8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([634, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e48>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159e8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156a0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a58>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315eb8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f60>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c88>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02915191650390625  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02915668487548828  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10450315475463867
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009249210357666016  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8490524291992188
loading full batch data spends  0.0022308826446533203
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.218650817871094e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 105, 4: 108, 5: 82, 6: 60, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305160>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315668>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002e8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305780>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ada0>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5aba8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5a710>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aef0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a940>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ae48>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203158d0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd160>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8923c0ce48>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c50>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd160>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302b70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302dd8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58c88>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315eb8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307470>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307630>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307908>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029076576232910156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029081344604492188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10547280311584473
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8218178749084473
loading full batch data spends  0.004019737243652344
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.838539123535156e-05
step  0
else: feat size  torch.Size([1361, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 104, 4: 110, 5: 85, 6: 60, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307860>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074a8>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305780>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b573c8>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203054a8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305160>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b573c8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d780>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b573c8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305160>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([635, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58c88>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8923c0ce48>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b66d68>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aeb8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd0b8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ac88>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd160>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fde10>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aba8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074e0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ae80>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307630>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029112815856933594  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029117584228515625  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11323308944702148
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009256839752197266  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8400157690048218
loading full batch data spends  0.0032958984375
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.078315734863281e-05
step  0
else: feat size  torch.Size([1351, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 105, 4: 107, 5: 84, 6: 59, 7: 34, 8: 23, 9: 8, 10: 65}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cf8>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f60>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a58>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315be0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315668>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([65, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315080>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6dc50>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315390>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d3c8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6deb8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d2e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58eb8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b66d68>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a940>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58c88>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b56c18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ada0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ac88>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028908252716064453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028913021087646484  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10932135581970215
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8299342393875122
loading full batch data spends  0.0022270679473876953
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.218650817871094e-05
step  0
else: feat size  torch.Size([1366, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 104, 4: 107, 5: 87, 6: 60, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d3c8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6da20>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f98>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315710>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315518>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315160>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315630>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ac8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ba8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203153c8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315be0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c50>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315668>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ef0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203158d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a20>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02917957305908203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029184341430664062  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11283564567565918
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00928640365600586  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8136273622512817
loading full batch data spends  0.002956390380859375
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.076957702636719e-05
step  0
else: feat size  torch.Size([1363, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 104, 4: 110, 5: 85, 6: 58, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b39860>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd128>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6da20>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002e8>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6da20>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fde10>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300080>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6dc88>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002b0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300a20>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6dc50>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300fd0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315630>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a90>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315358>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315160>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203152b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315550>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ba8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203153c8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029146194458007812  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029150962829589844  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10717034339904785
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8452250957489014
loading full batch data spends  0.003138303756713867
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.147125244140625e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 105, 4: 110, 5: 83, 6: 59, 7: 33, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307400>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203073c8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307198>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fde10>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b39860>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fde10>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6deb8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203007b8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300fd0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b56c18>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6deb8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b56ef0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6dc50>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307d68>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a20>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074e0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079b0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a90>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307160>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307898>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307748>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028964519500732422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028969287872314453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10546517372131348
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8155646324157715
loading full batch data spends  0.0023512840270996094
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.029273986816406e-05
step  0
else: feat size  torch.Size([1365, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 102, 4: 109, 5: 85, 6: 60, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a58>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157f0>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150b8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e48>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315208>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315eb8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315048>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b56ef0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd128>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b33a90>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6def0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6deb8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f7f0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d390>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307668>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074e0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307908>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307d68>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307898>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029071331024169922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029076099395751953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11048650741577148
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7911913394927979
loading full batch data spends  0.003908872604370117
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.340576171875e-05
step  0
else: feat size  torch.Size([1351, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 106, 4: 107, 5: 80, 6: 60, 7: 33, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154a8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a58>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315550>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157f0>
func(nbatch).neighbor  torch.Size([80, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203152b0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315d30>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e10>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cf8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315860>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156a0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b00>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a908>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315208>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f898>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b56c18>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8923bef7f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b38>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a20>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02898120880126953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028985977172851562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10875511169433594
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009203433990478516  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7797319889068604
loading full batch data spends  0.003915071487426758
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.221366882324219e-05
step  0
else: feat size  torch.Size([1373, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 102, 4: 111, 5: 82, 6: 60, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b64e80>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203073c8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f98>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f28>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cc0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315630>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ba8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a20>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e10>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157f0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b70>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203152b0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315358>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cf8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315860>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ae10>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a58>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02917003631591797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0291748046875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10612297058105469
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8130627870559692
loading full batch data spends  0.003078937530517578
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.170967102050781e-05
step  0
else: feat size  torch.Size([1371, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 94, 3: 102, 4: 109, 5: 86, 6: 61, 7: 33, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307470>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b00>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300eb8>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002b0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203009e8>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300c50>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300780>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203007b8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150b8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315eb8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157b8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315748>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203153c8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cc0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f28>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315208>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a20>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315390>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315d30>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c88>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029190540313720703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029195308685302734  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10446763038635254
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009313106536865234  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7729450464248657
loading full batch data spends  0.0022149085998535156
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.24249267578125e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 110, 5: 84, 6: 58, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d3c8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6deb8>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d7b8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d3c8>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f7f0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8923c0ce48>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300fd0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300550>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b519e8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300518>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300a20>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203007b8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd748>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002e8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd978>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300c50>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002b0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d780>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300550>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ada0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a978>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6dc88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aba8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029044628143310547  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029049396514892578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10618925094604492
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.783359169960022
loading full batch data spends  0.0022373199462890625
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.170967102050781e-05
step  0
else: feat size  torch.Size([1348, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 104, 4: 108, 5: 85, 6: 61, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203158d0>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c88>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ac8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315550>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f98>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b70>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8923bef7f0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b519e8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd978>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6def0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fdb38>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6da20>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203024a8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6def0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d780>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd128>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203007b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300fd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d390>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300780>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029048919677734375  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029053688049316406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11369466781616211
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009190559387207031  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7671763896942139
loading full batch data spends  0.002220630645751953
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.4332275390625e-05
step  0
else: feat size  torch.Size([1370, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 108, 5: 86, 6: 59, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315710>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315828>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315390>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203158d0>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f60>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315208>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b00>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315668>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315630>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c50>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a90>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315550>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156a0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57b38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b519e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d7b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5a710>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203007b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5d668>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029132843017578125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029137611389160156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10571122169494629
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7599340677261353
loading full batch data spends  0.003506898880004883
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.029273986816406e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 103, 4: 107, 5: 85, 6: 60, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd748>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd978>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203024a8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302208>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203024e0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302518>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302080>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203028d0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e80>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203152b0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ba8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159e8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cc0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315160>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315390>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315be0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315048>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315208>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f60>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029071331024169922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029076099395751953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11015939712524414
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009294509887695312  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8133116960525513
loading full batch data spends  0.0029642581939697266
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.1484832763671875e-05
step  0
else: feat size  torch.Size([1343, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 103, 4: 108, 5: 83, 6: 60, 7: 35, 8: 22, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b00>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307c50>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076a0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a90>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b38>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307470>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd320>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd748>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a90>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd160>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074a8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307668>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307198>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f28>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a58>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315828>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a20>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cc0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e48>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315390>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203158d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028884410858154297  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028889179229736328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10847187042236328
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7739561796188354
loading full batch data spends  0.003937482833862305
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.316734313964844e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 109, 5: 85, 6: 59, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a20>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302da0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315518>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307710>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300ef0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305b00>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302518>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300c88>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd978>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b048>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aba8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd748>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd128>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ab38>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307748>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a20>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307d68>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307860>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076a0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307710>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307198>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307390>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904653549194336  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905130386352539  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10654163360595703
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009235858917236328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7575933933258057
loading full batch data spends  0.0022280216217041016
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.218650817871094e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 108, 5: 85, 6: 58, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d358>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d2e8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d780>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cc0>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d2e8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6deb8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315860>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d390>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300ef0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58e80>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd748>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302908>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fdb38>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd748>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f898>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aba8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd320>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a470>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd978>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd320>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d7b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6dc50>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ae80>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029018878936767578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02902364730834961  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10503363609313965
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7813187837600708
loading full batch data spends  0.003067493438720703
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.147125244140625e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 104, 4: 107, 5: 84, 6: 59, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315208>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a470>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a908>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a940>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157f0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ae80>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c50>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b00>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076d8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079b0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307860>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307630>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307748>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b56ef0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58e80>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300780>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d390>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300ef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d390>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029139041900634766  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029143810272216797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10482168197631836
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009294509887695312  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.810302495956421
loading full batch data spends  0.0022134780883789062
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.123283386230469e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 94, 3: 103, 4: 110, 5: 86, 6: 60, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154a8>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315080>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315860>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cf8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e80>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f98>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315240>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315d30>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e10>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c50>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307978>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203073c8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307400>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307c88>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307be0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307ef0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029006481170654297  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029011249542236328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10567760467529297
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7602930068969727
loading full batch data spends  0.002240896224975586
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.337860107421875e-05
step  0
else: feat size  torch.Size([1356, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 109, 5: 84, 6: 59, 7: 33, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5a710>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203051d0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305780>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315550>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cf8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315630>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315390>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f28>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f98>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e48>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ac8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315d30>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c50>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315eb8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f60>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315828>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315710>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203153c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203073c8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029064655303955078  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02906942367553711  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10676336288452148
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00923013687133789  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7564804553985596
loading full batch data spends  0.0027315616607666016
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.076957702636719e-05
step  0
else: feat size  torch.Size([1363, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 108, 5: 85, 6: 59, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57b38>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300080>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307908>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57160>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203054a8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58eb8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f898>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305780>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b66d68>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6da20>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315160>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150b8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b70>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f28>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315630>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f98>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203158d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ac8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029051780700683594  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029056549072265625  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10965490341186523
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7598862648010254
loading full batch data spends  0.004282951354980469
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.172325134277344e-05
step  0
else: feat size  torch.Size([1375, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 109, 5: 85, 6: 59, 7: 33, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57b38>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aba8>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57fd0>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57d68>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b573c8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076a0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307668>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a58>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074e0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307898>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203054a8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5a710>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd0b8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203054a8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57b38>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5aba8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d3c8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f7f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57400>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6dc50>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cf8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02912139892578125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02912616729736328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10652017593383789
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009331703186035156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7420008182525635
loading full batch data spends  0.0038895606994628906
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.2928924560546875e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 104, 4: 107, 5: 87, 6: 58, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150f0>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ae10>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a58>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ada0>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e48>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a470>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aba8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076a0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307198>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307860>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307748>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307390>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307898>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307d68>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076d8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd0b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b64e80>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b338d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f898>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305780>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b519e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5aba8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02901744842529297  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029022216796875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10571670532226562
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.722779393196106
loading full batch data spends  0.0022318363189697266
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.218650817871094e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 110, 5: 84, 6: 60, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ba8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b70>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315390>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315710>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a20>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315d30>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150b8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315860>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157f0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cf8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150f0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203075f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307908>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307630>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076d8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307198>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029086589813232422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029091358184814453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10725545883178711
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009273052215576172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7897120714187622
loading full batch data spends  0.0022592544555664062
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.314018249511719e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 106, 4: 111, 5: 83, 6: 58, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315860>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a90>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315208>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159e8>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315eb8>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150f0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a58>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e10>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cf8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315550>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315358>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d780>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315358>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d7b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315828>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c50>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6dc50>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6def0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315358>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d780>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307ac8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028997421264648438  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02900218963623047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10512089729309082
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7333831787109375
loading full batch data spends  0.0030965805053710938
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.170967102050781e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 106, 5: 86, 6: 59, 7: 33, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079e8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307be0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b70>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57fd0>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd160>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6def0>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8923c0ce48>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f518>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d2e8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ada0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ae80>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079e8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307908>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074e0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b70>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307898>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307710>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203075f8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203158d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315668>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028992176055908203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028996944427490234  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10606098175048828
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009235858917236328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7397924661636353
loading full batch data spends  0.0027816295623779297
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.1484832763671875e-05
step  0
else: feat size  torch.Size([1353, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 106, 4: 108, 5: 84, 6: 58, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5aba8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302668>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a940>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302b38>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a978>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cc0>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315208>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315240>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315550>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d7b8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300080>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5d668>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd160>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ada0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b4a8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd0b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a978>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a940>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58e80>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f390>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ab38>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307860>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029007911682128906  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029012680053710938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10909605026245117
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7508411407470703
loading full batch data spends  0.0022275447845458984
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.2901763916015625e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 103, 4: 108, 5: 84, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315eb8>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315860>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f60>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315048>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150b8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c88>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cc0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e80>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ba8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203153c8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cf8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b240>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6deb8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ab38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d7b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300c88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aba8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ae80>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029121875762939453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029126644134521484  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10827827453613281
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009288787841796875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.751957654953003
loading full batch data spends  0.0030252933502197266
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.291534423828125e-05
step  0
else: feat size  torch.Size([1355, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 103, 4: 109, 5: 83, 6: 58, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302668>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302908>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203028d0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302470>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302080>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302fd0>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ef0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cf8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315208>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f28>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315630>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315748>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e48>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f98>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315048>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315240>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c50>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02896881103515625  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02897357940673828  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11502528190612793
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7396994829177856
loading full batch data spends  0.005330562591552734
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.245208740234375e-05
step  0
else: feat size  torch.Size([1346, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 110, 5: 82, 6: 61, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307d68>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307748>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203075f8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307c50>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074e0>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d358>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307390>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307c88>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d3c8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307630>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6dc50>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6da20>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d358>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d3c8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b00>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ef0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315d30>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315630>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f98>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028947830200195312  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028952598571777344  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11007428169250488
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00917673110961914  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7539719343185425
loading full batch data spends  0.0027840137481689453
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.124641418457031e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 109, 5: 84, 6: 59, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57400>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079b0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57fd0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57d68>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b64e80>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f892036b780>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58c88>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6dc50>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b470>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d780>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305668>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6dc50>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305160>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203051d0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307908>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079e8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307d68>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307748>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307c50>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307470>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203071d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307860>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307be0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307748>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029085159301757812  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029089927673339844  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1091463565826416
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7687519788742065
loading full batch data spends  0.0022313594818115234
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.170967102050781e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 109, 5: 84, 6: 58, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e48>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203007b8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203152b0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300a20>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002e8>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c50>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e48>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300518>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307898>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b240>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5c710>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b573c8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b4a8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305668>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57160>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6da20>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d7b8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58c88>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b240>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58eb8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58c88>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6dc50>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029039859771728516  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029044628143310547  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10731649398803711
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009241104125976562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7599811553955078
loading full batch data spends  0.002239704132080078
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.24249267578125e-05
step  0
else: feat size  torch.Size([1374, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 107, 5: 85, 6: 59, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a20>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315828>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315630>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307860>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074a8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307ac8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a58>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b00>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307978>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079b0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307160>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307630>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307c88>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300518>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307400>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300a20>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203051d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5c710>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57d68>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57fd0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305780>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6deb8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d3c8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029170513153076172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029175281524658203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1064138412475586
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6965370178222656
loading full batch data spends  0.004999637603759766
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.221366882324219e-05
step  0
else: feat size  torch.Size([1370, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 108, 5: 84, 6: 60, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305780>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302908>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b4a8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302208>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203024a8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b4e0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302b38>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302668>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203024e0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302fd0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b38>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307ac8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307860>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307ef0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074e0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307198>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307d68>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307978>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203078d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029120445251464844  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029125213623046875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10670161247253418
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009305000305175781  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7093288898468018
loading full batch data spends  0.0029587745666503906
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.100799560546875e-05
step  0
else: feat size  torch.Size([1356, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 109, 5: 84, 6: 60, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b00>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315828>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d7b8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315550>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8923bef7f0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6da20>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156a0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d390>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d358>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b00>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307ef0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076a0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307d68>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307908>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307c50>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307710>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307be0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a58>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203078d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307c88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307630>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203071d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904510498046875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904987335205078  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10703444480895996
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.744533658027649
loading full batch data spends  0.00370025634765625
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.173683166503906e-05
step  0
else: feat size  torch.Size([1370, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 110, 5: 82, 6: 59, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150b8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e48>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300780>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315358>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d780>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b4a8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd748>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6def0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8923bef7f0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d780>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079e8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a90>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307400>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b38>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307c88>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307be0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203073c8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307668>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307748>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c88>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0291290283203125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02913379669189453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11117267608642578
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009305000305175781  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.759665846824646
loading full batch data spends  0.002321958541870117
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.9577484130859375e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 104, 4: 109, 5: 84, 6: 60, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ef0>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b70>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ac8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a90>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150b8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315710>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203153c8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300780>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c50>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57160>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d780>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302470>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57160>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a908>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b573c8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57fd0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5a710>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307710>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307390>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a20>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307978>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029063701629638672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029068470001220703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1099860668182373
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.723044514656067
loading full batch data spends  0.003154277801513672
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.790855407714844e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 106, 4: 109, 5: 84, 6: 59, 7: 35, 8: 21, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315518>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315550>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b70>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e80>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315160>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156a0>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315390>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315828>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150f0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315d30>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ac8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b573c8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f892036b2b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b39860>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307630>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307400>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029094219207763672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029098987579345703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10696172714233398
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009273052215576172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7309000492095947
loading full batch data spends  0.0022611618041992188
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.147125244140625e-05
step  0
else: feat size  torch.Size([1361, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 104, 4: 108, 5: 85, 6: 61, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307c50>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307be0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58e80>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150b8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315048>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e48>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315860>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315550>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f60>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315518>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157f0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f28>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a20>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315390>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e80>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c88>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e10>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a58>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315668>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029084205627441406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029088973999023438  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10656881332397461
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7482000589370728
loading full batch data spends  0.002565622329711914
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.6253204345703125e-05
step  0
else: feat size  torch.Size([1363, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 107, 5: 85, 6: 59, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307390>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a58>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074e0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307668>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307d68>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307630>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ba8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315be0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315208>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203153c8>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203152b0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315160>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b70>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f28>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315860>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f98>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315710>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315048>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cc0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315390>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315eb8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02906513214111328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029069900512695312  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11644625663757324
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009267807006835938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7866075038909912
loading full batch data spends  0.00392603874206543
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.221366882324219e-05
step  0
else: feat size  torch.Size([1361, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 110, 5: 81, 6: 61, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203078d0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b00>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203007b8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307be0>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d780>
func(nbatch).neighbor  torch.Size([81, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b64e80>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157f0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315630>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315518>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ba8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203054a8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8923c0ce48>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e10>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5d8d0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cc0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e10>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302518>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315390>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e10>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ae10>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302b70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd320>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904033660888672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904510498046875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11023950576782227
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7245877981185913
loading full batch data spends  0.005758762359619141
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.2479248046875e-05
step  0
else: feat size  torch.Size([1371, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 108, 5: 83, 6: 59, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57160>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57b38>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57400>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307390>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b00>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307400>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074e0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307908>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307ef0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307c50>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aba8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203054a8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f390>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aba8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd320>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ae10>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd0b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57160>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd128>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b4a8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d780>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b4e0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd160>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315be0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02910137176513672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02910614013671875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10631942749023438
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009310245513916016  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.678812026977539
loading full batch data spends  0.003111124038696289
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.410743713378906e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 106, 4: 109, 5: 84, 6: 57, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150b8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f98>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b70>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e10>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154a8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([57, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a90>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b38>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307be0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203075f8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307d68>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307908>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b70>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307ac8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307ef0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079e8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307860>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300780>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f898>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f390>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd160>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6da20>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d780>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f518>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203020b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02908468246459961  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02908945083618164  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11069035530090332
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.729655146598816
loading full batch data spends  0.0022406578063964844
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.218650817871094e-05
step  0
else: feat size  torch.Size([1353, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 94, 3: 103, 4: 110, 5: 84, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315390>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315be0>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150b8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157b8>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315eb8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315080>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a58>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203009e8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ac8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b70>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a20>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315048>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315240>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307630>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307710>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074a8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307160>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307978>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307be0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029041290283203125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029046058654785156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10662508010864258
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009214401245117188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7324771881103516
loading full batch data spends  0.002230405807495117
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.218650817871094e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 108, 5: 84, 6: 60, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ba8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315208>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315080>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157f0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315668>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c88>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203158d0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157b8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203153c8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b00>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f98>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315550>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315748>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f60>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cc0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307c50>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02902698516845703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029031753540039062  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10705828666687012
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7063289880752563
loading full batch data spends  0.004034280776977539
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.029273986816406e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 98, 3: 105, 4: 106, 5: 85, 6: 59, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ada0>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ae48>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307860>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ab38>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b66d68>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57b38>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ab38>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b56ef0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b56c18>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ab38>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305160>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305668>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a20>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307668>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076a0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307898>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307710>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307ef0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203158d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ba8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315710>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029063701629638672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029068470001220703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11013126373291016
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.729560136795044
loading full batch data spends  0.003636598587036133
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.673004150390625e-05
step  0
else: feat size  torch.Size([1349, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 102, 4: 107, 5: 83, 6: 60, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a20>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c50>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f60>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cc0>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315518>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315748>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ac8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b519e8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b4a8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307748>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307630>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079b0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203071d0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307710>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307ef0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307668>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307630>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307c88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02895832061767578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028963088989257812  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11440563201904297
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7068225145339966
loading full batch data spends  0.0041806697845458984
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   6.079673767089844e-05
step  0
else: feat size  torch.Size([1363, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 101, 4: 109, 5: 83, 6: 61, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c88>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156a0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a20>
func(nbatch).neighbor  torch.Size([101, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315390>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315668>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150f0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154a8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c50>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e48>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315be0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a58>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f98>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f60>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302080>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b66b38>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203054a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b66d68>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203054a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a978>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02910900115966797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02911376953125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1120915412902832
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009267807006835938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7642239332199097
loading full batch data spends  0.0039010047912597656
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.1975250244140625e-05
step  0
else: feat size  torch.Size([1363, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 94, 3: 106, 4: 107, 5: 86, 6: 61, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079e8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b70>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307400>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315518>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a58>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157f0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e80>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315860>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315160>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a20>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154a8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315710>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150f0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156a0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315668>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157b8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cf8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203153c8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315048>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029107093811035156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029111862182617188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10773754119873047
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7791815996170044
loading full batch data spends  0.003106355667114258
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.123283386230469e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 110, 5: 80, 6: 59, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307c50>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a58>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307ac8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307978>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b00>
func(nbatch).neighbor  torch.Size([80, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b70>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203073c8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307630>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307898>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307748>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315630>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315160>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315550>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315358>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e80>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203158d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315d30>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315208>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029047489166259766  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029052257537841797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10479116439819336
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009246349334716797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7725847959518433
loading full batch data spends  0.0022211074829101562
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.266334533691406e-05
step  0
else: feat size  torch.Size([1360, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 108, 5: 84, 6: 60, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ae48>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ae10>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ac88>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6dc50>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b56c18>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b33a90>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300c88>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002b0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b4e0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076d8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a90>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307390>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203073c8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074e0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307860>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fde10>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203075f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203073c8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd160>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307390>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aef0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ac88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a940>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905750274658203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029062271118164062  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10673165321350098
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6970226764678955
loading full batch data spends  0.002685070037841797
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.981590270996094e-05
step  0
else: feat size  torch.Size([1350, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 105, 4: 109, 5: 83, 6: 59, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315d30>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203152b0>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315eb8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315358>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a470>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315be0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203152b0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a978>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203054a8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e10>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd320>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b39860>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302518>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd128>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd160>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6dc50>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6def0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fde10>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203075f8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203073c8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074e0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203071d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307ac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307d68>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300518>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028958797454833984  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028963565826416016  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1101996898651123
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009198188781738281  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7977957725524902
loading full batch data spends  0.0030939579010009766
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.553794860839844e-05
step  0
else: feat size  torch.Size([1346, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 106, 5: 86, 6: 59, 7: 34, 8: 21, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315550>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ac8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e10>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315710>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e48>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e80>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315208>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([627, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157f0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aeb8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b00>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aef0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157f0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ba8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ab70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57d68>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b39860>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd978>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57400>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fdb38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57d68>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028906822204589844  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028911590576171875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10816740989685059
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8155415058135986
loading full batch data spends  0.00534367561340332
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.14984130859375e-05
step  0
else: feat size  torch.Size([1363, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 109, 5: 85, 6: 60, 7: 34, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315668>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315d30>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203153c8>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b70>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315eb8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315828>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c88>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315630>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ef0>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a20>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203158d0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f60>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154a8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315860>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f28>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e80>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a58>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ae80>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907276153564453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029077529907226562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10625052452087402
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009267807006835938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6884486675262451
loading full batch data spends  0.0022199153900146484
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.218650817871094e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 105, 4: 110, 5: 86, 6: 58, 7: 33, 8: 21, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203078d0>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307710>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307c88>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307400>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307898>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203153c8>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315160>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315518>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b00>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f60>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cc0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ac8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203152b0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e48>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154a8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315828>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315be0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02910757064819336  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02911233901977539  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10610032081604004
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7165617942810059
loading full batch data spends  0.0024089813232421875
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.1961669921875e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 106, 4: 109, 5: 85, 6: 57, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203007b8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300550>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a978>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aef0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d3c8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b66d68>
func(nbatch).neighbor  torch.Size([57, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074e0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b66b38>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074a8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307908>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd128>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd160>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd748>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd978>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315240>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203153c8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cf8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315048>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e10>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0291290283203125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02913379669189453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1092987060546875
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009288787841796875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7027190923690796
loading full batch data spends  0.002229928970336914
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.24249267578125e-05
step  0
else: feat size  torch.Size([1355, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 106, 4: 108, 5: 84, 6: 58, 7: 35, 8: 21, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307c50>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307668>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a940>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aef0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ab38>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203007b8>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a470>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300080>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300fd0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ae10>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58eb8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b39860>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b64e80>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57fd0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b048>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b66b38>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a940>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a908>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd978>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ab70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd748>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aba8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd0b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ada0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028987407684326172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028992176055908203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10726451873779297
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7165584564208984
loading full batch data spends  0.0031003952026367188
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.361701965332031e-05
step  0
else: feat size  torch.Size([1363, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 108, 5: 83, 6: 60, 7: 34, 8: 21, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cc0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203153c8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307630>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307748>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307400>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307860>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307c88>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a58>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307898>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307198>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074a8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203054a8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a20>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307898>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305b00>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b66d68>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b39860>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8923c0ce48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ab38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203028d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ac88>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029050827026367188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905559539794922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10661864280700684
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009267807006835938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6873047351837158
loading full batch data spends  0.0035200119018554688
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.2928924560546875e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 106, 5: 86, 6: 59, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b573c8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aba8>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6def0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ac88>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d2e8>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d7b8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57fd0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6deb8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57d68>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57fd0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d780>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d390>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307400>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203075f8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307630>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079b0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203078d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307c88>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307748>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203073c8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307be0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307198>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307160>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029117584228515625  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029122352600097656  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11177325248718262
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7286781072616577
loading full batch data spends  0.003924369812011719
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.269050598144531e-05
step  0
else: feat size  torch.Size([1366, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 104, 4: 107, 5: 85, 6: 59, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e10>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203153c8>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f98>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e80>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f60>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c88>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079b0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307d68>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307c88>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203075f8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076d8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307400>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307ac8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307630>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307748>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307198>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307ef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307160>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029139995574951172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029144763946533203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10950207710266113
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00928354263305664  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6740355491638184
loading full batch data spends  0.002229928970336914
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.24249267578125e-05
step  0
else: feat size  torch.Size([1356, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 106, 5: 85, 6: 59, 7: 35, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a58>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203009e8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315828>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5d668>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b64e80>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203051d0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8923bef7f0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ae48>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5a710>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076d8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307c88>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307748>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307470>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307be0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307710>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307ac8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b00>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307198>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315518>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a58>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156a0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a20>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315be0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029066085815429688  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907085418701172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10596919059753418
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7004109621047974
loading full batch data spends  0.003579854965209961
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.0531158447265625e-05
step  0
else: feat size  torch.Size([1356, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 109, 5: 84, 6: 60, 7: 33, 8: 21, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159e8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315748>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154a8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b70>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315080>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e48>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f98>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cc0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fde10>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305b00>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd320>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fdb38>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307710>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079b0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307470>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076d8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307630>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203075f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307978>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203073c8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307ac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a470>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028980255126953125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028985023498535156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10874772071838379
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00923013687133789  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.726896047592163
loading full batch data spends  0.0022139549255371094
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.3855438232421875e-05
step  0
else: feat size  torch.Size([1363, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 106, 4: 109, 5: 84, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150f0>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315748>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b70>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203152b0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315668>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a20>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156a0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e10>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315710>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c50>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a90>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300eb8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd320>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305b00>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203020b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd320>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d780>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f898>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029132366180419922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029137134552001953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10696029663085938
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.700182557106018
loading full batch data spends  0.002238750457763672
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.24249267578125e-05
step  0
else: feat size  torch.Size([1360, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 103, 4: 109, 5: 86, 6: 60, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203078d0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002b0>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300fd0>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002e8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300080>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300ef0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203009e8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150b8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315be0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ef0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315160>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157f0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315048>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315828>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203153c8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315748>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f28>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203152b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a20>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029073238372802734  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029078006744384766  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10517072677612305
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009251594543457031  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7519075870513916
loading full batch data spends  0.0022356510162353516
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.2901763916015625e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 110, 5: 85, 6: 60, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307710>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203075f8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b70>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307198>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076d8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307c88>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074e0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307748>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307c50>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203073c8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a58>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ef0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315eb8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157f0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e80>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ac8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315048>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ba8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02906036376953125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02906513214111328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10715270042419434
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.770376205444336
loading full batch data spends  0.0052797794342041016
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.2928924560546875e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 110, 5: 84, 6: 60, 7: 34, 8: 21, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd748>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd128>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd320>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8923c0ce48>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b66d68>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd320>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f892036b780>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd0b8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd320>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002e8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002b0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300780>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315828>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315080>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e10>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315160>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315eb8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e80>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150f0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ac8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02898693084716797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02899169921875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10744690895080566
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.759086012840271
loading full batch data spends  0.0029544830322265625
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.076957702636719e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 103, 4: 107, 5: 86, 6: 59, 7: 33, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a978>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ab70>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ac88>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ae80>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ab38>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307390>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307470>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307d68>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b70>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307400>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b66d68>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f518>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ac88>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b4a8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58e80>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ac88>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd0b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a978>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ac88>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b56c18>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302da0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b56ef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ae80>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a908>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029078960418701172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029083728790283203  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11152935028076172
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7785816192626953
loading full batch data spends  0.0026879310607910156
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.267692565917969e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 103, 4: 110, 5: 87, 6: 58, 7: 33, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315710>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57b38>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8923c0ce48>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315eb8>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f892036b780>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e80>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315208>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57400>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315518>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315668>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307390>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307400>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079b0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307668>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203075f8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307d68>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307470>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203073c8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58c88>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b66b38>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd128>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b56c18>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd0b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302da0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f518>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029062747955322266  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029067516326904297  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10503458976745605
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009235858917236328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7442529201507568
loading full batch data spends  0.0022749900817871094
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.172325134277344e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 94, 3: 105, 4: 110, 5: 83, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ef0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a90>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150b8>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159e8>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203153c8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e48>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315080>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315710>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ac8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315208>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315358>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307160>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074e0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307978>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307748>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203073c8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307ef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02912759780883789  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029132366180419922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10956597328186035
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7381513118743896
loading full batch data spends  0.0030922889709472656
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.218650817871094e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 108, 5: 83, 6: 61, 7: 33, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315208>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315358>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315668>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157b8>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156a0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b70>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315240>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a940>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aef0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ac88>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f60>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a470>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6dc88>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d780>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aba8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6dc50>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ab70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a470>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028998851776123047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029003620147705078  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10691285133361816
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.767521619796753
loading full batch data spends  0.0022296905517578125
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.218650817871094e-05
step  0
else: feat size  torch.Size([1374, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 101, 4: 108, 5: 85, 6: 60, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203153c8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a58>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154a8>
func(nbatch).neighbor  torch.Size([101, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c88>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f892036b2b0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5d8d0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ada0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f898>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aef0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a978>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd320>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d2e8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305b00>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd160>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203051d0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305b00>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b048>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b4a8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fde10>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd160>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305b00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f98>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f28>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ac8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0292205810546875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02922534942626953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1071774959564209
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7338351011276245
loading full batch data spends  0.002989530563354492
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.1484832763671875e-05
step  0
else: feat size  torch.Size([1362, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 102, 4: 107, 5: 85, 6: 61, 7: 34, 8: 21, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159e8>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315240>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a58>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203024e0>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302470>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ae48>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b519e8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd0b8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aef0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305668>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5a710>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd320>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305780>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fdb38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ae48>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5aba8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd160>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ab38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305b00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aef0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029015064239501953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029019832611083984  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11329913139343262
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009262561798095703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6977465152740479
loading full batch data spends  0.003551006317138672
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.316734313964844e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 109, 5: 87, 6: 60, 7: 34, 8: 21, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e10>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315080>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159e8>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156a0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f28>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315630>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f98>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e80>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c88>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ba8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b00>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302208>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315828>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302668>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b519e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b048>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b573c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b338d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b33a90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b39860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6deb8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904510498046875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904987335205078  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1112356185913086
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6982555389404297
loading full batch data spends  0.003793954849243164
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.0531158447265625e-05
step  0
else: feat size  torch.Size([1360, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 110, 5: 85, 6: 60, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6da20>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076d8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d2e8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203158d0>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e48>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150b8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157b8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315208>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315668>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315358>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f28>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ef0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315630>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b70>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315eb8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f60>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c88>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029110431671142578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02911520004272461  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1100165843963623
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009251594543457031  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7332361936569214
loading full batch data spends  0.0022389888763427734
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.2901763916015625e-05
step  0
else: feat size  torch.Size([1352, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 109, 5: 85, 6: 61, 7: 35, 8: 23, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ada0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ae10>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58c88>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aeb8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a470>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a908>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a940>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315048>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e48>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159e8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f28>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157b8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156a0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f98>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a20>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e10>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029035568237304688  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02904033660888672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10527491569519043
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7001900672912598
loading full batch data spends  0.0022385120391845703
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.218650817871094e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 102, 4: 109, 5: 83, 6: 59, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074a8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076a0>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302080>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aba8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58eb8>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5c710>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ab70>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ae80>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305160>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ab38>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203158d0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cf8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315668>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315358>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ef0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f98>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029010295867919922  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029015064239501953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10636734962463379
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6776540279388428
loading full batch data spends  0.0023970603942871094
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.124641418457031e-05
step  0
else: feat size  torch.Size([1361, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 104, 4: 107, 5: 83, 6: 59, 7: 35, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315208>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c50>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156a0>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e80>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157f0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b00>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302470>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315d30>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b338d0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300c88>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5aba8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f892036b780>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aef0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8923bef7f0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b4e0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305780>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b470>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b240>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cf8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315828>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315048>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029073238372802734  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029078006744384766  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11045145988464355
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.721700668334961
loading full batch data spends  0.004076957702636719
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.315376281738281e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 109, 5: 85, 6: 60, 7: 33, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307d68>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307c88>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076a0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307160>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f98>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315748>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315710>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ba8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315080>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c50>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b00>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157f0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156a0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300c88>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5aba8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b240>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300c88>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6dc88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b338d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aba8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029006481170654297  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029011249542236328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10984420776367188
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009246349334716797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7058215141296387
loading full batch data spends  0.00577855110168457
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   7.653236389160156e-05
step  0
else: feat size  torch.Size([1360, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 105, 4: 108, 5: 84, 6: 59, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e48>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ac8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cf8>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ef0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203153c8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203158d0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a90>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315358>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f28>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a20>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154a8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150b8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ba8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315710>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f98>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c50>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f60>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315550>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e80>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02906322479248047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0290679931640625  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11104416847229004
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.747564673423767
loading full batch data spends  0.0022459030151367188
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.170967102050781e-05
step  0
else: feat size  torch.Size([1356, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 109, 5: 83, 6: 61, 7: 34, 8: 21, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300a20>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002b0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300780>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300080>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300550>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002e8>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e48>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ac8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156a0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b70>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f28>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154a8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203158d0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315208>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315358>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315048>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203153c8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ba8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029045581817626953  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029050350189208984  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1065819263458252
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00923013687133789  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6929717063903809
loading full batch data spends  0.0022361278533935547
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.24249267578125e-05
step  0
else: feat size  torch.Size([1346, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 108, 5: 85, 6: 59, 7: 35, 8: 22, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a908>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aef0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302668>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a978>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f7f0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5a710>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b519e8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b66d68>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300fd0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300780>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159e8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315080>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ef0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315748>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315048>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a58>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307400>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02890157699584961  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02890634536743164  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11330413818359375
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7007781267166138
loading full batch data spends  0.004091739654541016
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.457069396972656e-05
step  0
else: feat size  torch.Size([1369, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 105, 4: 108, 5: 82, 6: 60, 7: 35, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307ac8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307c88>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074e0>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307470>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aeb8>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307be0>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ac88>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ae80>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b00>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ae10>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002e8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300ef0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6dc88>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300eb8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d390>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300fd0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203054a8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305780>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d390>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6dc88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307ac8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203075f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307390>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029142379760742188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02914714813232422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10881304740905762
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009299755096435547  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.649398684501648
loading full batch data spends  0.0029642581939697266
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.1484832763671875e-05
step  0
else: feat size  torch.Size([1361, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 108, 5: 84, 6: 60, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315860>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159e8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315668>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315160>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ef0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b00>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a58>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315208>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315748>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aba8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150b8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315748>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ac88>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ab38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302080>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b33a90>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5d8d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203009e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203051d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b56c18>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300fd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b56c18>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907276153564453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029077529907226562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10979199409484863
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7402710914611816
loading full batch data spends  0.0037169456481933594
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.3882598876953125e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 106, 4: 110, 5: 82, 6: 59, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e10>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a20>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315240>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315390>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315860>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315048>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154a8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315710>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a90>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315080>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150b8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157b8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ef0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ba8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315160>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302668>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f98>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203024e0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b00>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203024a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ab38>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029063701629638672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029068470001220703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11112856864929199
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.718322515487671
loading full batch data spends  0.0031194686889648438
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.553794860839844e-05
step  0
else: feat size  torch.Size([1347, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 109, 5: 86, 6: 61, 7: 35, 8: 23, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5d8d0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d358>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d7b8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315390>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150f0>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cc0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a20>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315048>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([634, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315eb8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157f0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f98>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157b8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315160>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315080>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ef0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ba8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a58>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f60>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ab70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02903461456298828  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029039382934570312  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11270475387573242
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6824586391448975
loading full batch data spends  0.003244161605834961
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.886222839355469e-05
step  0
else: feat size  torch.Size([1362, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 98, 3: 104, 4: 109, 5: 85, 6: 60, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307160>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315668>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d2e8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fdb38>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f892036b2b0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d7b8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5d8d0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5a710>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002e8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d358>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b4e0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300080>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b240>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150f0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315240>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a20>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315048>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029099464416503906  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029104232788085938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11031818389892578
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009262561798095703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6947352886199951
loading full batch data spends  0.002377748489379883
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.8160552978515625e-05
step  0
else: feat size  torch.Size([1371, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 104, 4: 109, 5: 82, 6: 60, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307390>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307ef0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076a0>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c50>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315710>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203153c8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ef0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e10>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305160>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b519e8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d7b8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58c88>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b39860>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f892036b780>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b048>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d7b8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300c88>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b048>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300c88>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300518>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a90>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029181957244873047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029186725616455078  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10394287109375
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6825053691864014
loading full batch data spends  0.002244234085083008
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.24249267578125e-05
step  0
else: feat size  torch.Size([1353, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 95, 3: 103, 4: 110, 5: 85, 6: 60, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ba8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ac8>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315208>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159e8>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a20>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315828>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154a8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315710>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e48>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f98>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157b8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b70>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302080>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315518>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58eb8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b519e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aeb8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5a710>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f892036b780>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5d8d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b4e0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029058456420898438  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02906322479248047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10374641418457031
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009214401245117188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6785361766815186
loading full batch data spends  0.0023050308227539062
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.24249267578125e-05
step  0
else: feat size  torch.Size([1347, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 94, 3: 104, 4: 110, 5: 83, 6: 58, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315160>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156a0>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315240>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315390>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315518>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315860>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154a8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([627, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315748>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315828>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ba8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a90>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315550>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f28>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b00>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e48>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302208>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028913497924804688  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02891826629638672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10823893547058105
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6973135471343994
loading full batch data spends  0.004099845886230469
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.00543212890625e-05
step  0
else: feat size  torch.Size([1345, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 109, 5: 83, 6: 60, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307390>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076d8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307c50>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307be0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b00>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307748>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203073c8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307860>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a58>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157f0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c50>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315748>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315390>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f60>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cc0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315d30>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cf8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a20>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315828>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028950214385986328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02895498275756836  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1128535270690918
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009171485900878906  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.658560872077942
loading full batch data spends  0.0031251907348632812
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.601478576660156e-05
step  0
else: feat size  torch.Size([1366, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 107, 5: 86, 6: 59, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d7b8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d390>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d3c8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315160>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58e80>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f7f0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b048>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203009e8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b64e80>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b573c8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307160>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307390>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203078d0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307860>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307668>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203073c8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076d8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315160>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154a8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c50>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315630>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315860>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02918386459350586  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02918863296508789  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11132597923278809
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7319754362106323
loading full batch data spends  0.002378702163696289
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.361701965332031e-05
step  0
else: feat size  torch.Size([1351, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 109, 5: 85, 6: 59, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b00>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c88>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d780>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315208>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d3c8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6da20>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d780>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d358>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302b70>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b33a90>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5c710>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307710>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307c88>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307d68>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307ef0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307860>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307160>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203073c8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203078d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307c88>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076d8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203028d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0290069580078125  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02901172637939453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10610365867614746
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009203433990478516  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6694097518920898
loading full batch data spends  0.0022253990173339844
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.528594970703125e-05
step  0
else: feat size  torch.Size([1346, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 103, 4: 107, 5: 86, 6: 61, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315860>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315828>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315630>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ba8>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315080>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315748>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c50>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315be0>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315eb8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315048>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ef0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cc0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315550>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d390>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cf8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315710>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b66b38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5c710>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302fd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b64e80>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a940>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b240>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029072284698486328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907705307006836  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10792708396911621
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6902155876159668
loading full batch data spends  0.0040776729583740234
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.0531158447265625e-05
step  0
else: feat size  torch.Size([1368, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 105, 5: 87, 6: 61, 7: 35, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203009e8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203007b8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300518>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300780>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150f0>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154a8>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159e8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203153c8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150b8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315710>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315748>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315828>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315080>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315518>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315860>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a20>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c50>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02919769287109375  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02920246124267578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10766005516052246
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009297370910644531  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.7223777770996094
loading full batch data spends  0.0022194385528564453
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.1948089599609375e-05
step  0
else: feat size  torch.Size([1341, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 105, 4: 107, 5: 83, 6: 59, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203078d0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307978>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300a20>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b00>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307978>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002e8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203007b8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300780>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203009e8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159e8>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150f0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315630>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154a8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150b8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315160>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315710>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315390>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ba8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315d30>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315828>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156a0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028953075408935547  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028957843780517578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1047828197479248
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6561936140060425
loading full batch data spends  0.002317667007446289
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.266334533691406e-05
step  0
else: feat size  torch.Size([1348, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 102, 4: 110, 5: 85, 6: 61, 7: 33, 8: 23, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ae48>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aba8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d2e8>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b70>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f892036b2b0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b048>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203009e8>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300a20>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58e80>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300080>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b00>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307898>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074a8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307ef0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203073c8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b38>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203078d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ac8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f60>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02895832061767578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028963088989257812  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10620760917663574
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009187698364257812  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6787420511245728
loading full batch data spends  0.0031201839447021484
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.506111145019531e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 103, 4: 110, 5: 86, 6: 59, 7: 34, 8: 20, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157b8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aeb8>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cf8>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ae10>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315d30>
func(nbatch).neighbor  torch.Size([20, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315668>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a940>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302668>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd0b8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307748>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302518>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307d68>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307400>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203024a8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b38>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302208>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a58>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307630>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302518>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307d68>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02900409698486328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029008865356445312  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11211705207824707
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6504155397415161
loading full batch data spends  0.004038810729980469
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.172325134277344e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 110, 5: 83, 6: 59, 7: 35, 8: 22, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150b8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315748>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ac8>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315160>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e48>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315630>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315358>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156a0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203152b0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ae10>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ae48>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ab70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58c88>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b519e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f518>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58c88>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b66b38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd0b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5a710>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029024600982666016  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029029369354248047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11105871200561523
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009235858917236328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.642713189125061
loading full batch data spends  0.0025768280029296875
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.62396240234375e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 109, 5: 84, 6: 59, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a978>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a940>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aba8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315be0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cc0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315eb8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e10>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a58>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315390>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315860>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157f0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150b8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b00>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b70>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ac8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e80>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315160>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a90>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029016494750976562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029021263122558594  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10619163513183594
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6527235507965088
loading full batch data spends  0.0023081302642822266
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.1484832763671875e-05
step  0
else: feat size  torch.Size([1367, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 105, 4: 109, 5: 84, 6: 60, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074a8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307ac8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307470>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076a0>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203078d0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a20>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b70>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307400>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315710>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315550>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([634, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ef0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c88>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cc0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157f0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e10>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315048>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315748>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315be0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315208>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315630>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029145240783691406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029150009155273438  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10980892181396484
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009288787841796875  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6466972827911377
loading full batch data spends  0.0022225379943847656
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.24249267578125e-05
step  0
else: feat size  torch.Size([1371, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 104, 4: 107, 5: 87, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ae10>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ab38>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d3c8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b66d68>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305780>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f518>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b56ef0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5aba8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58c88>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57fd0>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076d8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307978>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b00>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076a0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307c50>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a58>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307470>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a90>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f28>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203158d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315eb8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c88>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029184341430664062  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029189109802246094  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10841631889343262
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6497385501861572
loading full batch data spends  0.00420689582824707
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.1484832763671875e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 109, 5: 86, 6: 59, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159e8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315160>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315358>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315860>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a20>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315208>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a470>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ae48>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ae10>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300fd0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b66b38>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f898>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300fd0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305780>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203009e8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f390>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58eb8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307908>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076d8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307860>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307748>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a908>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029079437255859375  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029084205627441406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11324119567871094
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009235858917236328  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6203351020812988
loading full batch data spends  0.003283977508544922
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.0067901611328125e-05
step  0
else: feat size  torch.Size([1365, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 109, 5: 84, 6: 59, 7: 35, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315748>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159e8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c88>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f60>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e10>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157f0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157b8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315048>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c50>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f28>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315828>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ba8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a58>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e48>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305b00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b66b38>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b66d68>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305780>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302208>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203028d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029091358184814453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029096126556396484  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11386752128601074
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.60719895362854
loading full batch data spends  0.00390625
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.221366882324219e-05
step  0
else: feat size  torch.Size([1355, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 105, 4: 109, 5: 83, 6: 60, 7: 34, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307978>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6deb8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307978>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d358>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d780>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b70>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d390>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203158d0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315080>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b00>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e48>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f60>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a90>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150f0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315390>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159e8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156a0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315240>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315d30>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315eb8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029023170471191406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029027938842773438  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10628890991210938
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009224891662597656  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6843233108520508
loading full batch data spends  0.0029578208923339844
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.172325134277344e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 106, 4: 109, 5: 83, 6: 61, 7: 33, 8: 20, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307d68>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b38>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307ef0>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307748>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203071d0>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307160>
func(nbatch).neighbor  torch.Size([61, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a20>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b70>
func(nbatch).neighbor  torch.Size([20, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307860>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a58>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e48>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b00>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315160>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f60>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ef0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ac8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315748>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a90>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315be0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029026031494140625  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029030799865722656  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1042335033416748
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6951888799667358
loading full batch data spends  0.0030889511108398438
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.123283386230469e-05
step  0
else: feat size  torch.Size([1366, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 105, 4: 108, 5: 85, 6: 60, 7: 35, 8: 21, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b240>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b4e0>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b470>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305668>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5a710>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f898>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b66d68>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ae48>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd978>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f892036b2b0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b048>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b4e0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203153c8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315160>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315358>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203158d0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150b8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315630>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029049396514892578  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905416488647461  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10406661033630371
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00928354263305664  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6252210140228271
loading full batch data spends  0.0022308826446533203
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.1948089599609375e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 103, 4: 107, 5: 85, 6: 59, 7: 34, 8: 22, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d7b8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d3c8>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d2e8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d358>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6deb8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203078d0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307630>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307c50>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307ef0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076d8>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f892036b2b0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b66d68>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b4e0>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302668>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd160>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5d8d0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d7b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b4e0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b64e80>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6deb8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b048>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b470>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d2e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d3c8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028948307037353516  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028953075408935547  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1035623550415039
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.5691465139389038
loading full batch data spends  0.0029518604278564453
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.267692565917969e-05
step  0
else: feat size  torch.Size([1364, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 106, 4: 111, 5: 82, 6: 59, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57fd0>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cf8>
func(nbatch).neighbor  torch.Size([111, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f7f0>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57400>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57b38>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5f898>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f28>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203078d0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076d8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a90>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307390>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b38>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307c50>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307630>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a58>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd978>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b39860>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b66b38>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6da20>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b4e0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6def0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029129505157470703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029134273529052734  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10324478149414062
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009273052215576172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.5719547271728516
loading full batch data spends  0.0022420883178710938
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.314018249511719e-05
step  0
else: feat size  torch.Size([1359, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 103, 4: 109, 5: 84, 6: 59, 7: 35, 8: 21, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f60>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315208>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315518>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203152b0>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315630>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ef0>
func(nbatch).neighbor  torch.Size([21, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315748>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e80>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c88>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154a8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315550>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307710>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307978>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a20>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074a8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b70>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a58>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307d68>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a90>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029074668884277344  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029079437255859375  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10790657997131348
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6594982147216797
loading full batch data spends  0.004093647003173828
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.124641418457031e-05
step  0
else: feat size  torch.Size([1365, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 108, 5: 84, 6: 60, 7: 34, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a58>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203152b0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315860>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e10>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203153c8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cf8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8923bef7f0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315630>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315390>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203028d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302518>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302470>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315828>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302fd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302080>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203024a8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029104232788085938  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02910900115966797  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11977601051330566
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009278297424316406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6121325492858887
loading full batch data spends  0.0038852691650390625
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.435943603515625e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 98, 3: 104, 4: 108, 5: 86, 6: 58, 7: 35, 8: 22, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307160>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307630>
func(nbatch).neighbor  torch.Size([98, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307748>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157b8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6dc50>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5aba8>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302b38>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203028d0>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f892036b2b0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302dd8>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305668>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203051d0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203075f8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203054a8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203051d0>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076d8>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307ef0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074e0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076a0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157b8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cc0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157f0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02898263931274414  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028987407684326172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10772871971130371
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6216201782226562
loading full batch data spends  0.0029456615447998047
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.0531158447265625e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 95, 3: 104, 4: 110, 5: 83, 6: 59, 7: 34, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cf8>
func(nbatch).neighbor  torch.Size([95, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a940>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ab38>
func(nbatch).neighbor  torch.Size([83, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a470>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cf8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203051d0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203054a8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b240>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203051d0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b4a8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b240>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305160>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5aba8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307400>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307860>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5a710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203075f8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300ef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002e8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307630>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029065608978271484  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029070377349853516  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1117238998413086
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6429121494293213
loading full batch data spends  0.0022268295288085938
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.266334533691406e-05
step  0
else: feat size  torch.Size([1356, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 97, 3: 106, 4: 108, 5: 82, 6: 58, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b38>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ac8>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a58>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315208>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315390>
func(nbatch).neighbor  torch.Size([82, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e80>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315710>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ba8>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302080>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203024a8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302b70>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ab70>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302518>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a940>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b33a90>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8923c0ce48>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b4a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f892036b2b0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b048>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b338d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305668>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.0290679931640625  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907276153564453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10972142219543457
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.5898590087890625
loading full batch data spends  0.003089427947998047
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.170967102050781e-05
step  0
else: feat size  torch.Size([1358, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 107, 5: 84, 6: 59, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315eb8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157b8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315630>
func(nbatch).neighbor  torch.Size([107, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315390>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a20>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315208>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203153c8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150b8>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315518>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6deb8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e10>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6da20>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d780>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203153c8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6deb8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d7b8>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302fd0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302518>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203020b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e10>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302b70>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905416488647461  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02905893325805664  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1079413890838623
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009241104125976562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6832680702209473
loading full batch data spends  0.0029947757720947266
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.458427429199219e-05
step  0
else: feat size  torch.Size([1362, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 104, 4: 108, 5: 84, 6: 59, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315550>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315eb8>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f98>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f28>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ac8>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315828>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315860>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c88>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b70>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f60>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315048>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e10>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203152b0>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ef0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315240>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a20>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154e0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305b00>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e80>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203051d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029020309448242188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02902507781982422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11052680015563965
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6429436206817627
loading full batch data spends  0.0029745101928710938
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.291534423828125e-05
step  0
else: feat size  torch.Size([1379, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 102, 4: 106, 5: 87, 6: 59, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd128>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd978>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a978>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a58>
func(nbatch).neighbor  torch.Size([106, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203009e8>
func(nbatch).neighbor  torch.Size([87, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5c710>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b4a8>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5a710>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b048>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300a20>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305668>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305160>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305780>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cf8>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f98>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c88>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315358>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315550>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315be0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315748>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c50>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029236793518066406  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029241561889648438  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10742902755737305
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009356021881103516  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6852089166641235
loading full batch data spends  0.0036721229553222656
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.364418029785156e-05
step  0
else: feat size  torch.Size([1360, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 94, 3: 105, 4: 108, 5: 86, 6: 60, 7: 35, 8: 23, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154a8>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315240>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300ef0>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154a8>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300fd0>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd978>
func(nbatch).neighbor  torch.Size([60, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fdb38>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002e8>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a978>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd160>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([633, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b048>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58eb8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b39860>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b3b048>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd128>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305668>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305b00>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd978>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305780>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002e8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd320>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300fd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307ef0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203074a8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029178142547607422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029182910919189453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.1171107292175293
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.00938272476196289  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6940301656723022
loading full batch data spends  0.0053598880767822266
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.221366882324219e-05
step  0
else: feat size  torch.Size([1351, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 94, 3: 104, 4: 108, 5: 86, 6: 59, 7: 34, 8: 23, 9: 8, 10: 66}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([94, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f98>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e80>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f28>
func(nbatch).neighbor  torch.Size([86, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e48>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156a0>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315d30>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([66, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315860>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315518>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154a8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315630>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5a710>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b39860>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fdb38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203054a8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300780>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57b38>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920305160>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028944015502929688  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02894878387451172  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.11068010330200195
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009203433990478516  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6402482986450195
loading full batch data spends  0.002210378646850586
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.147125244140625e-05
step  0
else: feat size  torch.Size([1355, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 108, 5: 85, 6: 59, 7: 35, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6deb8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6da20>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6dc50>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315be0>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315080>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203158d0>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315828>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156d8>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315160>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cc0>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315048>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b70>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203155f8>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e80>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315438>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157f0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315c18>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315710>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315860>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203152b0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315748>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907276153564453  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029077529907226562  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10737133026123047
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6606491804122925
loading full batch data spends  0.0023169517517089844
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.266334533691406e-05
step  0
else: feat size  torch.Size([1344, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 103, 4: 108, 5: 85, 6: 59, 7: 35, 8: 23, 9: 8, 10: 67}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b519e8>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302dd8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203153c8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315a20>
func(nbatch).neighbor  torch.Size([108, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203158d0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ef0>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315080>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315400>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315908>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315320>
func(nbatch).neighbor  torch.Size([67, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([630, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e10>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e80>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315eb8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cc0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f28>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e48>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156a0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315358>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315048>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203154a8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203157b8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028969764709472656  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028974533081054688  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10801291465759277
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009166240692138672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6474279165267944
loading full batch data spends  0.0039517879486083984
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   5.269050598144531e-05
step  0
else: feat size  torch.Size([1357, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 97, 3: 103, 4: 109, 5: 85, 6: 59, 7: 34, 8: 23, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307630>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307908>
func(nbatch).neighbor  torch.Size([97, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6aba8>
func(nbatch).neighbor  torch.Size([103, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307160>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b39860>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b66d68>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b519e8>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd978>
func(nbatch).neighbor  torch.Size([23, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315080>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f60>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([631, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f89203156a0>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5aba8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315d30>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315940>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315048>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315710>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203024e0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203024a8>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315390>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302668>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302208>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315358>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203024e0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02906942367553711  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.02907419204711914  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10844922065734863
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.671897292137146
loading full batch data spends  0.004873514175415039
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   4.5299530029296875e-05
step  0
else: feat size  torch.Size([1354, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 45, 2: 96, 3: 105, 4: 109, 5: 85, 6: 57, 7: 34, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300c50>
func(nbatch).neighbor  torch.Size([45, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002b0>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307978>
func(nbatch).neighbor  torch.Size([105, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076d8>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307ef0>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203076a0>
func(nbatch).neighbor  torch.Size([57, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307a90>
func(nbatch).neighbor  torch.Size([34, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203073c8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b38>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307898>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([629, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b33a90>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b58c88>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302668>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5a710>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302208>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302668>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fde10>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302518>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203028d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6d390>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b57fd0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302208>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203028d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315ef0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028985023498535156  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028989791870117188  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10970807075500488
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009219646453857422  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6658985614776611
loading full batch data spends  0.0022287368774414062
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.1948089599609375e-05
step  0
else: feat size  torch.Size([1350, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 102, 4: 110, 5: 85, 6: 58, 7: 33, 8: 22, 9: 8, 10: 68}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300fd0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203009e8>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203002e8>
func(nbatch).neighbor  torch.Size([102, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300a20>
func(nbatch).neighbor  torch.Size([110, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203007b8>
func(nbatch).neighbor  torch.Size([85, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920300c50>
func(nbatch).neighbor  torch.Size([58, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307470>
func(nbatch).neighbor  torch.Size([33, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203075f8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203071d0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307668>
func(nbatch).neighbor  torch.Size([68, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([628, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307908>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203073c8>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307ac8>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079b0>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b38>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307630>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307860>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6a978>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b338d0>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b5a710>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203028d0>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b338d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302668>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920302908>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89202fd978>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028937816619873047  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.028942584991455078  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10495138168334961
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009379863739013672  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.6368823051452637
loading full batch data spends  0.0022430419921875
connection checking time:  0
block generation total time  0
generate_dataloader_block spend   3.218650817871094e-05
step  0
else: feat size  torch.Size([1362, 1433])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 46, 2: 96, 3: 104, 4: 109, 5: 84, 6: 59, 7: 35, 8: 22, 9: 8, 10: 69}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315cc0>
func(nbatch).neighbor  torch.Size([46, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315390>
func(nbatch).neighbor  torch.Size([96, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315240>
func(nbatch).neighbor  torch.Size([104, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315d30>
func(nbatch).neighbor  torch.Size([109, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315b70>
func(nbatch).neighbor  torch.Size([84, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e10>
func(nbatch).neighbor  torch.Size([59, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315f98>
func(nbatch).neighbor  torch.Size([35, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203150b8>
func(nbatch).neighbor  torch.Size([22, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203159b0>
func(nbatch).neighbor  torch.Size([8, 64])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8906b6ae48>
func(nbatch).neighbor  torch.Size([69, 64])
------------------------------------------------------
==========================================================
else: feat size  torch.Size([632, 64])
 builtin mfunc 
 not builtin rfunc 
graph-in degree
{1: 20, 2: 25, 3: 26, 4: 22, 5: 15, 6: 11, 7: 4, 8: 3, 9: 4, 10: 3, 11: 1, 12: 2, 19: 1, 21: 1, 25: 2}
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315208>
func(nbatch).neighbor  torch.Size([20, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315898>
func(nbatch).neighbor  torch.Size([25, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315470>
func(nbatch).neighbor  torch.Size([26, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315278>
func(nbatch).neighbor  torch.Size([22, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315e80>
func(nbatch).neighbor  torch.Size([15, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315978>
func(nbatch).neighbor  torch.Size([11, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920315160>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307b00>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307978>
func(nbatch).neighbor  torch.Size([4, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307be0>
func(nbatch).neighbor  torch.Size([3, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307710>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203079e8>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f8920307c88>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203075f8>
func(nbatch).neighbor  torch.Size([1, 7])
------------------------------------------------------
==========================================================
nbatch  <dgl.udf.NodeBatch object at 0x7f89203071d0>
func(nbatch).neighbor  torch.Size([2, 7])
------------------------------------------------------
==========================================================
----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029115676879882812  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

batch_pred  torch.Size([140, 7])
batch_labels torch.Size([140])
----------------------------------------after loss function
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.029120445251464844  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

pure train time  0.10451006889343262
-----------------------------------------after optimizer zero grad
 Nvidia-smi: 1.58203125 GB
    Memory Allocated: 0.009262561798095703  GigaBytes
Max Memory Allocated: 0.029795169830322266  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.649528980255127
Total (block generation + training)time/epoch 0.12582342743873595
pure train time/epoch 0.11237582868459273

num_input_list  [1342, 1367, 1347, 1359, 1348, 1366, 1368, 1366, 1349, 1361, 1357, 1358, 1365, 1368, 1384, 1357, 1358, 1357, 1369, 1358, 1364, 1348, 1358, 1350, 1348, 1364, 1361, 1358, 1368, 1373, 1357, 1371, 1355, 1347, 1351, 1354, 1369, 1368, 1381, 1358, 1358, 1366, 1358, 1360, 1365, 1366, 1350, 1365, 1367, 1347, 1356, 1349, 1374, 1357, 1359, 1365, 1371, 1352, 1359, 1354, 1367, 1356, 1369, 1352, 1364, 1352, 1362, 1359, 1358, 1361, 1346, 1362, 1370, 1364, 1368, 1359, 1359, 1361, 1351, 1366, 1363, 1354, 1365, 1351, 1373, 1371, 1352, 1348, 1370, 1368, 1343, 1357, 1352, 1368, 1354, 1356, 1363, 1375, 1352, 1364, 1352, 1357, 1353, 1367, 1355, 1346, 1364, 1358, 1374, 1370, 1356, 1370, 1367, 1364, 1361, 1363, 1361, 1371, 1368, 1353, 1352, 1354, 1349, 1363, 1363, 1359, 1360, 1350, 1346, 1363, 1368, 1367, 1355, 1363, 1367, 1366, 1356, 1356, 1363, 1360, 1357, 1354, 1364, 1357, 1367, 1354, 1374, 1362, 1357, 1360, 1352, 1354, 1361, 1359, 1360, 1356, 1346, 1369, 1361, 1354, 1347, 1362, 1371, 1353, 1347, 1345, 1366, 1351, 1346, 1368, 1341, 1348, 1359, 1357, 1357, 1367, 1371, 1357, 1365, 1355, 1358, 1366, 1359, 1364, 1359, 1365, 1357, 1354, 1356, 1358, 1362, 1379, 1360, 1351, 1355, 1344, 1357, 1354, 1350, 1362]
