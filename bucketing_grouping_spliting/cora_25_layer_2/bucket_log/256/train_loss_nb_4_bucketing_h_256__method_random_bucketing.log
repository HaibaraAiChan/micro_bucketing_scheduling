main start at this time 1698469041.090447
-----------------------------------------before load data 
 Nvidia-smi: 0.166015625 GB
    Memory Allocated: 0.0  GigaBytes
Max Memory Allocated: 0.0  GigaBytes

  NumNodes: 2708
  NumEdges: 10556
  NumFeats: 1433
  NumClasses: 7
  NumTrainingSamples: 140
  NumValidationSamples: 500
  NumTestSamples: 1000
Done loading data from cached files.
success----------------------------------------
140
500
2068
# Nodes: 2708
# Edges: 10556
# Train: 140
# Val: 500
# Test: 2068
# Classes: 7

----------------------------------------start of run function 
 Nvidia-smi: 0.166015625 GB
    Memory Allocated: 0.0  GigaBytes
Max Memory Allocated: 0.0  GigaBytes

generate_dataloader_bucket_block=======
get_in_degree_bucketing src global nid  tensor([  48,  128,  122,   89,  129,   69,   97,  131,   99,  101,   74,  118,
           5,   12,   51,   77,   85,    7,   34,  107,   78,  138,   17,    3,
          30,   11,   45,   98,   10,   68,   66,   25,  102,   80,  137,  106,
          62,   82,  121,  116,   41,  123,    2,  114,   13,    0,   38,  132,
          26,   50,  111,  103,   59,   93,    1,  130,   84,  119,    4,  104,
          61,   44,   64,  135,   90,   20,   27,   96,   37,   72,  120,   14,
          58,   23,  109,   53,    9,  110,   21,   87,   71,   29,   52,   39,
          43,   88,    8,  108,  117,  126,   65,  105,   67,  125,   24,  133,
          40,  112,   49,   15,   47,  124,   42,    6,  115,  139,   16,   32,
         113,   31,   22,  134,   83,   94,   73,   76,   63,   36,   92,   18,
          95,   46,  136,   54,   57,   60,   70,   86,   19,   55,  127,   91,
          33,  100,   79,   56,   28,   81,   75,   35,  598,  714, 1031, 1662,
        1666, 2041, 2205, 2206, 2471,  233,  370,  392, 2270, 2454, 2455,  258,
         884, 1087, 1094, 1157, 1401, 1530, 1585, 1653, 2463,  441,  701,  604,
        1013, 1351, 1914, 1920, 1926, 2189,  661, 1353,  834, 2169, 2604,  281,
        1358, 1589,  544,  586, 1042, 1118, 1416, 1517, 2052, 2155, 2419,  255,
         388,  446,  454,  554,  581,  842, 1029, 1343, 1507, 1538, 1616, 1690,
        1851, 2010, 2030, 2112, 2165, 2166, 1629, 1659, 2546, 1001, 1318, 2661,
        2662,  457,  710, 1392, 2213, 2214, 2215,  659, 1803, 1065, 2487, 2488,
         208,  541,  971, 1113, 1650, 1219, 1329, 1418,  236,  306, 1776,  927,
        1315, 1316, 2140, 2544,  697,  738, 2162, 2343, 1655, 1839,  733, 1986,
        2303, 2667, 2668, 1521,  476, 2545,  391, 2631, 1301, 1344, 2011, 2317,
        1251, 1448, 1561, 1623, 1871, 1878, 2256,  257, 1117, 2049, 2144, 2329,
        2504, 2461,  485, 1138, 1634,  589,  802,  980, 1158, 1910, 2251, 2252,
        1076, 1501,  175,  596,  644,  332, 1454,  610, 2288, 2506, 1701, 1810,
         633, 1862, 2582,  429,  862,  863, 1160,  379,  479,  904, 1022, 1959,
        1441,  758, 1169, 1762, 2492, 2643,  484,  608, 1775, 1790,  580,  609,
         615, 1067, 1287, 1627, 1725, 2651,  550,  950, 1495, 2151,  652,  654,
        1982, 2017,  284, 2223, 2224, 2226,  646, 1537, 1549, 1901, 1016, 1256,
        1761, 2175, 2176,  401,  864, 2210, 1080, 1309, 2312, 1582, 2624, 2701,
        1209, 1737, 2616, 2095,  155,  156,  817, 1072, 2269, 2374, 2375,  606,
        2360, 2578, 2217, 1190, 2427, 1103,  483,  514,  816, 1842, 2405,  158,
        2034, 2075, 2077, 1715, 2159,  318, 1787,  153, 1789, 1337, 1661,  176,
        2094,  426, 1346,  459, 1772, 1779, 1805, 2093,  289, 1769, 1045, 1739,
         723, 2614,  567, 1161, 1262, 1599, 2279, 1043, 2310, 2164,  206, 2691,
         963, 2645, 1139, 1467, 2053, 2172, 2182, 1349, 1522, 1532, 1965, 2357,
         152, 2399, 2400,  841, 1394,  696, 1908, 1741,  162, 1882,  415, 2012,
        1527,  743,  851, 2178, 1713,  815, 2013, 1174, 1288, 1847,  269, 1996,
        1647, 2157, 2209,  259, 2537, 1551, 2045, 2079,  239,  543,  619,  771,
        1156, 1293, 1628, 2021, 2418, 1721, 2476,  282,  540, 2628,  458, 2363,
         201, 1636, 2139, 2141,  399,  452, 1670, 1777, 1784, 2082,  507,  866,
        1364,  487, 2080, 1090, 1093, 1271, 2367,  163, 1579, 1367, 1622, 2478,
        1372,  373, 1602,  973,  660,  910, 1780,  970, 1632, 2444, 2642,  279,
         518, 1850, 1973,  747, 1884, 1594, 1234, 1702, 1703, 2238,  406, 1520,
        2581,  195,  675,  934, 1649, 1966, 2263, 2355, 2490,  449,  558,  797,
         876, 1035, 1136, 1189, 1214, 1723, 1745, 1751, 2018, 1322, 1146, 1505,
        1552, 1640, 1781, 2106, 2107,  898, 1836, 1560, 1786, 2145,  334,  456,
         693,  734,  736,  861, 1303, 1535, 1580, 1838, 2054, 2074, 2181, 2183,
        2197, 2199, 2200, 2201, 1604, 2366,  831,  767, 2184, 1336, 2295, 1939,
         210,  323,  651,  787, 1079, 1983, 2020,  330, 1046, 2001, 2122, 2123,
        2380,  286,  588,  698,  911, 1051, 2040, 2119, 2120, 2121, 2056,  603,
        2097,  412,  447, 1849, 1687,  347,  423,  527, 2180,  583, 2222, 2225,
         895, 1296, 1913])
get_in_degree_bucketing dst global nid  tensor([ 48, 128, 122,  89, 129,  69,  97, 131,  99, 101,  74, 118,   5,  12,
         51,  77,  85,   7,  34, 107,  78, 138,  17,   3,  30,  11,  45,  98,
         10,  68,  66,  25, 102,  80, 137, 106,  62,  82, 121, 116,  41, 123,
          2, 114,  13,   0,  38, 132,  26,  50, 111, 103,  59,  93,   1, 130,
         84, 119,   4, 104,  61,  44,  64, 135,  90,  20,  27,  96,  37,  72,
        120,  14,  58,  23, 109,  53,   9, 110,  21,  87,  71,  29,  52,  39,
         43,  88,   8, 108, 117, 126,  65, 105,  67, 125,  24, 133,  40, 112,
         49,  15,  47, 124,  42,   6, 115, 139,  16,  32, 113,  31,  22, 134,
         83,  94,  73,  76,  63,  36,  92,  18,  95,  46, 136,  54,  57,  60,
         70,  86,  19,  55, 127,  91,  33, 100,  79,  56,  28,  81,  75,  35])
get_in_degree_bucketing corresponding in degs tensor([ 9,  4,  4, 10,  2,  7,  2,  2,  6,  3,  9, 19,  3,  4,  6,  2,  3,  1,
         1,  4,  3,  3,  5,  1,  6,  2,  6,  1,  2,  3,  1,  4,  8,  3,  4,  1,
         1,  2,  7,  2,  4,  4,  5,  3,  2,  3,  4,  5,  5,  1,  6,  6, 10,  4,
         3,  3,  5,  6,  5,  4,  5,  3,  3,  3,  4,  5,  4,  1,  3,  2,  5,  5,
         1,  1, 25,  3,  2,  5,  2,  3,  3,  2,  5,  7,  6, 25,  3,  3,  2,  6,
        10,  4,  3,  2,  7,  9,  3,  4,  2,  4,  2,  5,  2,  4,  1,  8,  4,  4,
         3,  1,  5,  1,  2, 11, 12,  3,  1,  8,  2,  5, 21,  2,  1,  2,  1,  3,
         2,  4,  1, 12,  1,  6,  9,  2,  2,  4,  1,  4,  6,  3])
len(bkt)  20
local bkt nids  tensor([ 17,  18,  23,  27,  30,  35,  36,  49,  67,  72,  73, 104, 109, 111,
        116, 122, 124, 128, 130, 136])
len(bkt)  25
local bkt nids  tensor([  4,   6,   7,  15,  25,  28,  37,  39,  44,  69,  76,  78,  81,  88,
         93,  98, 100, 102, 112, 118, 121, 123, 126, 133, 134])
len(bkt)  26
local bkt nids  tensor([  9,  12,  16,  20,  21,  29,  33,  43,  45,  54,  55,  61,  62,  63,
         68,  75,  79,  80,  86,  87,  92,  96, 108, 115, 125, 139])
len(bkt)  22
local bkt nids  tensor([  1,   2,  13,  19,  31,  34,  40,  41,  46,  53,  59,  64,  66,  91,
         97,  99, 103, 106, 107, 127, 135, 137])
len(bkt)  15
local bkt nids  tensor([ 22,  42,  47,  48,  56,  58,  60,  65,  70,  71,  77,  82, 101, 110,
        119])
len(bkt)  11
local bkt nids  tensor([  8,  14,  24,  26,  50,  51,  57,  84,  89, 131, 138])
len(bkt)  4
local bkt nids  tensor([ 5, 38, 83, 94])
len(bkt)  3
local bkt nids  tensor([ 32, 105, 117])
len(bkt)  4
local bkt nids  tensor([  0,  10,  95, 132])
len(bkt)  3
local bkt nids  tensor([ 3, 52, 90])
len(bkt)  1
local bkt nids  tensor([113])
len(bkt)  2
local bkt nids  tensor([114, 129])
len(bkt)  1
local bkt nids  tensor([11])
len(bkt)  1
local bkt nids  tensor([120])
len(bkt)  2
local bkt nids  tensor([74, 85])
bucket partitioner: bkt_dst_nodes_list_local  [tensor([ 17,  18,  23,  27,  30,  35,  36,  49,  67,  72,  73, 104, 109, 111,
        116, 122, 124, 128, 130, 136]), tensor([  4,   6,   7,  15,  25,  28,  37,  39,  44,  69,  76,  78,  81,  88,
         93,  98, 100, 102, 112, 118, 121, 123, 126, 133, 134]), tensor([  9,  12,  16,  20,  21,  29,  33,  43,  45,  54,  55,  61,  62,  63,
         68,  75,  79,  80,  86,  87,  92,  96, 108, 115, 125, 139]), tensor([  1,   2,  13,  19,  31,  34,  40,  41,  46,  53,  59,  64,  66,  91,
         97,  99, 103, 106, 107, 127, 135, 137]), tensor([ 22,  42,  47,  48,  56,  58,  60,  65,  70,  71,  77,  82, 101, 110,
        119]), tensor([  8,  14,  24,  26,  50,  51,  57,  84,  89, 131, 138]), tensor([ 5, 38, 83, 94]), tensor([ 32, 105, 117]), tensor([  0,  10,  95, 132]), tensor([ 3, 52, 90]), tensor([113]), tensor([114, 129]), tensor([11]), tensor([120]), tensor([74, 85])]
---||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||--
bkt_dst_nodes_list = self.get_in_degree_bucketing() spend:  0.011275291442871094
self.gen_batches_seeds_list(bkt_dst_nodes_list_local) spend  0.0007243156433105469
local_to_global: src global  tensor([  48,  128,  122,   89,  129,   69,   97,  131,   99,  101,   74,  118,
           5,   12,   51,   77,   85,    7,   34,  107,   78,  138,   17,    3,
          30,   11,   45,   98,   10,   68,   66,   25,  102,   80,  137,  106,
          62,   82,  121,  116,   41,  123,    2,  114,   13,    0,   38,  132,
          26,   50,  111,  103,   59,   93,    1,  130,   84,  119,    4,  104,
          61,   44,   64,  135,   90,   20,   27,   96,   37,   72,  120,   14,
          58,   23,  109,   53,    9,  110,   21,   87,   71,   29,   52,   39,
          43,   88,    8,  108,  117,  126,   65,  105,   67,  125,   24,  133,
          40,  112,   49,   15,   47,  124,   42,    6,  115,  139,   16,   32,
         113,   31,   22,  134,   83,   94,   73,   76,   63,   36,   92,   18,
          95,   46,  136,   54,   57,   60,   70,   86,   19,   55,  127,   91,
          33,  100,   79,   56,   28,   81,   75,   35,  598,  714, 1031, 1662,
        1666, 2041, 2205, 2206, 2471,  233,  370,  392, 2270, 2454, 2455,  258,
         884, 1087, 1094, 1157, 1401, 1530, 1585, 1653, 2463,  441,  701,  604,
        1013, 1351, 1914, 1920, 1926, 2189,  661, 1353,  834, 2169, 2604,  281,
        1358, 1589,  544,  586, 1042, 1118, 1416, 1517, 2052, 2155, 2419,  255,
         388,  446,  454,  554,  581,  842, 1029, 1343, 1507, 1538, 1616, 1690,
        1851, 2010, 2030, 2112, 2165, 2166, 1629, 1659, 2546, 1001, 1318, 2661,
        2662,  457,  710, 1392, 2213, 2214, 2215,  659, 1803, 1065, 2487, 2488,
         208,  541,  971, 1113, 1650, 1219, 1329, 1418,  236,  306, 1776,  927,
        1315, 1316, 2140, 2544,  697,  738, 2162, 2343, 1655, 1839,  733, 1986,
        2303, 2667, 2668, 1521,  476, 2545,  391, 2631, 1301, 1344, 2011, 2317,
        1251, 1448, 1561, 1623, 1871, 1878, 2256,  257, 1117, 2049, 2144, 2329,
        2504, 2461,  485, 1138, 1634,  589,  802,  980, 1158, 1910, 2251, 2252,
        1076, 1501,  175,  596,  644,  332, 1454,  610, 2288, 2506, 1701, 1810,
         633, 1862, 2582,  429,  862,  863, 1160,  379,  479,  904, 1022, 1959,
        1441,  758, 1169, 1762, 2492, 2643,  484,  608, 1775, 1790,  580,  609,
         615, 1067, 1287, 1627, 1725, 2651,  550,  950, 1495, 2151,  652,  654,
        1982, 2017,  284, 2223, 2224, 2226,  646, 1537, 1549, 1901, 1016, 1256,
        1761, 2175, 2176,  401,  864, 2210, 1080, 1309, 2312, 1582, 2624, 2701,
        1209, 1737, 2616, 2095,  155,  156,  817, 1072, 2269, 2374, 2375,  606,
        2360, 2578, 2217, 1190, 2427, 1103,  483,  514,  816, 1842, 2405,  158,
        2034, 2075, 2077, 1715, 2159,  318, 1787,  153, 1789, 1337, 1661,  176,
        2094,  426, 1346,  459, 1772, 1779, 1805, 2093,  289, 1769, 1045, 1739,
         723, 2614,  567, 1161, 1262, 1599, 2279, 1043, 2310, 2164,  206, 2691,
         963, 2645, 1139, 1467, 2053, 2172, 2182, 1349, 1522, 1532, 1965, 2357,
         152, 2399, 2400,  841, 1394,  696, 1908, 1741,  162, 1882,  415, 2012,
        1527,  743,  851, 2178, 1713,  815, 2013, 1174, 1288, 1847,  269, 1996,
        1647, 2157, 2209,  259, 2537, 1551, 2045, 2079,  239,  543,  619,  771,
        1156, 1293, 1628, 2021, 2418, 1721, 2476,  282,  540, 2628,  458, 2363,
         201, 1636, 2139, 2141,  399,  452, 1670, 1777, 1784, 2082,  507,  866,
        1364,  487, 2080, 1090, 1093, 1271, 2367,  163, 1579, 1367, 1622, 2478,
        1372,  373, 1602,  973,  660,  910, 1780,  970, 1632, 2444, 2642,  279,
         518, 1850, 1973,  747, 1884, 1594, 1234, 1702, 1703, 2238,  406, 1520,
        2581,  195,  675,  934, 1649, 1966, 2263, 2355, 2490,  449,  558,  797,
         876, 1035, 1136, 1189, 1214, 1723, 1745, 1751, 2018, 1322, 1146, 1505,
        1552, 1640, 1781, 2106, 2107,  898, 1836, 1560, 1786, 2145,  334,  456,
         693,  734,  736,  861, 1303, 1535, 1580, 1838, 2054, 2074, 2181, 2183,
        2197, 2199, 2200, 2201, 1604, 2366,  831,  767, 2184, 1336, 2295, 1939,
         210,  323,  651,  787, 1079, 1983, 2020,  330, 1046, 2001, 2122, 2123,
        2380,  286,  588,  698,  911, 1051, 2040, 2119, 2120, 2121, 2056,  603,
        2097,  412,  447, 1849, 1687,  347,  423,  527, 2180,  583, 2222, 2225,
         895, 1296, 1913])
local_to_global: local nid  tensor([  1,   2,   4,   5,   6,   7,   8,   9,  12,  13,  14,  15,  16,  17,
         18,  19,  20,  21,  22,  23,  24,  25,  26,  27,  28,  29,  30,  31,
         33,  34,  35,  36,  37,  38,  39,  40,  41,  42,  43,  44,  45,  46,
         47,  48,  49,  50,  51,  53,  54,  55,  56,  57,  58,  59,  60,  61,
         62,  63,  64,  65,  66,  67,  68,  69,  70,  71,  72,  73,  75,  76,
         77,  78,  79,  80,  81,  82,  83,  84,  86,  87,  88,  89,  91,  92,
         93,  94,  96,  97,  98,  99, 100, 101, 102, 103, 104, 106, 107, 108,
        109, 110, 111, 112, 115, 116, 118, 119, 121, 122, 123, 124, 125, 126,
        127, 128, 130, 131, 133, 134, 135, 136, 137, 138, 139])
local_to_global: local nid after sort  tensor([  1,   2,   4,   5,   6,   7,   8,   9,  12,  13,  14,  15,  16,  17,
         18,  19,  20,  21,  22,  23,  24,  25,  26,  27,  28,  29,  30,  31,
         33,  34,  35,  36,  37,  38,  39,  40,  41,  42,  43,  44,  45,  46,
         47,  48,  49,  50,  51,  53,  54,  55,  56,  57,  58,  59,  60,  61,
         62,  63,  64,  65,  66,  67,  68,  69,  70,  71,  72,  73,  75,  76,
         77,  78,  79,  80,  81,  82,  83,  84,  86,  87,  88,  89,  91,  92,
         93,  94,  96,  97,  98,  99, 100, 101, 102, 103, 104, 106, 107, 108,
        109, 110, 111, 112, 115, 116, 118, 119, 121, 122, 123, 124, 125, 126,
        127, 128, 130, 131, 133, 134, 135, 136, 137, 138, 139])
local_to_global: local nid  tensor([114, 132,  85,   3, 129, 113])
local_to_global: local nid after sort  tensor([  3,  85, 113, 114, 129, 132])
local_to_global: local nid  tensor([ 32,  74, 120, 105,  52,  10])
local_to_global: local nid after sort  tensor([ 10,  32,  52,  74, 105, 120])
local_to_global: local nid  tensor([117,   0,  95,  90,  11])
local_to_global: local nid after sort  tensor([  0,  11,  90,  95, 117])
local_to_global: local_batched_seeds_list  [tensor([  1,   2,   4,   5,   6,   7,   8,   9,  12,  13,  14,  15,  16,  17,
         18,  19,  20,  21,  22,  23,  24,  25,  26,  27,  28,  29,  30,  31,
         33,  34,  35,  36,  37,  38,  39,  40,  41,  42,  43,  44,  45,  46,
         47,  48,  49,  50,  51,  53,  54,  55,  56,  57,  58,  59,  60,  61,
         62,  63,  64,  65,  66,  67,  68,  69,  70,  71,  72,  73,  75,  76,
         77,  78,  79,  80,  81,  82,  83,  84,  86,  87,  88,  89,  91,  92,
         93,  94,  96,  97,  98,  99, 100, 101, 102, 103, 104, 106, 107, 108,
        109, 110, 111, 112, 115, 116, 118, 119, 121, 122, 123, 124, 125, 126,
        127, 128, 130, 131, 133, 134, 135, 136, 137, 138, 139]), tensor([114, 132,  85,   3, 129, 113]), tensor([ 32,  74, 120, 105,  52,  10]), tensor([117,   0,  95,  90,  11])]
local_to_global: global_batched_seeds_list  [tensor([128, 122, 129,  69,  97, 131,  99, 101,   5,  12,  51,  77,  85,   7,
         34, 107,  78, 138,  17,   3,  30,  11,  45,  98,  10,  68,  66,  25,
         80, 137, 106,  62,  82, 121, 116,  41, 123,   2, 114,  13,   0,  38,
        132,  26,  50, 111, 103,  93,   1, 130,  84, 119,   4, 104,  61,  44,
         64, 135,  90,  20,  27,  96,  37,  72, 120,  14,  58,  23,  53,   9,
        110,  21,  87,  71,  29,  52,  39,  43,   8, 108, 117, 126, 105,  67,
        125,  24,  40, 112,  49,  15,  47, 124,  42,   6, 115,  16,  32, 113,
         31,  22, 134,  83,  76,  63,  92,  18,  46, 136,  54,  57,  60,  70,
         86,  19, 127,  91, 100,  79,  56,  28,  81,  75,  35]), tensor([89, 88, 94, 73, 55, 33]), tensor([ 74, 102,  59, 109, 139,  95]), tensor([ 48, 118,  65, 133,  36])]
partition total batch output list spend :  0.02203965187072754
self.buckets_partition() spend  sec:  0.012025594711303711
bucketing dataloader: layer  0
bucketing dataloader: the number of batches:  4
bucketing dataloader: global_batched_output_nid_list  [tensor([128, 122, 129,  69,  97, 131,  99, 101,   5,  12,  51,  77,  85,   7,
         34, 107,  78, 138,  17,   3,  30,  11,  45,  98,  10,  68,  66,  25,
         80, 137, 106,  62,  82, 121, 116,  41, 123,   2, 114,  13,   0,  38,
        132,  26,  50, 111, 103,  93,   1, 130,  84, 119,   4, 104,  61,  44,
         64, 135,  90,  20,  27,  96,  37,  72, 120,  14,  58,  23,  53,   9,
        110,  21,  87,  71,  29,  52,  39,  43,   8, 108, 117, 126, 105,  67,
        125,  24,  40, 112,  49,  15,  47, 124,  42,   6, 115,  16,  32, 113,
         31,  22, 134,  83,  76,  63,  92,  18,  46, 136,  54,  57,  60,  70,
         86,  19, 127,  91, 100,  79,  56,  28,  81,  75,  35]), tensor([89, 88, 94, 73, 55, 33]), tensor([ 74, 102,  59, 109, 139,  95]), tensor([ 48, 118,  65, 133,  36])]
check_connections_block*********************************
connection check : local_output_nid  [1, 2, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 115, 116, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 134, 135, 136, 137, 138, 139]
connection check : local_output_nid  [3, 85, 113, 114, 129, 132]
connection check : local_output_nid  [10, 32, 52, 74, 105, 120]
connection check : local_output_nid  [0, 11, 90, 95, 117]

block_gen_time in "generate_blocks_for_one_layer_block"  0.010555744171142578

bucketing dataloader: global src_list  [tensor([ 128,  122,  129,   69,   97,  131,   99,  101,    5,   12,   51,   77,
          85,    7,   34,  107,   78,  138,   17,    3,   30,   11,   45,   98,
          10,   68,   66,   25,   80,  137,  106,   62,   82,  121,  116,   41,
         123,    2,  114,   13,    0,   38,  132,   26,   50,  111,  103,   93,
           1,  130,   84,  119,    4,  104,   61,   44,   64,  135,   90,   20,
          27,   96,   37,   72,  120,   14,   58,   23,   53,    9,  110,   21,
          87,   71,   29,   52,   39,   43,    8,  108,  117,  126,  105,   67,
         125,   24,   40,  112,   49,   15,   47,  124,   42,    6,  115,   16,
          32,  113,   31,   22,  134,   83,   76,   63,   92,   18,   46,  136,
          54,   57,   60,   70,   86,   19,  127,   91,  100,   79,   56,   28,
          81,   75,   35,  233,  370,  392, 2270, 2454, 2455,  441,  701,  604,
        1013, 1351, 1914, 1920, 1926, 2189,  661, 1353,  834, 2169, 2604,  281,
        1358, 1589, 1629, 1659, 2546, 1001, 1318, 2661, 2662,  457,  710, 1392,
        2213, 2214, 2215,  659, 1803, 1065, 2487, 2488,  208,  541,  971, 1113,
        1650, 1219, 1329, 1418,  236,  306, 1776,  927, 1315, 1316, 2140, 2544,
         697,  738, 1416, 2162, 2343, 1655, 1839,  733, 1986, 2303, 2667, 2668,
        1521,  476, 2545,  391, 2631, 1301, 1344, 2011, 2317,  257, 1117, 2049,
        2144, 2329, 2504, 2461,  485, 1138, 1634,  589,  802,  980, 1158, 1910,
        2251, 2252, 1076, 1501,  175,  596,  644,  332, 1454, 1666,  610, 2288,
        2506, 1701, 1810,  633, 1862, 2582,  429,  862,  863, 1160,  379,  479,
         904, 1022, 1959, 1441,  758, 1169, 1762, 2492, 2643,  139,  484,  608,
        1775, 1790,  550,  950, 1495, 2151,  652,  654,   88, 1982, 2017,  284,
        2223, 2224, 2226,  646, 1537, 1549, 1901, 1016, 1256, 1761, 2175, 2176,
         401,  864, 2210, 1080, 1309, 2312, 1582, 2624, 2701, 1209, 1737, 2616,
        2095,  155,  156,  817, 1072, 2269, 2374, 2375,  606, 2360, 2578, 2217,
        1190, 2427, 1103,  483,  514,  816, 1842, 2405,  158, 2034, 2075, 2077,
        1715, 2159, 1739,  723, 2614,  567, 1161, 1262, 1599, 2279, 1043, 2310,
         842, 2164,  206, 2691,  963, 2645, 1139, 1467, 2053, 2172, 2182, 1349,
        1522, 1532, 1965, 2357,  152, 1530, 1653, 2399, 2400,  269, 1996, 1647,
        2157, 2209,  259, 2537, 1551, 1623, 2045, 2079,   59, 1721, 2476, 2651,
         282,  540, 2628,  458, 2363,  201,  598, 1636, 2139, 2141,  507,  866,
        1364,  487, 2080, 1090, 1093, 1271, 2367,  163, 1579,  109, 1367, 1622,
        2478, 1372,  373, 1042, 1602,  973,  970, 1632, 2444, 2642,  279,  518,
        1850, 1973,  747, 1884, 1594, 1234, 1702, 1703, 2238,  406, 1520, 2581,
        2018, 2178, 1322,  898, 1836, 1560, 1786, 2082, 2145, 1604, 2366,  831,
         767, 2418,   55, 1527, 2184, 1336, 2295, 1939,  330, 1046, 2001, 2122,
        2123, 2380, 2056,  603, 2097,  412,  447, 1616, 1849, 1687,  347,  423,
         527, 2180,  583, 2222, 2225,  895, 1296, 1913]), tensor([  89,   88,   94,   73,   55,   33,  258,  884, 1087, 1094, 1157, 1401,
        1530, 1585, 1653, 2463,   76,  130,  841, 2017, 1394,  696, 1908, 1741,
         162, 1882,  415, 2012, 1527,  743,  851, 2010, 2178, 1309, 1713,  815,
        2013, 2011, 1174, 1288, 1847,  195,  586,  675,  733,  934, 1649, 1966,
        2263, 2355, 2357, 2490,  449,  558,  797,  876, 1035, 1136, 1189, 1214,
        1358, 1723, 1745, 1751,   60,  210,  323,  651,  771,  787, 1079, 1156,
        1983, 2020, 2021,  286,  588,  698,  911, 1051, 2040, 2119, 2120, 2121]), tensor([  74,  102,   59,  109,  139,   95,  544,  586, 1042, 1118, 1416, 1517,
        2052, 2155, 2419, 1251, 1448, 1561, 1623, 1871, 1878, 2256,  105,  580,
         609,  615, 1067, 1287, 1358, 1627, 1725, 2651,  318, 1787,  124,  153,
        1789, 1337, 1661,  176, 2094,  426,  133, 1346,  459, 1772, 1779,  610,
        1805, 2093, 2095,  289,  236, 1769,  306, 1045,   18,  103,  660,  910,
        1780, 2045,  334,  456,  693,  734,  736,  861, 1303, 1535, 1580, 1602,
        1628, 1838, 2054, 2074, 2181, 2182, 2183, 2197, 2199, 2200, 2201]), tensor([  48,  118,   65,  133,   36,  598,  714, 1031, 1662, 1666, 2041, 2205,
        2206, 2471,  255,  388,  446,  454,  554,  581,  842, 1029, 1343, 1507,
        1538, 1616, 1690, 1851, 2010, 2030, 2112, 2165, 2166,  239,  543,  619,
         771, 1156, 1293, 1628, 2021, 2418, 2419,  109,  399,  452, 1623, 1670,
        1777, 1784, 2045, 2082, 1146, 1505, 1552, 1640, 1781, 2094, 2106, 2107])]
----------------------------------------
bucketing dataloader: layer  1
bucketing dataloader: num of batch  4
check_connections_block*********************************
connection check : local_output_nid  [1, 2, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 115, 116, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 134, 135, 136, 137, 138, 139, 149, 150, 151, 152, 153, 154, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 186, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 144, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 105, 318, 319, 320, 321, 330, 331, 332, 333, 334, 335, 85, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 197, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 161, 163, 433, 434, 454, 455, 456, 457, 458, 459, 460, 461, 267, 462, 463, 52, 473, 474, 329, 475, 476, 477, 478, 479, 480, 140, 481, 482, 483, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 74, 501, 502, 503, 504, 505, 184, 506, 507, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 548, 447, 549, 557, 558, 559, 560, 489, 561, 580, 581, 582, 583, 472, 129, 444, 584, 585, 586, 587, 595, 596, 597, 598, 599, 600, 610, 611, 612, 613, 614, 202, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626]
connection check : local_output_nid  [3, 85, 113, 114, 129, 132, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 115, 55, 435, 337, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 205, 447, 355, 448, 449, 450, 262, 451, 452, 453, 529, 183, 530, 250, 531, 532, 533, 534, 535, 431, 536, 537, 538, 539, 540, 541, 542, 543, 544, 180, 545, 546, 547, 125, 588, 589, 590, 467, 591, 592, 468, 593, 594, 471, 601, 602, 603, 604, 605, 606, 607, 608, 609]
connection check : local_output_nid  [10, 32, 52, 74, 105, 120, 182, 183, 184, 185, 186, 187, 188, 189, 190, 264, 265, 266, 267, 268, 269, 270, 91, 322, 323, 324, 325, 326, 180, 327, 328, 329, 389, 390, 101, 391, 392, 393, 394, 395, 396, 397, 95, 398, 399, 400, 401, 295, 402, 403, 363, 404, 236, 405, 237, 406, 119, 51, 508, 509, 510, 462, 562, 563, 564, 565, 566, 567, 568, 569, 570, 506, 470, 571, 572, 573, 574, 426, 575, 576, 577, 578, 579]
connection check : local_output_nid  [0, 11, 90, 95, 117, 140, 141, 142, 143, 144, 145, 146, 147, 148, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 464, 465, 466, 467, 468, 469, 470, 471, 472, 190, 74, 484, 485, 267, 486, 487, 488, 462, 489, 550, 551, 552, 553, 554, 396, 555, 556]

block_gen_time in "generate_blocks_for_one_layer_block"  0.008535146713256836

bucketing dataloader: src_list  [tensor([ 128,  122,  129,  ..., 1187, 1911, 1912]), tensor([  89,   88,   94,   73,   55,   33,  258,  884, 1087, 1094, 1157, 1401,
        1530, 1585, 1653, 2463,   76,  130,  841, 2017, 1394,  696, 1908, 1741,
         162, 1882,  415, 2012, 1527,  743,  851, 2010, 2178, 1309, 1713,  815,
        2013, 2011, 1174, 1288, 1847,  195,  586,  675,  733,  934, 1649, 1966,
        2263, 2355, 2357, 2490,  449,  558,  797,  876, 1035, 1136, 1189, 1214,
        1358, 1723, 1745, 1751,   60,  210,  323,  651,  771,  787, 1079, 1156,
        1983, 2020, 2021,  286,  588,  698,  911, 1051, 2040, 2119, 2120, 2121,
        2014, 1494,  737, 1677, 2394,  963, 1153, 1240, 2645,  152, 2434, 1369,
        1443, 2240,  761,   43, 2464,  340,  584, 2018, 1982, 2034, 1487, 2467,
         211, 2137,  277,  571, 1570, 1178, 1474, 1529, 2593, 1268, 1667,  514,
         516,  661,  593, 2182, 1644,  300, 1850,  272,  331,  860, 1668, 2274,
        2450,  160,  745, 1239, 1986,  118,  161, 2016, 1979, 2024,   61, 1625,
        2015, 2102,  995, 1696, 1898, 1344,  471,   25, 1912, 1013, 2424,   74,
        1218, 1224, 2155, 2356,  218, 1817, 1192, 2035,  377,  862, 1682, 1265,
        2268, 2304,  463,  443, 1964, 1971, 1702, 1234, 1010, 1569, 1703,  946,
        1015,   39, 1846, 1280, 1834, 2581, 1706, 2585,  800, 1833, 2359,  834,
        2168, 2584,  915, 1433, 1486, 1740, 1801, 2554,  337, 1199, 1499, 1716,
        1734,  552,  853,  999, 1744, 1389, 1748, 1749, 1287,  565,  768, 1724,
        1589, 1725, 2596, 1426,   37,  164, 1614, 1626, 1671, 1905, 1906, 1907,
        2309,  498, 2022,  885, 1984, 2023, 2156,   65, 1080,  325,  438, 1914,
         897,  239, 1628, 2418,  442, 2383,  893, 1534, 2376, 2122,  665, 2637,
        2001]), tensor([  74,  102,   59,  109,  139,   95,  544,  586, 1042, 1118, 1416, 1517,
        2052, 2155, 2419, 1251, 1448, 1561, 1623, 1871, 1878, 2256,  105,  580,
         609,  615, 1067, 1287, 1358, 1627, 1725, 2651,  318, 1787,  124,  153,
        1789, 1337, 1661,  176, 2094,  426,  133, 1346,  459, 1772, 1779,  610,
        1805, 2093, 2095,  289,  236, 1769,  306, 1045,   18,  103,  660,  910,
        1780, 2045,  334,  456,  693,  734,  736,  861, 1303, 1535, 1580, 1602,
        1628, 1838, 2054, 2074, 2181, 2182, 2183, 2197, 2199, 2200, 2201,  399,
        2347,   94, 1218, 1224,  373,  624, 1025, 1926,  901, 1047,    6,  485,
          61, 1922, 1921, 1468, 1924,  305, 1152,  539, 1131, 2294,  280, 2293,
        1143, 2295,   65,  497, 1848,  505, 2034, 1783, 1767, 1775,  980,  314,
         452, 1777,  228,  417, 1701,  661, 1721, 2476,  744, 1742, 1758, 1765,
        2444, 2445,  534,  883, 1041, 2446, 2447, 2448, 2443,  170,  936, 1216,
        1830, 2307,  481, 1164, 1734,  552,  853, 1716,  999, 1744, 1389, 1748,
        1749, 1229, 1308, 1740, 2596,  628,  687, 2334, 2413, 2597, 1072,  563,
        1624, 1810, 2143, 1367, 1622, 2478, 1015, 1618, 1773,  454, 1013, 1851,
         231,  973,   36,  441,  530, 2086, 2106,  487, 1782, 1670, 1784, 2082,
         519, 1681, 1564, 2318,  114,  234,  826, 2287, 2288, 2481,  556,  741,
         831,  135, 2145, 2329, 2504, 1722, 2046, 2078, 1572,  126, 2079,  138,
        1651,  655, 1193, 1798,  573,  608, 1804, 1571, 1560, 1786,  484, 1790,
         239,  887, 2085,  341, 1776, 1852, 2048,  142,  525,  667, 2472,  763,
        2108, 2202,  964, 1388,  408,  751, 2277, 2056, 1006, 1631, 1841, 1397,
        2068, 2330,  746,  979, 1026, 2163, 1351, 1916, 1892,  100,  315, 1204,
        2072, 2073, 2172, 2057,  597, 1540, 2021, 2055, 2219, 1139, 2133, 2196,
        1515,   52, 1285,  415, 2198, 2131, 2180,  965,  680,  731, 2186]), tensor([  48,  118,   65,  133,   36,  598,  714, 1031, 1662, 1666, 2041, 2205,
        2206, 2471,  255,  388,  446,  454,  554,  581,  842, 1029, 1343, 1507,
        1538, 1616, 1690, 1851, 2010, 2030, 2112, 2165, 2166,  239,  543,  619,
         771, 1156, 1293, 1628, 2021, 2418, 2419,  109,  399,  452, 1623, 1670,
        1777, 1784, 2045, 2082, 1146, 1505, 1552, 1640, 1781, 2094, 2106, 2107,
          24,  297, 2707,  845, 1870,  637, 1636,  201, 1823, 1297,  148, 1385,
         788, 1952, 2381, 2398,    2,   49,  606,  429, 2034, 1951, 2493, 1266,
        1899, 2497,  903, 2022, 1917, 1441, 2188, 1661,  441, 2190, 2189,  306,
         685, 1792,   87,  161, 2016,  836, 1645, 2316,  989, 2436,  643,  747,
        1131, 1133, 1500, 1842, 2185,   56,  412,  447,  539, 1402, 1849, 2050,
         693, 1013, 1224, 2485,   88,  711,  279,  910, 2182, 1274, 1069,  887,
        1759,  984,   55, 1080,  897, 2172, 2057,  597, 2054, 1540, 2055, 1042,
         142,   57,  572,   74,  497, 1848,  102, 1346,  318,  236,  459,  426,
         124,  544, 1089, 1769, 1258, 1783, 1767, 1775,  980,  314,  303,  308,
         519, 1624, 2143, 1072, 2096,  139,  341, 1772, 1776, 1852, 2048,  126,
          18, 1506, 2254,  773, 1788,  330, 1699, 1778, 2591,  350, 1998,  530,
        2086])]
block collection to dataloader spend  1.049041748046875e-05
step  0
----------------------------------------before batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.515625 GB
    Memory Allocated: 0.07308387756347656  GigaBytes
Max Memory Allocated: 0.07308387756347656  GigaBytes

----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.796875 GB
    Memory Allocated: 0.2551455497741699  GigaBytes
Max Memory Allocated: 0.2637300491333008  GigaBytes

----------------------------------------after loss function
 Nvidia-smi: 1.796875 GB
    Memory Allocated: 0.25514984130859375  GigaBytes
Max Memory Allocated: 0.2637300491333008  GigaBytes

step  1
----------------------------------------before batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.93359375 GB
    Memory Allocated: 0.13587474822998047  GigaBytes
Max Memory Allocated: 0.36905336380004883  GigaBytes

----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.93359375 GB
    Memory Allocated: 0.17280340194702148  GigaBytes
Max Memory Allocated: 0.36905336380004883  GigaBytes

----------------------------------------after loss function
 Nvidia-smi: 1.93359375 GB
    Memory Allocated: 0.1728043556213379  GigaBytes
Max Memory Allocated: 0.36905336380004883  GigaBytes

step  2
----------------------------------------before batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.99609375 GB
    Memory Allocated: 0.13663387298583984  GigaBytes
Max Memory Allocated: 0.36905336380004883  GigaBytes

----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.99609375 GB
    Memory Allocated: 0.18094301223754883  GigaBytes
Max Memory Allocated: 0.36905336380004883  GigaBytes

----------------------------------------after loss function
 Nvidia-smi: 1.99609375 GB
    Memory Allocated: 0.18094396591186523  GigaBytes
Max Memory Allocated: 0.36905336380004883  GigaBytes

step  3
----------------------------------------before batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.99609375 GB
    Memory Allocated: 0.1358785629272461  GigaBytes
Max Memory Allocated: 0.36905336380004883  GigaBytes

----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 1.99609375 GB
    Memory Allocated: 0.16379451751708984  GigaBytes
Max Memory Allocated: 0.36905336380004883  GigaBytes

----------------------------------------after loss function
 Nvidia-smi: 1.99609375 GB
    Memory Allocated: 0.16379547119140625  GigaBytes
Max Memory Allocated: 0.36905336380004883  GigaBytes

----------------------------------------after optimizer
 Nvidia-smi: 2.08984375 GB
    Memory Allocated: 0.27112770080566406  GigaBytes
Max Memory Allocated: 0.36905336380004883  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9467707872390747
pure train time :  0.6642258167266846
train time :  1.250303030014038
end to end time :  1.3197410106658936
connection check time:  0.016266584396362305
block generation time  0.019090890884399414
generate_dataloader_bucket_block=======
get_in_degree_bucketing src global nid  tensor([  29,   48,   79,   69,   43,   66,  124,   75,   28,   63,   33,  127,
         114,    7,   17,   77,   34,   64,  110,   84,   51,   62,  104,   18,
         121,   25,  139,   54,   10,  109,   49,   67,   22,   57,   70,   19,
          11,  132,   52,   91,   38,  125,   68,   81,    0,  137,  115,  100,
          37,   47,    3,   46,    9,   96,   45,   88,   32,  111,  107,  123,
          86,   99,  122,   78,   76,   94,   40,   58,   41,   80,   73,  130,
          59,   31,  116,  133,   97,   42,   98,   44,   14,   72,   60,  128,
         131,   12,   74,  102,  119,  103,    4,   30,  118,    1,   92,   87,
         106,  101,   15,   36,  136,   53,   39,   24,   50,  112,    6,   65,
          71,  135,  113,   35,   82,   93,  138,   95,   83,  129,   90,   16,
           8,   13,   56,   26,  117,  120,   21,   23,   89,    2,   27,  105,
          85,    5,  126,   55,  108,  134,   20,   61,  963, 2645,  598,  714,
        1031, 1662, 1666, 2041, 2205, 2206, 2471,  603, 2097,  604, 1013, 1351,
        1914, 1920, 1926, 2189,  152, 1530, 1653, 2399, 2400, 2631,  306, 1367,
        1622, 2478,  583, 2222, 2223, 2224, 2225, 1687, 1322,  286,  588,  698,
         911, 1051, 2040, 2119, 2120, 2121, 2604,  610, 2288, 2506,  208,  927,
        1315, 1316, 2140,  659, 1803, 1358, 1209, 1737, 2616,  567, 1161, 1262,
        1599, 2279,  284, 2226,  457,  710, 1392, 2213, 2214, 2215,  485,  401,
         864, 1065, 2210, 1560, 1786, 2082, 2145,  589,  802,  980, 1158, 1910,
        2251, 2252, 1301, 1344, 2011, 2317,  660,  910, 1623, 1780, 2045,  767,
         476, 2545, 1661, 2093,  153,  176, 1045, 1346, 2092, 2095,  289,  563,
        1779,  519,  236, 1787, 2094, 1772, 1785,  426,  459, 2034,  282,  540,
        2628, 1234, 1702, 1703, 2238, 2418,  441, 2184, 1939, 1655, 1839,  379,
         479,  904, 1022, 1959, 1139, 1467, 2053, 2172, 2182,  330, 1046, 2001,
        2122, 2123, 2380,  429,  862,  863, 1160,  458, 2363,  391, 1986,  347,
         423,  527, 2180,  633, 1862, 2582, 2144, 2329, 2504,  973, 1602, 2056,
        1190, 2427,  163, 1579, 2544, 1604, 2366,  723, 2614, 2217,  733, 1219,
        2303, 2667, 2668, 1527, 1309,  696,  162, 1882, 1732,  851, 1394, 2178,
         815, 1174, 2012, 1658,  841,  300, 1741, 2017, 2010, 2014, 1677, 2013,
        2394,  279,  518, 1850, 1973,  758, 1169, 1762, 2492, 2643,  541,  971,
        1113, 1650, 2455, 1336, 2295, 2454, 1329, 1418, 2018,  195,  586,  675,
         934, 1649, 1966, 2263, 2355, 2357, 2490,  507,  866, 1364, 1715,  175,
         596,  644,  257, 1117, 2049,  449,  558,  797,  876, 1035, 1136, 1189,
        1214, 1723, 1745, 1751, 1982,  580,  609,  615, 1067, 1287, 1627, 1725,
        2651, 1594, 1076, 1501,  399,  452, 1670, 1777, 1784,  661, 1353, 1372,
        1521, 1582, 2624, 2701,  158, 2075, 2077, 1103,  233,  370,  392, 2270,
         834, 2169, 1001, 1318, 2661, 2662,  544, 1042, 1118, 1416, 1517, 2052,
        2155, 2419, 1251, 1448, 1561, 1871, 1878, 2256,  646, 1537, 1549, 1901,
         484,  608, 1775, 1790, 1016, 1256, 1761, 2175, 2176,  697,  738, 2162,
        2343,  255,  388,  446,  454,  554,  581,  842, 1029, 1343, 1507, 1538,
        1616, 1690, 1851, 2030, 2112, 2165, 2166,  652,  654,  898, 1836, 2164,
        2461,  281, 1589, 1090, 1093, 1271, 2367, 1146, 1505, 1552, 1640, 1781,
        2106, 2107,  831, 1739, 1349, 1522, 1532, 1634, 1965,  201, 1636, 1701,
        2139, 2141, 1441,  487, 2080,  373,  239,  543,  619,  771, 1156, 1293,
        1628, 2021,  206, 2691,  747, 1884,  895, 1296, 1913, 1138,  550,  950,
        1495, 2151, 1776,  334,  456,  693,  734,  736,  861, 1303, 1535, 1580,
        1838, 2054, 2074, 2181, 2183, 2197, 2199, 2200, 2201, 1520, 2581,  701,
         155,  156,  817,  970, 1632, 2444, 2642,  269, 1996, 1810,  412,  447,
        1849,  259, 2537,  483,  514,  816, 1842, 2405, 1043, 2310, 2159,  258,
         884, 1087, 1094, 1157, 1401, 1585, 2463,  332, 1454,  606, 2360, 2578,
        1721, 2476, 2487, 2488, 1629, 1659, 2546, 1551, 2079,  210,  323,  651,
         787, 1079, 1983, 2020, 1647, 2157, 2209,  406, 1072, 2269, 2374, 2375,
        1080, 2312])
get_in_degree_bucketing dst global nid  tensor([ 29,  48,  79,  69,  43,  66, 124,  75,  28,  63,  33, 127, 114,   7,
         17,  77,  34,  64, 110,  84,  51,  62, 104,  18, 121,  25, 139,  54,
         10, 109,  49,  67,  22,  57,  70,  19,  11, 132,  52,  91,  38, 125,
         68,  81,   0, 137, 115, 100,  37,  47,   3,  46,   9,  96,  45,  88,
         32, 111, 107, 123,  86,  99, 122,  78,  76,  94,  40,  58,  41,  80,
         73, 130,  59,  31, 116, 133,  97,  42,  98,  44,  14,  72,  60, 128,
        131,  12,  74, 102, 119, 103,   4,  30, 118,   1,  92,  87, 106, 101,
         15,  36, 136,  53,  39,  24,  50, 112,   6,  65,  71, 135, 113,  35,
         82,  93, 138,  95,  83, 129,  90,  16,   8,  13,  56,  26, 117, 120,
         21,  23,  89,   2,  27, 105,  85,   5, 126,  55, 108, 134,  20,  61])
get_in_degree_bucketing corresponding in degs tensor([ 2,  9,  2,  7,  6,  1,  5,  6,  1,  1,  9,  1,  3,  1,  5,  2,  1,  3,
         5,  5,  6,  1,  4,  5,  7,  4,  8,  2,  2, 25,  2,  3,  5,  1,  2,  1,
         2,  5,  5,  6,  4,  2,  3,  4,  3,  4,  1,  2,  3,  2,  1,  2,  2,  1,
         6, 25,  4,  6,  4,  4,  4,  6,  4,  3,  3, 11,  3,  1,  4,  3, 12,  3,
        10,  1,  2,  9,  2,  2,  1,  3,  5,  2,  3,  4,  2,  4,  9,  8,  6,  6,
         5,  6, 19,  3,  2,  3,  1,  3,  4,  8,  1,  3,  7,  7,  1,  4,  4, 10,
         3,  3,  3,  3,  2,  4,  3, 21,  2,  2,  4,  4,  3,  2,  4,  5,  2,  5,
         2,  1, 10,  5,  4,  4,  3,  3,  6, 12,  3,  1,  5,  5])
len(bkt)  20
local bkt nids  tensor([  5,   8,   9,  11,  13,  16,  21,  33,  35,  46,  50,  53,  67,  73,
         78,  96, 100, 104, 127, 137])
len(bkt)  25
local bkt nids  tensor([  0,   2,  15,  27,  28,  30,  34,  36,  41,  47,  49,  51,  52,  74,
         76,  77,  81,  84,  94, 112, 116, 117, 121, 124, 126])
len(bkt)  26
local bkt nids  tensor([ 12,  17,  31,  42,  44,  48,  63,  64,  66,  69,  71,  79,  82,  93,
         95,  97, 101, 108, 109, 110, 111, 114, 120, 132, 133, 136])
len(bkt)  22
local bkt nids  tensor([ 22,  25,  40,  43,  45,  56,  58,  59,  60,  62,  68,  83,  85,  98,
        105, 106, 113, 118, 119, 122, 130, 131])
len(bkt)  15
local bkt nids  tensor([  6,  14,  18,  19,  23,  32,  37,  38,  80,  90, 123, 125, 129, 138,
        139])
len(bkt)  11
local bkt nids  tensor([  4,   7,  20,  39,  54,  57,  61,  88,  89,  91, 134])
len(bkt)  4
local bkt nids  tensor([  3,  24, 102, 103])
len(bkt)  3
local bkt nids  tensor([26, 87, 99])
len(bkt)  4
local bkt nids  tensor([ 1, 10, 75, 86])
len(bkt)  3
local bkt nids  tensor([ 72, 107, 128])
len(bkt)  1
local bkt nids  tensor([65])
len(bkt)  2
local bkt nids  tensor([ 70, 135])
len(bkt)  1
local bkt nids  tensor([92])
len(bkt)  1
local bkt nids  tensor([115])
len(bkt)  2
local bkt nids  tensor([29, 55])
bucket partitioner: bkt_dst_nodes_list_local  [tensor([  5,   8,   9,  11,  13,  16,  21,  33,  35,  46,  50,  53,  67,  73,
         78,  96, 100, 104, 127, 137]), tensor([  0,   2,  15,  27,  28,  30,  34,  36,  41,  47,  49,  51,  52,  74,
         76,  77,  81,  84,  94, 112, 116, 117, 121, 124, 126]), tensor([ 12,  17,  31,  42,  44,  48,  63,  64,  66,  69,  71,  79,  82,  93,
         95,  97, 101, 108, 109, 110, 111, 114, 120, 132, 133, 136]), tensor([ 22,  25,  40,  43,  45,  56,  58,  59,  60,  62,  68,  83,  85,  98,
        105, 106, 113, 118, 119, 122, 130, 131]), tensor([  6,  14,  18,  19,  23,  32,  37,  38,  80,  90, 123, 125, 129, 138,
        139]), tensor([  4,   7,  20,  39,  54,  57,  61,  88,  89,  91, 134]), tensor([  3,  24, 102, 103]), tensor([26, 87, 99]), tensor([ 1, 10, 75, 86]), tensor([ 72, 107, 128]), tensor([65]), tensor([ 70, 135]), tensor([92]), tensor([115]), tensor([29, 55])]
---||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||--
bkt_dst_nodes_list = self.get_in_degree_bucketing() spend:  0.012433528900146484
self.gen_batches_seeds_list(bkt_dst_nodes_list_local) spend  0.0002009868621826172
local_to_global: src global  tensor([  29,   48,   79,   69,   43,   66,  124,   75,   28,   63,   33,  127,
         114,    7,   17,   77,   34,   64,  110,   84,   51,   62,  104,   18,
         121,   25,  139,   54,   10,  109,   49,   67,   22,   57,   70,   19,
          11,  132,   52,   91,   38,  125,   68,   81,    0,  137,  115,  100,
          37,   47,    3,   46,    9,   96,   45,   88,   32,  111,  107,  123,
          86,   99,  122,   78,   76,   94,   40,   58,   41,   80,   73,  130,
          59,   31,  116,  133,   97,   42,   98,   44,   14,   72,   60,  128,
         131,   12,   74,  102,  119,  103,    4,   30,  118,    1,   92,   87,
         106,  101,   15,   36,  136,   53,   39,   24,   50,  112,    6,   65,
          71,  135,  113,   35,   82,   93,  138,   95,   83,  129,   90,   16,
           8,   13,   56,   26,  117,  120,   21,   23,   89,    2,   27,  105,
          85,    5,  126,   55,  108,  134,   20,   61,  963, 2645,  598,  714,
        1031, 1662, 1666, 2041, 2205, 2206, 2471,  603, 2097,  604, 1013, 1351,
        1914, 1920, 1926, 2189,  152, 1530, 1653, 2399, 2400, 2631,  306, 1367,
        1622, 2478,  583, 2222, 2223, 2224, 2225, 1687, 1322,  286,  588,  698,
         911, 1051, 2040, 2119, 2120, 2121, 2604,  610, 2288, 2506,  208,  927,
        1315, 1316, 2140,  659, 1803, 1358, 1209, 1737, 2616,  567, 1161, 1262,
        1599, 2279,  284, 2226,  457,  710, 1392, 2213, 2214, 2215,  485,  401,
         864, 1065, 2210, 1560, 1786, 2082, 2145,  589,  802,  980, 1158, 1910,
        2251, 2252, 1301, 1344, 2011, 2317,  660,  910, 1623, 1780, 2045,  767,
         476, 2545, 1661, 2093,  153,  176, 1045, 1346, 2092, 2095,  289,  563,
        1779,  519,  236, 1787, 2094, 1772, 1785,  426,  459, 2034,  282,  540,
        2628, 1234, 1702, 1703, 2238, 2418,  441, 2184, 1939, 1655, 1839,  379,
         479,  904, 1022, 1959, 1139, 1467, 2053, 2172, 2182,  330, 1046, 2001,
        2122, 2123, 2380,  429,  862,  863, 1160,  458, 2363,  391, 1986,  347,
         423,  527, 2180,  633, 1862, 2582, 2144, 2329, 2504,  973, 1602, 2056,
        1190, 2427,  163, 1579, 2544, 1604, 2366,  723, 2614, 2217,  733, 1219,
        2303, 2667, 2668, 1527, 1309,  696,  162, 1882, 1732,  851, 1394, 2178,
         815, 1174, 2012, 1658,  841,  300, 1741, 2017, 2010, 2014, 1677, 2013,
        2394,  279,  518, 1850, 1973,  758, 1169, 1762, 2492, 2643,  541,  971,
        1113, 1650, 2455, 1336, 2295, 2454, 1329, 1418, 2018,  195,  586,  675,
         934, 1649, 1966, 2263, 2355, 2357, 2490,  507,  866, 1364, 1715,  175,
         596,  644,  257, 1117, 2049,  449,  558,  797,  876, 1035, 1136, 1189,
        1214, 1723, 1745, 1751, 1982,  580,  609,  615, 1067, 1287, 1627, 1725,
        2651, 1594, 1076, 1501,  399,  452, 1670, 1777, 1784,  661, 1353, 1372,
        1521, 1582, 2624, 2701,  158, 2075, 2077, 1103,  233,  370,  392, 2270,
         834, 2169, 1001, 1318, 2661, 2662,  544, 1042, 1118, 1416, 1517, 2052,
        2155, 2419, 1251, 1448, 1561, 1871, 1878, 2256,  646, 1537, 1549, 1901,
         484,  608, 1775, 1790, 1016, 1256, 1761, 2175, 2176,  697,  738, 2162,
        2343,  255,  388,  446,  454,  554,  581,  842, 1029, 1343, 1507, 1538,
        1616, 1690, 1851, 2030, 2112, 2165, 2166,  652,  654,  898, 1836, 2164,
        2461,  281, 1589, 1090, 1093, 1271, 2367, 1146, 1505, 1552, 1640, 1781,
        2106, 2107,  831, 1739, 1349, 1522, 1532, 1634, 1965,  201, 1636, 1701,
        2139, 2141, 1441,  487, 2080,  373,  239,  543,  619,  771, 1156, 1293,
        1628, 2021,  206, 2691,  747, 1884,  895, 1296, 1913, 1138,  550,  950,
        1495, 2151, 1776,  334,  456,  693,  734,  736,  861, 1303, 1535, 1580,
        1838, 2054, 2074, 2181, 2183, 2197, 2199, 2200, 2201, 1520, 2581,  701,
         155,  156,  817,  970, 1632, 2444, 2642,  269, 1996, 1810,  412,  447,
        1849,  259, 2537,  483,  514,  816, 1842, 2405, 1043, 2310, 2159,  258,
         884, 1087, 1094, 1157, 1401, 1585, 2463,  332, 1454,  606, 2360, 2578,
        1721, 2476, 2487, 2488, 1629, 1659, 2546, 1551, 2079,  210,  323,  651,
         787, 1079, 1983, 2020, 1647, 2157, 2209,  406, 1072, 2269, 2374, 2375,
        1080, 2312])
local_to_global: local nid  tensor([  0,   2,   3,   4,   5,   6,   7,   8,   9,  11,  12,  13,  14,  15,
         16,  17,  18,  19,  20,  21,  22,  23,  24,  25,  27,  28,  30,  31,
         32,  33,  34,  35,  36,  37,  38,  39,  40,  41,  42,  43,  44,  45,
         46,  47,  48,  49,  50,  51,  52,  53,  54,  56,  57,  58,  59,  60,
         61,  62,  63,  64,  66,  67,  68,  69,  71,  73,  74,  76,  77,  78,
         79,  80,  81,  82,  83,  84,  85,  88,  89,  90,  91,  93,  94,  95,
         96,  97,  98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111,
        112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
        127, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139])
local_to_global: local nid after sort  tensor([  0,   2,   3,   4,   5,   6,   7,   8,   9,  11,  12,  13,  14,  15,
         16,  17,  18,  19,  20,  21,  22,  23,  24,  25,  27,  28,  30,  31,
         32,  33,  34,  35,  36,  37,  38,  39,  40,  41,  42,  43,  44,  45,
         46,  47,  48,  49,  50,  51,  52,  53,  54,  56,  57,  58,  59,  60,
         61,  62,  63,  64,  66,  67,  68,  69,  71,  73,  74,  76,  77,  78,
         79,  80,  81,  82,  83,  84,  85,  88,  89,  90,  91,  93,  94,  95,
         96,  97,  98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111,
        112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
        127, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139])
local_to_global: local nid  tensor([107,  72,  75, 135,  92,  55])
local_to_global: local nid after sort  tensor([ 55,  72,  75,  92, 107, 135])
local_to_global: local nid  tensor([ 29, 115,  70,  87, 128,  86])
local_to_global: local nid after sort  tensor([ 29,  70,  86,  87, 115, 128])
local_to_global: local nid  tensor([ 1, 99, 65, 10, 26])
local_to_global: local nid after sort  tensor([ 1, 10, 26, 65, 99])
local_to_global: local_batched_seeds_list  [tensor([  0,   2,   3,   4,   5,   6,   7,   8,   9,  11,  12,  13,  14,  15,
         16,  17,  18,  19,  20,  21,  22,  23,  24,  25,  27,  28,  30,  31,
         32,  33,  34,  35,  36,  37,  38,  39,  40,  41,  42,  43,  44,  45,
         46,  47,  48,  49,  50,  51,  52,  53,  54,  56,  57,  58,  59,  60,
         61,  62,  63,  64,  66,  67,  68,  69,  71,  73,  74,  76,  77,  78,
         79,  80,  81,  82,  83,  84,  85,  88,  89,  90,  91,  93,  94,  95,
         96,  97,  98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111,
        112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
        127, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139]), tensor([107,  72,  75, 135,  92,  55]), tensor([ 29, 115,  70,  87, 128,  86]), tensor([ 1, 99, 65, 10, 26])]
local_to_global: global_batched_seeds_list  [tensor([ 29,  79,  69,  43,  66, 124,  75,  28,  63, 127, 114,   7,  17,  77,
         34,  64, 110,  84,  51,  62, 104,  18, 121,  25,  54,  10,  49,  67,
         22,  57,  70,  19,  11, 132,  52,  91,  38, 125,  68,  81,   0, 137,
        115, 100,  37,  47,   3,  46,   9,  96,  45,  32, 111, 107, 123,  86,
         99, 122,  78,  76,  40,  58,  41,  80, 130,  31, 116,  97,  42,  98,
         44,  14,  72,  60, 128, 131,  12, 119, 103,   4,  30,   1,  92,  87,
        106, 101,  15, 136,  53,  39,  24,  50, 112,   6,  71, 135, 113,  35,
         82,  93, 138,  83, 129,  90,  16,   8,  13,  56,  26, 117, 120,  21,
         23,   2,  27, 105,  85,   5, 126, 108, 134,  20,  61]), tensor([ 88,  59, 133, 118,  65,  55]), tensor([109,  73,  74, 102,  95,  89]), tensor([ 48,  33, 139,  94,  36])]
partition total batch output list spend :  0.02221083641052246
self.buckets_partition() spend  sec:  0.012652397155761719
bucketing dataloader: layer  0
bucketing dataloader: the number of batches:  4
bucketing dataloader: global_batched_output_nid_list  [tensor([ 29,  79,  69,  43,  66, 124,  75,  28,  63, 127, 114,   7,  17,  77,
         34,  64, 110,  84,  51,  62, 104,  18, 121,  25,  54,  10,  49,  67,
         22,  57,  70,  19,  11, 132,  52,  91,  38, 125,  68,  81,   0, 137,
        115, 100,  37,  47,   3,  46,   9,  96,  45,  32, 111, 107, 123,  86,
         99, 122,  78,  76,  40,  58,  41,  80, 130,  31, 116,  97,  42,  98,
         44,  14,  72,  60, 128, 131,  12, 119, 103,   4,  30,   1,  92,  87,
        106, 101,  15, 136,  53,  39,  24,  50, 112,   6,  71, 135, 113,  35,
         82,  93, 138,  83, 129,  90,  16,   8,  13,  56,  26, 117, 120,  21,
         23,   2,  27, 105,  85,   5, 126, 108, 134,  20,  61]), tensor([ 88,  59, 133, 118,  65,  55]), tensor([109,  73,  74, 102,  95,  89]), tensor([ 48,  33, 139,  94,  36])]
check_connections_block*********************************
connection check : local_output_nid  [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139]
connection check : local_output_nid  [55, 72, 75, 92, 107, 135]
connection check : local_output_nid  [29, 70, 86, 87, 115, 128]
connection check : local_output_nid  [1, 10, 26, 65, 99]

block_gen_time in "generate_blocks_for_one_layer_block"  0.007088899612426758

bucketing dataloader: global src_list  [tensor([  29,   79,   69,   43,   66,  124,   75,   28,   63,  127,  114,    7,
          17,   77,   34,   64,  110,   84,   51,   62,  104,   18,  121,   25,
          54,   10,   49,   67,   22,   57,   70,   19,   11,  132,   52,   91,
          38,  125,   68,   81,    0,  137,  115,  100,   37,   47,    3,   46,
           9,   96,   45,   32,  111,  107,  123,   86,   99,  122,   78,   76,
          40,   58,   41,   80,  130,   31,  116,   97,   42,   98,   44,   14,
          72,   60,  128,  131,   12,  119,  103,    4,   30,    1,   92,   87,
         106,  101,   15,  136,   53,   39,   24,   50,  112,    6,   71,  135,
         113,   35,   82,   93,  138,   83,  129,   90,   16,    8,   13,   56,
          26,  117,  120,   21,   23,    2,   27,  105,   85,    5,  126,  108,
         134,   20,   61,  963, 2645,  603, 2097,  604, 1013, 1351, 1914, 1920,
        1926, 2189,  152, 1530, 1653, 2399, 2400, 2631,  109,  306, 1367, 1622,
        2478,  583, 2222, 2223, 2224, 2225, 1687, 1322, 2604,  610, 2288, 2506,
         208,  927, 1315, 1316, 2140,  659, 1803, 1358, 1209, 1737, 2616,  567,
        1161, 1262, 1599, 2279,  284, 2226,  457,  710, 1392, 2213, 2214, 2215,
         485,  401,  864, 1065, 2210,  139, 1560, 1786, 2082, 2145,  589,  802,
         980, 1158, 1910, 2251, 2252, 1301, 1344, 2011, 2317,  767,  476, 2545,
        1666, 2034,  282,  540, 2628, 1234, 1702, 1703, 2238, 2418,  441, 2184,
        1939, 1655, 1839,  379,  479,  904, 1022, 1959, 1139, 1467, 2053, 2172,
        2182,  330, 1046, 2001, 2122, 2123, 2380,  429,  862,  863, 1160,  458,
        2363,  391, 1986,  347,  423,  527, 2180,  633, 1862, 2582, 2144, 2329,
        2504,  973, 1602, 2056, 1190, 2427,  163, 1579, 2544, 1604, 2366,  723,
        2614, 2217,  733, 1219, 2303, 2667, 2668,  279,  518, 1850, 1973,  758,
        1169, 1762, 2492, 2643,  541,  971, 1113, 1650, 2455, 1336, 2295, 2454,
        1329, 1418,   88, 2018, 2178,  507,  866, 1364, 1715,  175,  596,  644,
         257, 1117, 2049, 1982, 2017, 1594, 1076, 1501,  661, 1353, 1372, 1521,
        1582, 2624, 2701,  158, 2075, 2077, 1103,   55, 1527,  233,  370,  392,
        2270,  834, 2169, 1001, 1318, 2661, 2662,  646, 1537, 1549, 1901,  484,
         608, 1775, 1790, 1016, 1256, 1761, 2175, 2176,  697,  738, 1416, 2162,
        2343,  652,  654,  898, 1836,  842, 2164, 2461,  281, 1589, 1090, 1093,
        1271, 2367,  831, 1739, 1349, 1522, 1532, 1634, 1965, 2357,  201,  598,
        1636, 1701, 2139, 2141, 1441,  487, 1623, 2080,  373, 1042,  206, 2691,
        2095,  747, 1884,  895, 1296, 1913, 1138,  550,  950, 1495, 2151,  236,
        1776, 1520, 2581,  701,  155,  156,  817,  970, 1632, 2444, 2642,  269,
        1996, 1810,  412,  447, 1616, 1849,  259, 2537,  483,  514,  816, 1842,
        2405, 1043, 2310, 2159,  332, 1454,  606, 2360, 2578,   59, 1721, 2476,
        2651, 2487, 2488, 1629, 1659, 2546, 1551, 2045, 2079, 1647, 2157, 2209,
         406, 1072, 2269, 2374, 2375, 1080, 1309, 2312]), tensor([  88,   59,  133,  118,   65,   55,   76, 1527, 1309,  696,  162, 1882,
        1732,  851, 2011, 1394, 2178,  815, 1174, 2012, 1658,  841,  130,  300,
        1741, 2017, 2010, 2014, 1677, 2013, 2394,  105,  580,  609,  615, 1067,
        1287, 1358, 1627, 1725, 2651,  109,  399,  452, 1623, 1670, 1777, 1784,
        2045, 2082,  255,  388,  446,  454,  554,  581,  842, 1029, 1343, 1507,
        1538, 1616, 1690, 1851, 2030, 2112, 2165, 2166,  239,  543,  619,  771,
        1156, 1293, 1628, 2021, 2418, 2419,   60,  210,  323,  651,  787, 1079,
        1983, 2020]), tensor([ 109,   73,   74,  102,   95,   89, 1661,  610, 2093,  133,  153,  176,
        1045, 1346,  306, 2092,  124, 2095,  289,  563, 1779,  519,  236, 1787,
        2045, 2094, 1772, 1785,  426,  459,  449,  558,  797,  876, 1035, 1136,
        1189, 1214, 1358, 1723, 1745, 1751,  544,  586, 1042, 1118, 1416, 1517,
        2052, 2155, 2419, 1251, 1448, 1561, 1623, 1871, 1878, 2256,  334,  456,
         693,  734,  736,  861, 1303, 1535, 1580, 1602, 1628, 1838, 2054, 2074,
        2181, 2182, 2183, 2197, 2199, 2200, 2201,  258,  884, 1087, 1094, 1157,
        1401, 1530, 1585, 1653, 2463]), tensor([  48,   33,  139,   94,   36,  598,  714, 1031, 1662, 1666, 2041, 2205,
        2206, 2471,  286,  588,  698,  911, 1051, 2040, 2119, 2120, 2121,   18,
         103,  306,  660,  910, 1623, 1780, 2045,  195,  586,  675,  733,  934,
        1649, 1966, 2263, 2355, 2357, 2490, 1146, 1505, 1552, 1640, 1781, 2094,
        2106, 2107])]
----------------------------------------
bucketing dataloader: layer  1
bucketing dataloader: num of batch  4
check_connections_block*********************************
connection check : local_output_nid  [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 29, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 26, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 239, 240, 241, 146, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 55, 368, 335, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 400, 343, 409, 410, 411, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 135, 327, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 441, 467, 468, 487, 488, 489, 490, 475, 491, 492, 493, 494, 495, 496, 497, 498, 506, 507, 508, 509, 510, 511, 512, 377, 513, 142, 514, 515, 516, 517, 518, 519, 236, 520, 521, 439, 530, 531, 249, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 254, 542, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 480, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 595, 596, 597, 598, 599, 72, 600, 601, 408, 602, 603, 604, 605, 606, 607, 238, 608, 616, 617, 618, 619, 620, 621, 622, 623, 624, 328, 625]
connection check : local_output_nid  [55, 72, 75, 92, 107, 135, 64, 327, 328, 329, 330, 331, 332, 333, 232, 334, 335, 336, 337, 338, 339, 340, 71, 341, 342, 343, 344, 345, 346, 347, 348, 131, 401, 402, 403, 404, 405, 197, 406, 407, 408, 29, 412, 413, 236, 414, 415, 416, 238, 221, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 522, 523, 524, 525, 526, 527, 528, 529, 269, 445, 82, 609, 610, 611, 612, 613, 614, 615]
connection check : local_output_nid  [29, 70, 86, 87, 115, 128, 242, 187, 243, 75, 244, 245, 246, 247, 166, 248, 6, 249, 250, 251, 252, 253, 254, 255, 238, 256, 257, 258, 259, 260, 389, 390, 391, 392, 393, 394, 395, 396, 197, 397, 398, 399, 438, 370, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 236, 449, 450, 451, 543, 544, 545, 546, 547, 548, 549, 550, 551, 310, 528, 552, 553, 554, 555, 284, 556, 557, 558, 559, 560, 587, 588, 589, 590, 591, 592, 161, 593, 162, 594]
connection check : local_output_nid  [1, 10, 26, 65, 99, 142, 143, 144, 145, 146, 147, 148, 149, 150, 177, 178, 179, 180, 181, 182, 183, 184, 185, 23, 89, 166, 234, 235, 236, 237, 238, 369, 370, 371, 322, 372, 373, 374, 375, 376, 377, 378, 499, 500, 501, 502, 503, 256, 504, 505]

block_gen_time in "generate_blocks_for_one_layer_block"  0.008801460266113281

bucketing dataloader: src_list  [tensor([  29,   79,   69,  ...,  995, 1677, 1333]), tensor([  88,   59,  133,  118,   65,   55,   76, 1527, 1309,  696,  162, 1882,
        1732,  851, 2011, 1394, 2178,  815, 1174, 2012, 1658,  841,  130,  300,
        1741, 2017, 2010, 2014, 1677, 2013, 2394,  105,  580,  609,  615, 1067,
        1287, 1358, 1627, 1725, 2651,  109,  399,  452, 1623, 1670, 1777, 1784,
        2045, 2082,  255,  388,  446,  454,  554,  581,  842, 1029, 1343, 1507,
        1538, 1616, 1690, 1851, 2030, 2112, 2165, 2166,  239,  543,  619,  771,
        1156, 1293, 1628, 2021, 2418, 2419,   60,  210,  323,  651,  787, 1079,
        1983, 2020, 1847, 2016, 1288, 2018,  331,  415,  860, 1668, 2274, 2450,
         490, 2102, 2103, 1625, 1338,  995,  277,  571, 1570, 1268, 1667,  514,
         516,  661,  748, 1224, 1566,   25,  733,  211, 2137,  737, 1979, 2024,
        1344, 1912,  272, 2034, 1982,  634, 2593, 1487, 2467,  161,  191, 1908,
         471,  724,  504, 2397, 1396, 2396, 1421, 2228, 1399, 1721, 2476,  744,
        1742, 1758, 1765, 2444, 2445,  534,  883, 1041, 2446, 2447, 2448, 2443,
         170,  936, 1216, 1830, 2307,  481, 1164, 1734,  333, 1145, 1743, 1724,
          34, 1205, 1759, 1748, 1229, 1308, 1740, 2597, 1070, 1072, 1712,  628,
         687, 2413,  102, 1785,  426,  176,  318, 2093, 2094, 1769, 1045,  544,
        1089, 2107,  306, 1258, 1773, 1772,  139, 1775, 1779,  153,  303,  308,
         519, 1346, 1624, 2143, 2096, 1651, 2046,  341,  563, 1787, 2047,  603,
          18, 1266, 1899, 2497,  903, 2188, 2189, 1661, 1917,  441,  973, 2190,
        2022,  685, 1792,   87,  836, 1645, 2316,  989, 2436,  643,  747, 1131,
        1133, 1500, 1842, 2185,   56,  412,  447,  539, 1402, 1849, 2050,  693,
        1013, 2485,  711,  279, 1376, 1220, 1274, 2182, 1909,  887, 1069,  910,
         984, 1080,  897,  525,  142, 1635,  597, 2172, 1139, 2056,   95, 1042,
          57,  572,   74,  497, 1848,   37,  164, 1614, 1626, 1671, 1905, 1906,
        1907, 2309,  498,  885, 1984, 2023, 2156,  325,  438, 1218, 1914]), tensor([ 109,   73,   74,  102,   95,   89, 1661,  610, 2093,  133,  153,  176,
        1045, 1346,  306, 2092,  124, 2095,  289,  563, 1779,  519,  236, 1787,
        2045, 2094, 1772, 1785,  426,  459,  449,  558,  797,  876, 1035, 1136,
        1189, 1214, 1358, 1723, 1745, 1751,  544,  586, 1042, 1118, 1416, 1517,
        2052, 2155, 2419, 1251, 1448, 1561, 1623, 1871, 1878, 2256,  334,  456,
         693,  734,  736,  861, 1303, 1535, 1580, 1602, 1628, 1838, 2054, 2074,
        2181, 2182, 2183, 2197, 2199, 2200, 2201,  258,  884, 1087, 1094, 1157,
        1401, 1530, 1585, 1653, 2463,  318, 1769,  454, 1013, 1851,  114,  234,
         826, 2287, 2288, 2481,  741,  831,  399,  452, 1670, 1777, 1784, 2082,
         231,  973,  661, 1571, 1773, 1805, 1771,  910, 1804,  656, 1781, 1193,
         554, 1367, 1622, 2478,  135, 2145, 2329, 2504, 1722, 1337, 1701,  505,
        1624, 2318, 1986,  416,  387, 1998, 1574,  836, 2078, 2046,  126, 1572,
         138, 1072, 2079, 1810, 2143, 1651,  341, 2047,  603,  308,   36,  441,
         530, 2086, 2106,  487, 1564, 1782,  317,  808,  963, 1789, 1681, 1280,
        1834, 2581, 1706, 2585,  800, 1833, 2359,  834, 2168, 2584,  915, 1433,
        1486, 1740, 1801, 2554,  337, 1199, 1499, 1716, 1734,  333, 1145, 1743,
        1724,   34, 1205, 1759, 1748,   59,  565,  768, 1589, 1725, 2596, 1426,
        2347,   94, 1218, 1224,  373,  624,    6, 1926, 2051, 2333, 1125,  149,
        1924,   30,  572,   61, 1468, 1131, 1152, 1203, 2293, 2295,  993,  280,
         749, 2153,   65,  497, 1848, 2034,  139, 1775,  581,  228,  417,  142,
         525,  667, 2472,  763, 2108, 2056, 2202,  751, 1388, 2277, 1006,  408,
        1841,  964, 1631, 1397, 2068, 2330,  746,  979, 1026, 2163, 1351, 1916,
        1892,  100,  315, 1204, 2072, 2073, 1635,  597, 2172, 1139, 2219, 1540,
        2133, 2196, 2198, 2233, 2232, 1515,  239,  858, 2180,  965,  680,  731,
         901, 2186,  552, 1153, 1240, 2645,  152, 2434, 1369, 1443, 2240,  761,
          43, 2464,  340,  584]), tensor([  48,   33,  139,   94,   36,  598,  714, 1031, 1662, 1666, 2041, 2205,
        2206, 2471,  286,  588,  698,  911, 1051, 2040, 2119, 2120, 2121,   18,
         103,  306,  660,  910, 1623, 1780, 2045,  195,  586,  675,  733,  934,
        1649, 1966, 2263, 2355, 2357, 2490, 1146, 1505, 1552, 1640, 1781, 2094,
        2106, 2107,  143,  480, 1100,  521, 1301,  165, 1297,  316, 1864, 2138,
         148, 1385,  788, 1952, 2381, 2398,    2,   49,  606,  429, 2034, 1951,
        2493,  442, 2383, 1015,  893, 1534, 2376, 2122,  218,  665, 2637, 2001,
        1560, 1786, 2082, 2145,  484,  608, 1775, 1790, 1805, 1771, 1804,  656,
        1346, 1193, 1787,  554,  239,  887, 2085, 1773, 1772,  102,  581, 1779,
        1784, 1777,  153, 1624, 1651, 2046,  341,  563, 2047,  603,  308, 2424,
          74, 1218, 1224, 2155, 2356,  794,  377, 2011, 2301, 1192, 1817,  383,
        2303, 1818, 1569, 1702, 1010, 1964,  362,  443, 1234, 1971,  463,   39,
        1846, 1506, 2254, 1788,  330, 1072,  773,  530, 1089, 1778, 2591,  350,
        1998,  109,  441, 2086,  399])]
block collection to dataloader spend  6.4373016357421875e-06
step  0
----------------------------------------before batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 2.08984375 GB
    Memory Allocated: 0.27561378479003906  GigaBytes
Max Memory Allocated: 0.36905336380004883  GigaBytes

----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 2.091796875 GB
    Memory Allocated: 0.457913875579834  GigaBytes
Max Memory Allocated: 0.46697187423706055  GigaBytes

----------------------------------------after loss function
 Nvidia-smi: 2.091796875 GB
    Memory Allocated: 0.457913875579834  GigaBytes
Max Memory Allocated: 0.46697187423706055  GigaBytes

step  1
----------------------------------------before batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.2715730667114258  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.31199121475219727  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

----------------------------------------after loss function
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.31199216842651367  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

step  2
----------------------------------------before batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.2713918685913086  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.31815052032470703  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

----------------------------------------after loss function
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.31815147399902344  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

step  3
----------------------------------------before batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.2706294059753418  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.29303789138793945  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

----------------------------------------after loss function
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.29303884506225586  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

----------------------------------------after optimizer
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.27063465118408203  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.929786205291748
pure train time :  0.2984437942504883
train time :  0.3637962341308594
end to end time :  0.4259047508239746
connection check time:  0.012269735336303711
block generation time  0.01589035987854004
generate_dataloader_bucket_block=======
get_in_degree_bucketing src global nid  tensor([  53,   39,   50,   55,   10,   80,  123,   37,  134,   83,   51,  125,
          92,   25,  102,  111,   89,  119,    0,   49,  120,  126,   61,  139,
         105,   96,   28,   99,   88,  136,    1,   84,   95,   36,   17,    2,
         131,   45,   77,   26,   62,   60,   73,  110,  118,   29,  135,   97,
          56,   18,  127,   46,   33,   69,   32,   12,   42,   58,   54,    4,
         116,   19,   79,   64,   72,   76,   24,  108,  100,   13,   86,   85,
          98,    7,  107,   30,  104,   40,   52,   21,  122,   57,   48,   82,
          15,  117,   20,  124,   81,   23,  137,   44,  121,  109,   94,   41,
          66,   43,    9,  132,   22,    8,   65,   16,   35,  133,  128,    3,
          74,   78,  138,    5,  129,  103,  113,   90,   14,   59,  114,   67,
         106,   75,  101,   63,   71,   87,   93,   91,   11,  115,   34,   31,
          70,   38,   47,   27,  130,   68,  112,    6, 1103, 1358, 1739, 1349,
        1522, 1532, 1634, 1965, 2357, 1441,  210,  323,  651,  771,  787,  815,
        1079, 1156, 1983, 2020, 2021,  476, 2545,  257, 1117, 2049, 2455, 2604,
        1190, 2427,  406, 1520, 2581,  457,  710, 1392, 2213, 2214, 2215,  458,
        2363,  898, 1836, 1301, 1344, 2011, 2317, 1251, 1448, 1561, 1623, 1871,
        1878, 2256,  758, 1169, 1762, 2492, 2643,  258,  884, 1087, 1094, 1157,
        1401, 1530, 1585, 1653, 2463,  379,  646, 1537, 1549, 1901, 1959,  633,
        1862, 2582, 1666, 2034,  483,  514,  816, 1842, 2405,  236,  306, 1551,
        2045, 2079, 1080, 1309, 1416, 2162, 2312,  660,  910, 1780, 1721, 2476,
        2651, 2217, 1687, 2454, 1658, 2394, 2178,  498,  743, 1908,  737, 2013,
        2012, 1713, 1174, 1527, 1882,  162, 1288, 1494, 1741,  415, 2016,  300,
        1394,  831,  652,  654,  284, 2223, 2224, 2226,  334,  456,  693,  734,
         736,  861, 1303, 1535, 1580, 1602, 1628, 1838, 2054, 2074, 2181, 2182,
        2183, 2197, 2199, 2200, 2201, 1146, 1505, 1552, 1640, 1781, 2094, 2106,
        2107,  927, 1315, 1316, 2140,  332, 1454, 1986,  834, 2169,  733, 1219,
        2303, 2667, 2668,  659, 1803,  485,  449,  558,  797,  876, 1035, 1136,
        1189, 1214, 1723, 1745, 1751,  567, 1161, 1262, 1599, 2279,  255,  388,
         446,  454,  554,  581,  842, 1029, 1343, 1507, 1538, 1616, 1690, 1851,
        2010, 2030, 2112, 2165, 2166,  963, 2645, 2095, 2144,  661, 1353,  412,
         447, 1849, 1560, 1786, 2082, 2145, 1604, 2366,  286,  588,  698,  911,
        1051, 2040, 2119, 2120, 2121,  604, 1013, 1351, 1914, 1920, 1926, 2189,
         279,  518, 1850, 1973, 1001, 1318, 2661, 2662, 1372, 1715,  401,  767,
        1016, 1256, 1761, 2175, 2176, 1076, 1501, 1939,  603, 2097, 1209, 1737,
        2616, 2018,  201,  598, 1636, 1701, 2139, 2141, 1647, 2157, 2209, 2056,
        1810,  429, 1336, 2295, 1065, 2487, 2488, 1521,  208,  541,  971, 1113,
        1650,  697,  738, 2343,  864, 2210,  507,  866, 1364, 1139, 1467, 2053,
        2172, 1043, 2310, 2418,  714, 1031, 1662, 2041, 2205, 2206, 2471, 1138,
        1090, 1093, 1271, 2367,  259, 2537, 1072, 2269, 2270, 2374, 2375, 1367,
        1622, 2478,  347,  423,  527, 2180, 2159, 2329, 2504, 1582, 2624, 2701,
         589,  802,  980, 1158, 1910, 2251, 2252,  318, 2093, 1789, 1998, 1337,
        2092,  563, 1661,  153,  176, 1045,  426,  459, 1769,  289, 1772, 1805,
        1779, 1785,  195,  586,  675,  934, 1649, 1966, 2263, 2355, 2490,  175,
         596,  644, 2631,  152, 2399, 2400,  723, 2614,  479,  904, 1022, 1234,
        1702, 1703, 2238,  269,  281, 1996,  239,  543,  619, 1293, 2419,  970,
        1632, 2444, 2642,  895, 1296, 1913,  399,  452, 1670, 1777, 1784,  233,
         370,  392, 2544,  544, 1042, 1118, 1517, 2052, 2155, 1329, 1418, 1776,
        1629, 1659, 2546,  441,  701,  484,  608, 1775, 1790,  540,  747, 1884,
         155,  156,  817,  158, 2075, 2077,  580,  609,  615, 1067, 1287, 1627,
        1725,  610, 2288, 2506,  282, 2628, 2461,  583, 2222, 2225, 1589, 1322,
         206, 2691, 2164,  550,  950, 1495, 2151,  330, 1046, 2001, 2122, 2123,
        2380, 1655, 1839,  973, 1594, 2184,  862,  863, 1160,  163, 1579,  606,
        2360, 2578, 1982, 2017,  391,  487, 2080,  373])
get_in_degree_bucketing dst global nid  tensor([ 53,  39,  50,  55,  10,  80, 123,  37, 134,  83,  51, 125,  92,  25,
        102, 111,  89, 119,   0,  49, 120, 126,  61, 139, 105,  96,  28,  99,
         88, 136,   1,  84,  95,  36,  17,   2, 131,  45,  77,  26,  62,  60,
         73, 110, 118,  29, 135,  97,  56,  18, 127,  46,  33,  69,  32,  12,
         42,  58,  54,   4, 116,  19,  79,  64,  72,  76,  24, 108, 100,  13,
         86,  85,  98,   7, 107,  30, 104,  40,  52,  21, 122,  57,  48,  82,
         15, 117,  20, 124,  81,  23, 137,  44, 121, 109,  94,  41,  66,  43,
          9, 132,  22,   8,  65,  16,  35, 133, 128,   3,  74,  78, 138,   5,
        129, 103, 113,  90,  14,  59, 114,  67, 106,  75, 101,  63,  71,  87,
         93,  91,  11, 115,  34,  31,  70,  38,  47,  27, 130,  68, 112,   6])
get_in_degree_bucketing corresponding in degs tensor([ 3,  7,  1, 12,  2,  3,  4,  3,  1,  2,  6,  2,  2,  4,  8,  6, 10,  6,
         3,  2,  5,  6,  5,  8,  4,  1,  1,  6, 25,  1,  3,  5, 21,  8,  5,  5,
         2,  6,  2,  5,  1,  3, 12,  5, 19,  2,  3,  2,  4,  5,  1,  2,  9,  7,
         4,  4,  2,  1,  2,  5,  2,  1,  2,  3,  2,  3,  7,  3,  2,  2,  4,  3,
         1,  1,  4,  6,  4,  3,  5,  2,  4,  1,  9,  2,  4,  2,  5,  5,  4,  1,
         4,  3,  7, 25, 11,  4,  1,  6,  2,  5,  5,  3, 10,  4,  3,  9,  4,  1,
         9,  3,  3,  3,  2,  6,  3,  4,  5, 10,  3,  3,  1,  6,  3,  1,  3,  3,
         4,  6,  2,  1,  1,  1,  2,  4,  2,  4,  3,  3,  4,  4])
len(bkt)  20
local bkt nids  tensor([  2,   8,  25,  26,  29,  40,  50,  57,  61,  72,  73,  81,  89,  96,
        107, 120, 123, 129, 130, 131])
len(bkt)  25
local bkt nids  tensor([  4,   9,  11,  12,  19,  36,  38,  45,  47,  51,  56,  58,  60,  62,
         64,  68,  69,  79,  83,  85,  98, 112, 128, 132, 134])
len(bkt)  26
local bkt nids  tensor([  0,   5,   7,  18,  30,  41,  46,  63,  65,  67,  71,  77,  91, 101,
        104, 109, 110, 111, 114, 118, 119, 122, 124, 125, 136, 137])
len(bkt)  22
local bkt nids  tensor([  6,  13,  24,  48,  54,  55,  70,  74,  76,  80,  84,  88,  90,  95,
        103, 106, 115, 126, 133, 135, 138, 139])
len(bkt)  15
local bkt nids  tensor([ 20,  22,  31,  34,  35,  39,  43,  49,  59,  78,  86,  87,  99, 100,
        116])
len(bkt)  11
local bkt nids  tensor([ 10,  15,  17,  21,  27,  37,  75,  97, 113, 121, 127])
len(bkt)  4
local bkt nids  tensor([ 1, 53, 66, 92])
len(bkt)  3
local bkt nids  tensor([14, 23, 33])
len(bkt)  4
local bkt nids  tensor([ 52,  82, 105, 108])
len(bkt)  3
local bkt nids  tensor([ 16, 102, 117])
len(bkt)  1
local bkt nids  tensor([94])
len(bkt)  2
local bkt nids  tensor([ 3, 42])
len(bkt)  1
local bkt nids  tensor([44])
len(bkt)  1
local bkt nids  tensor([32])
len(bkt)  2
local bkt nids  tensor([28, 93])
bucket partitioner: bkt_dst_nodes_list_local  [tensor([  2,   8,  25,  26,  29,  40,  50,  57,  61,  72,  73,  81,  89,  96,
        107, 120, 123, 129, 130, 131]), tensor([  4,   9,  11,  12,  19,  36,  38,  45,  47,  51,  56,  58,  60,  62,
         64,  68,  69,  79,  83,  85,  98, 112, 128, 132, 134]), tensor([  0,   5,   7,  18,  30,  41,  46,  63,  65,  67,  71,  77,  91, 101,
        104, 109, 110, 111, 114, 118, 119, 122, 124, 125, 136, 137]), tensor([  6,  13,  24,  48,  54,  55,  70,  74,  76,  80,  84,  88,  90,  95,
        103, 106, 115, 126, 133, 135, 138, 139]), tensor([ 20,  22,  31,  34,  35,  39,  43,  49,  59,  78,  86,  87,  99, 100,
        116]), tensor([ 10,  15,  17,  21,  27,  37,  75,  97, 113, 121, 127]), tensor([ 1, 53, 66, 92]), tensor([14, 23, 33]), tensor([ 52,  82, 105, 108]), tensor([ 16, 102, 117]), tensor([94]), tensor([ 3, 42]), tensor([44]), tensor([32]), tensor([28, 93])]
---||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||--
bkt_dst_nodes_list = self.get_in_degree_bucketing() spend:  0.013027667999267578
self.gen_batches_seeds_list(bkt_dst_nodes_list_local) spend  0.00019979476928710938
local_to_global: src global  tensor([  53,   39,   50,   55,   10,   80,  123,   37,  134,   83,   51,  125,
          92,   25,  102,  111,   89,  119,    0,   49,  120,  126,   61,  139,
         105,   96,   28,   99,   88,  136,    1,   84,   95,   36,   17,    2,
         131,   45,   77,   26,   62,   60,   73,  110,  118,   29,  135,   97,
          56,   18,  127,   46,   33,   69,   32,   12,   42,   58,   54,    4,
         116,   19,   79,   64,   72,   76,   24,  108,  100,   13,   86,   85,
          98,    7,  107,   30,  104,   40,   52,   21,  122,   57,   48,   82,
          15,  117,   20,  124,   81,   23,  137,   44,  121,  109,   94,   41,
          66,   43,    9,  132,   22,    8,   65,   16,   35,  133,  128,    3,
          74,   78,  138,    5,  129,  103,  113,   90,   14,   59,  114,   67,
         106,   75,  101,   63,   71,   87,   93,   91,   11,  115,   34,   31,
          70,   38,   47,   27,  130,   68,  112,    6, 1103, 1358, 1739, 1349,
        1522, 1532, 1634, 1965, 2357, 1441,  210,  323,  651,  771,  787,  815,
        1079, 1156, 1983, 2020, 2021,  476, 2545,  257, 1117, 2049, 2455, 2604,
        1190, 2427,  406, 1520, 2581,  457,  710, 1392, 2213, 2214, 2215,  458,
        2363,  898, 1836, 1301, 1344, 2011, 2317, 1251, 1448, 1561, 1623, 1871,
        1878, 2256,  758, 1169, 1762, 2492, 2643,  258,  884, 1087, 1094, 1157,
        1401, 1530, 1585, 1653, 2463,  379,  646, 1537, 1549, 1901, 1959,  633,
        1862, 2582, 1666, 2034,  483,  514,  816, 1842, 2405,  236,  306, 1551,
        2045, 2079, 1080, 1309, 1416, 2162, 2312,  660,  910, 1780, 1721, 2476,
        2651, 2217, 1687, 2454, 1658, 2394, 2178,  498,  743, 1908,  737, 2013,
        2012, 1713, 1174, 1527, 1882,  162, 1288, 1494, 1741,  415, 2016,  300,
        1394,  831,  652,  654,  284, 2223, 2224, 2226,  334,  456,  693,  734,
         736,  861, 1303, 1535, 1580, 1602, 1628, 1838, 2054, 2074, 2181, 2182,
        2183, 2197, 2199, 2200, 2201, 1146, 1505, 1552, 1640, 1781, 2094, 2106,
        2107,  927, 1315, 1316, 2140,  332, 1454, 1986,  834, 2169,  733, 1219,
        2303, 2667, 2668,  659, 1803,  485,  449,  558,  797,  876, 1035, 1136,
        1189, 1214, 1723, 1745, 1751,  567, 1161, 1262, 1599, 2279,  255,  388,
         446,  454,  554,  581,  842, 1029, 1343, 1507, 1538, 1616, 1690, 1851,
        2010, 2030, 2112, 2165, 2166,  963, 2645, 2095, 2144,  661, 1353,  412,
         447, 1849, 1560, 1786, 2082, 2145, 1604, 2366,  286,  588,  698,  911,
        1051, 2040, 2119, 2120, 2121,  604, 1013, 1351, 1914, 1920, 1926, 2189,
         279,  518, 1850, 1973, 1001, 1318, 2661, 2662, 1372, 1715,  401,  767,
        1016, 1256, 1761, 2175, 2176, 1076, 1501, 1939,  603, 2097, 1209, 1737,
        2616, 2018,  201,  598, 1636, 1701, 2139, 2141, 1647, 2157, 2209, 2056,
        1810,  429, 1336, 2295, 1065, 2487, 2488, 1521,  208,  541,  971, 1113,
        1650,  697,  738, 2343,  864, 2210,  507,  866, 1364, 1139, 1467, 2053,
        2172, 1043, 2310, 2418,  714, 1031, 1662, 2041, 2205, 2206, 2471, 1138,
        1090, 1093, 1271, 2367,  259, 2537, 1072, 2269, 2270, 2374, 2375, 1367,
        1622, 2478,  347,  423,  527, 2180, 2159, 2329, 2504, 1582, 2624, 2701,
         589,  802,  980, 1158, 1910, 2251, 2252,  318, 2093, 1789, 1998, 1337,
        2092,  563, 1661,  153,  176, 1045,  426,  459, 1769,  289, 1772, 1805,
        1779, 1785,  195,  586,  675,  934, 1649, 1966, 2263, 2355, 2490,  175,
         596,  644, 2631,  152, 2399, 2400,  723, 2614,  479,  904, 1022, 1234,
        1702, 1703, 2238,  269,  281, 1996,  239,  543,  619, 1293, 2419,  970,
        1632, 2444, 2642,  895, 1296, 1913,  399,  452, 1670, 1777, 1784,  233,
         370,  392, 2544,  544, 1042, 1118, 1517, 2052, 2155, 1329, 1418, 1776,
        1629, 1659, 2546,  441,  701,  484,  608, 1775, 1790,  540,  747, 1884,
         155,  156,  817,  158, 2075, 2077,  580,  609,  615, 1067, 1287, 1627,
        1725,  610, 2288, 2506,  282, 2628, 2461,  583, 2222, 2225, 1589, 1322,
         206, 2691, 2164,  550,  950, 1495, 2151,  330, 1046, 2001, 2122, 2123,
        2380, 1655, 1839,  973, 1594, 2184,  862,  863, 1160,  163, 1579,  606,
        2360, 2578, 1982, 2017,  391,  487, 2080,  373])
local_to_global: local nid  tensor([  0,   1,   2,   4,   5,   6,   7,   8,   9,  10,  11,  12,  13,  15,
         17,  18,  19,  20,  21,  22,  24,  25,  26,  27,  29,  30,  31,  34,
         35,  36,  37,  38,  39,  40,  41,  43,  45,  46,  47,  48,  49,  50,
         51,  53,  54,  55,  56,  57,  58,  59,  60,  61,  62,  63,  64,  65,
         66,  67,  68,  69,  70,  71,  72,  73,  74,  75,  76,  77,  78,  79,
         80,  81,  83,  84,  85,  86,  87,  88,  89,  90,  91,  92,  95,  96,
         97,  98,  99, 100, 101, 103, 104, 106, 107, 109, 110, 111, 112, 113,
        114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
        129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139])
local_to_global: local nid after sort  tensor([  0,   1,   2,   4,   5,   6,   7,   8,   9,  10,  11,  12,  13,  15,
         17,  18,  19,  20,  21,  22,  24,  25,  26,  27,  29,  30,  31,  34,
         35,  36,  37,  38,  39,  40,  41,  43,  45,  46,  47,  48,  49,  50,
         51,  53,  54,  55,  56,  57,  58,  59,  60,  61,  62,  63,  64,  65,
         66,  67,  68,  69,  70,  71,  72,  73,  74,  75,  76,  77,  78,  79,
         80,  81,  83,  84,  85,  86,  87,  88,  89,  90,  91,  92,  95,  96,
         97,  98,  99, 100, 101, 103, 104, 106, 107, 109, 110, 111, 112, 113,
        114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
        129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139])
local_to_global: local nid  tensor([  3,  28, 105, 108,  33,  42])
local_to_global: local nid after sort  tensor([  3,  28,  33,  42, 105, 108])
local_to_global: local nid  tensor([32, 16, 23, 14, 44, 93])
local_to_global: local nid after sort  tensor([14, 16, 23, 32, 44, 93])
local_to_global: local nid  tensor([ 94,  82, 102,  52, 117])
local_to_global: local nid after sort  tensor([ 52,  82,  94, 102, 117])
local_to_global: local_batched_seeds_list  [tensor([  0,   1,   2,   4,   5,   6,   7,   8,   9,  10,  11,  12,  13,  15,
         17,  18,  19,  20,  21,  22,  24,  25,  26,  27,  29,  30,  31,  34,
         35,  36,  37,  38,  39,  40,  41,  43,  45,  46,  47,  48,  49,  50,
         51,  53,  54,  55,  56,  57,  58,  59,  60,  61,  62,  63,  64,  65,
         66,  67,  68,  69,  70,  71,  72,  73,  74,  75,  76,  77,  78,  79,
         80,  81,  83,  84,  85,  86,  87,  88,  89,  90,  91,  92,  95,  96,
         97,  98,  99, 100, 101, 103, 104, 106, 107, 109, 110, 111, 112, 113,
        114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
        129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139]), tensor([  3,  28, 105, 108,  33,  42]), tensor([32, 16, 23, 14, 44, 93]), tensor([ 94,  82, 102,  52, 117])]
local_to_global: global_batched_seeds_list  [tensor([ 53,  39,  50,  10,  80, 123,  37, 134,  83,  51, 125,  92,  25, 111,
        119,   0,  49, 120, 126,  61, 105,  96,  28,  99, 136,   1,  84,  17,
          2, 131,  45,  77,  26,  62,  60, 110,  29, 135,  97,  56,  18, 127,
         46,  69,  32,  12,  42,  58,  54,   4, 116,  19,  79,  64,  72,  76,
         24, 108, 100,  13,  86,  85,  98,   7, 107,  30, 104,  40,  52,  21,
        122,  57,  82,  15, 117,  20, 124,  81,  23, 137,  44, 121,  41,  66,
         43,   9, 132,  22,   8,  16,  35, 128,   3,  78, 138,   5, 129, 103,
        113,  90,  14, 114,  67, 106,  75, 101,  63,  71,  87,  93,  91,  11,
        115,  34,  31,  70,  38,  47,  27, 130,  68, 112,   6]), tensor([ 55,  88,  36,  73, 133,  74]), tensor([102,  89, 139,  95, 118, 109]), tensor([33, 48, 94, 65, 59])]
partition total batch output list spend :  0.022828102111816406
self.buckets_partition() spend  sec:  0.013244867324829102
bucketing dataloader: layer  0
bucketing dataloader: the number of batches:  4
bucketing dataloader: global_batched_output_nid_list  [tensor([ 53,  39,  50,  10,  80, 123,  37, 134,  83,  51, 125,  92,  25, 111,
        119,   0,  49, 120, 126,  61, 105,  96,  28,  99, 136,   1,  84,  17,
          2, 131,  45,  77,  26,  62,  60, 110,  29, 135,  97,  56,  18, 127,
         46,  69,  32,  12,  42,  58,  54,   4, 116,  19,  79,  64,  72,  76,
         24, 108, 100,  13,  86,  85,  98,   7, 107,  30, 104,  40,  52,  21,
        122,  57,  82,  15, 117,  20, 124,  81,  23, 137,  44, 121,  41,  66,
         43,   9, 132,  22,   8,  16,  35, 128,   3,  78, 138,   5, 129, 103,
        113,  90,  14, 114,  67, 106,  75, 101,  63,  71,  87,  93,  91,  11,
        115,  34,  31,  70,  38,  47,  27, 130,  68, 112,   6]), tensor([ 55,  88,  36,  73, 133,  74]), tensor([102,  89, 139,  95, 118, 109]), tensor([33, 48, 94, 65, 59])]
check_connections_block*********************************
connection check : local_output_nid  [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 103, 104, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139]
connection check : local_output_nid  [3, 28, 33, 42, 105, 108]
connection check : local_output_nid  [14, 16, 23, 32, 44, 93]
connection check : local_output_nid  [52, 82, 94, 102, 117]

block_gen_time in "generate_blocks_for_one_layer_block"  0.0068988800048828125

bucketing dataloader: global src_list  [tensor([  53,   39,   50,   10,   80,  123,   37,  134,   83,   51,  125,   92,
          25,  111,  119,    0,   49,  120,  126,   61,  105,   96,   28,   99,
         136,    1,   84,   17,    2,  131,   45,   77,   26,   62,   60,  110,
          29,  135,   97,   56,   18,  127,   46,   69,   32,   12,   42,   58,
          54,    4,  116,   19,   79,   64,   72,   76,   24,  108,  100,   13,
          86,   85,   98,    7,  107,   30,  104,   40,   52,   21,  122,   57,
          82,   15,  117,   20,  124,   81,   23,  137,   44,  121,   41,   66,
          43,    9,  132,   22,    8,   16,   35,  128,    3,   78,  138,    5,
         129,  103,  113,   90,   14,  114,   67,  106,   75,  101,   63,   71,
          87,   93,   91,   11,  115,   34,   31,   70,   38,   47,   27,  130,
          68,  112,    6, 1103, 1358, 1739, 1349, 1522, 1532, 1634, 1965, 2357,
        1441,  476, 2545,  257, 1117, 2049, 2455, 2604, 1190, 2427,  406, 1520,
        2581,  457,  710, 1392, 2213, 2214, 2215,  458, 2363,  898, 1836, 1301,
        1344, 2011, 2317,  758, 1169, 1762, 2492, 2643,  379,  646, 1537, 1549,
        1901, 1959,  633, 1862, 2582, 1666, 2034,  483,  514,  816, 1842, 2405,
         236,  306, 1551, 1623, 2045, 2079, 1080, 1309, 1416, 2162, 2312,   59,
        1721, 2476, 2651, 2217, 1687, 2454,  831,  652,  654,  284, 2223, 2224,
        2226,  927, 1315, 1316, 2140,  332, 1454, 1986,  834, 2169,  733, 1219,
        2303, 2667, 2668,  659, 1803,  485,   55, 1527,  567, 1161, 1262, 1599,
        2279,  963, 2645, 2095, 2144,  661, 1353,  412,  447, 1616, 1849,  139,
        1560, 1786, 2082, 2145, 1604, 2366,  604, 1013, 1351, 1914, 1920, 1926,
        2189,  279,  518, 1850, 1973, 1001, 1318, 2661, 2662, 1372, 1715,  401,
         767, 1016, 1256, 1761, 2175, 2176, 1076, 1501, 1939,  603, 2097, 1209,
        1737, 2616,   88, 2018, 2178,  201,  598, 1636, 1701, 2139, 2141, 1647,
        2157, 2209, 1602, 2056, 1810,  429, 1336, 2295, 1065, 2487, 2488, 1521,
         208,  541,  971, 1113, 1650,  697,  738, 2343,  864, 2210,  507,  866,
        1364, 1139, 1467, 2053, 2172, 2182, 1043, 2310, 2418, 1138, 1090, 1093,
        1271, 2367,  259, 2537, 1072, 2269, 2270, 2374, 2375,  109, 1367, 1622,
        2478,  347,  423,  527, 2180, 2159, 2329, 2504, 1582, 2624, 2701,  589,
         802,  980, 1158, 1910, 2251, 2252,  175,  596,  644, 2631,  152, 1530,
        1653, 2399, 2400,  723, 2614,  479,  904, 1022, 1234, 1702, 1703, 2238,
         269,  281, 1996,  970, 1632, 2444, 2642,  895, 1296, 1913,  233,  370,
         392, 2544, 1329, 1418, 1776, 1629, 1659, 2546,  441,  701,  484,  608,
        1775, 1790,  540,  747, 1884,  155,  156,  817,  158, 2075, 2077,  610,
        2288, 2506,  282, 2628, 2461,  583, 2222, 2225, 1589, 1322,  206, 2691,
         842, 2164,  550,  950, 1495, 2151,  330, 1046, 2001, 2122, 2123, 2380,
        1655, 1839,  973, 1594, 2184,  862,  863, 1160,  163, 1579,  606, 2360,
        2578, 1982, 2017,  391,  487, 2080,  373, 1042]), tensor([  55,   88,   36,   73,  133,   74,   60,  210,  323,  651,  771,  787,
         815, 1079, 1156, 1983, 2020, 2021, 1658, 2394, 2178,  130, 2011,  498,
         743, 1908,  737, 2013, 2012, 1713, 1174, 1527, 1882,  162, 1288, 1494,
        1741,  415, 2016,  300, 1394,   76, 1146, 1505, 1552, 1640, 1781, 2094,
        2106, 2107,  449,  558,  797,  876, 1035, 1136, 1189, 1214, 1358, 1723,
        1745, 1751,  109,  399,  452, 1623, 1670, 1777, 1784, 2045, 2082,  544,
         586, 1042, 1118, 1416, 1517, 2052, 2155, 2419]), tensor([ 102,   89,  139,   95,  118,  109, 1251, 1448, 1561, 1623, 1871, 1878,
        2256,  258,  884, 1087, 1094, 1157, 1401, 1530, 1585, 1653, 2463,   18,
         103,  306,  660,  910, 1780, 2045,  334,  456,  693,  734,  736,  861,
        1303, 1535, 1580, 1602, 1628, 1838, 2054, 2074, 2181, 2182, 2183, 2197,
        2199, 2200, 2201,  255,  388,  446,  454,  554,  581,  842, 1029, 1343,
        1507, 1538, 1616, 1690, 1851, 2010, 2030, 2112, 2165, 2166,  318, 2093,
        1789, 1998, 1337, 2092, 2094,  563, 1661,  153,  124,  176,  236, 1045,
         426,  459, 1769,  289, 1772, 1805, 1779, 1785]), tensor([  33,   48,   94,   65,   59,  286,  588,  698,  911, 1051, 2040, 2119,
        2120, 2121,  598,  714, 1031, 1662, 1666, 2041, 2205, 2206, 2471,  195,
         586,  675,  733,  934, 1649, 1966, 2263, 2355, 2357, 2490,  239,  543,
         619,  771, 1156, 1293, 1628, 2021, 2418, 2419,  105,  580,  609,  615,
        1067, 1287, 1358, 1627, 1725, 2651])]
----------------------------------------
bucketing dataloader: layer  1
bucketing dataloader: num of batch  4
check_connections_block*********************************
connection check : local_output_nid  [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 103, 104, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 194, 195, 196, 197, 198, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 190, 228, 229, 230, 231, 232, 233, 234, 117, 238, 239, 240, 241, 242, 243, 265, 266, 267, 268, 269, 270, 271, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 3, 255, 329, 330, 331, 332, 333, 353, 354, 355, 356, 357, 358, 359, 360, 345, 361, 23, 362, 363, 364, 365, 366, 367, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 28, 409, 246, 410, 411, 412, 413, 414, 415, 416, 417, 418, 281, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 287, 445, 446, 447, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 93, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 515, 516, 517, 518, 519, 205, 207, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 551, 552, 553, 554, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 340, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 556]
connection check : local_output_nid  [3, 28, 33, 42, 105, 108, 41, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 244, 245, 246, 136, 185, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 65, 293, 294, 295, 296, 297, 298, 299, 300, 318, 319, 320, 321, 322, 323, 324, 325, 141, 326, 327, 328, 93, 546, 547, 190, 548, 549, 550, 228, 364, 555, 507, 556, 557, 232, 558, 559, 560, 538]
connection check : local_output_nid  [14, 16, 23, 32, 44, 93, 187, 188, 189, 190, 191, 192, 193, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 49, 113, 226, 235, 236, 237, 228, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 487, 488, 489, 490, 491, 492, 298, 493, 494, 495, 87, 496, 225, 497, 498, 499, 500, 501, 502, 503, 504, 505]
connection check : local_output_nid  [52, 82, 94, 102, 117, 368, 369, 370, 371, 372, 373, 374, 375, 376, 411, 448, 449, 450, 218, 451, 452, 453, 454, 506, 507, 508, 310, 509, 510, 511, 512, 513, 148, 514, 534, 535, 536, 153, 157, 537, 282, 160, 447, 538, 24, 582, 583, 584, 585, 586, 141, 587, 588, 240]

block_gen_time in "generate_blocks_for_one_layer_block"  0.00876474380493164

bucketing dataloader: src_list  [tensor([  53,   39,   50,  ...,  901, 2055, 1198]), tensor([  55,   88,   36,   73,  133,   74,   60,  210,  323,  651,  771,  787,
         815, 1079, 1156, 1983, 2020, 2021, 1658, 2394, 2178,  130, 2011,  498,
         743, 1908,  737, 2013, 2012, 1713, 1174, 1527, 1882,  162, 1288, 1494,
        1741,  415, 2016,  300, 1394,   76, 1146, 1505, 1552, 1640, 1781, 2094,
        2106, 2107,  449,  558,  797,  876, 1035, 1136, 1189, 1214, 1358, 1723,
        1745, 1751,  109,  399,  452, 1623, 1670, 1777, 1784, 2045, 2082,  544,
         586, 1042, 1118, 1416, 1517, 2052, 2155, 2419,  851, 1309, 2017,  841,
          37,  164, 1614, 1626, 1671, 1905, 1906, 1907, 2309, 2022,  885, 1667,
        1984, 2023, 2024, 2156,   65, 1080,  325,  438, 1344, 2018, 1218, 1914,
         897, 2034,  239, 1628, 2418, 1420, 2395,  504, 2228,  471,  600, 2397,
        1399, 2396, 1396, 1979, 1982,   25,  733,  356,  436,  437, 1652,  160,
         745, 1239, 1570, 1986,  211, 1178, 1474, 1529, 1677, 1269, 1630, 1974,
        2136,  272, 1696, 1898, 1912,  331,  860, 1668, 2274, 2450,  514,  516,
         661, 1268, 2593,  525,  593, 1850, 2182, 2014, 1843,  842,  973, 2010,
        2071,  634, 2137, 1506, 2254, 1699,  330, 1801, 1072, 2086,  530, 1624,
        1788, 1089, 1778, 2591,  306,  350, 1998,  441, 1280, 1834, 2581, 1706,
        2585,  800, 1833, 2359,  834, 2168, 2584,  915, 1433, 1486, 1740, 2554,
         337, 1199, 1499, 1716, 1748, 1040, 1734, 1145,  326, 1604,  882, 1281,
         957,  626,  565,  768, 1724, 1589, 1725, 2596, 1426,  289, 2092, 1769,
        1045,  153, 1772,  318,  459, 1258,  581,  660, 1780,  608,  384,  102,
         303,  308,  519, 1346,  426, 2143, 2096, 1337, 2047, 1791, 1852, 2046,
        2048,  341,   18,  456, 1580, 2199, 2347,   94, 1224, 2054,  624,  373,
        1926, 1481,  901, 2055, 1198, 1925, 1924, 1468, 1008,   30,  572,   61,
         718, 2153,  539,  993, 1535,  749,  280, 2295, 1131,  497, 1848]), tensor([ 102,   89,  139,   95,  118,  109, 1251, 1448, 1561, 1623, 1871, 1878,
        2256,  258,  884, 1087, 1094, 1157, 1401, 1530, 1585, 1653, 2463,   18,
         103,  306,  660,  910, 1780, 2045,  334,  456,  693,  734,  736,  861,
        1303, 1535, 1580, 1602, 1628, 1838, 2054, 2074, 2181, 2182, 2183, 2197,
        2199, 2200, 2201,  255,  388,  446,  454,  554,  581,  842, 1029, 1343,
        1507, 1538, 1616, 1690, 1851, 2010, 2030, 2112, 2165, 2166,  318, 2093,
        1789, 1998, 1337, 2092, 2094,  563, 1661,  153,  124,  176,  236, 1045,
         426,  459, 1769,  289, 1772, 1805, 1779, 1785,  505, 2034,  452,  133,
         608,  384,  350,  228,  417, 1701,  661,  963, 1153, 1240, 2645,  152,
        2434, 1369, 1443, 2240,  761,   43, 2464,  340,  584, 1560, 1786, 2082,
        2145,  484, 1775, 1790, 2091, 2090,  973, 2089,  476, 1799, 1856,  958,
         239,  887, 2085, 1624, 1773, 2047, 1791, 1852, 2046, 2048, 1784,  341,
        1013,  142,  525,  544,  667, 2347, 2472,  763, 2108, 2202, 2056,  408,
         964,  751, 1388, 1841, 1006, 1631, 1397, 2068, 2330,  746,  979, 1026,
        2163,  280, 1351, 1916, 2155, 2293, 1892,    6,  100,  315, 1204, 1416,
        2072, 2073, 2055, 2172,   65, 1635, 1042, 1117, 2057, 2053, 2021, 2219,
        1139, 1540, 2133, 2277, 2196, 2131, 2180, 2232, 1515, 2231,  965,  680,
         731,  901, 2186,  552, 1266, 1899, 2497,  903, 1917, 2188, 2190, 2189,
        1441, 2022,  685, 1792,   87,  161, 2016,  836, 1645, 2316,  989, 2436,
         643,  747, 1131, 1133, 1500, 1842, 2185,   56,  412,  447,  539, 1402,
        1849, 2050, 1224, 2485,   88,  711,  279,  741,  831, 1015, 1618,  191,
         519,  695, 1197, 1781, 1986, 2326,   36,  441,  530, 2086, 2106, 1367,
        1622, 2478,  231, 2079, 1072, 2078,  138, 1572, 1571,  487, 1777, 1782,
        1681,  399, 1358, 1722, 1564,  556, 2318,  317,  808]), tensor([  33,   48,   94,   65,   59,  286,  588,  698,  911, 1051, 2040, 2119,
        2120, 2121,  598,  714, 1031, 1662, 1666, 2041, 2205, 2206, 2471,  195,
         586,  675,  733,  934, 1649, 1966, 2263, 2355, 2357, 2490,  239,  543,
         619,  771, 1156, 1293, 1628, 2021, 2418, 2419,  105,  580,  609,  615,
        1067, 1287, 1358, 1627, 1725, 2651,  442, 2383, 1015,  893, 1534, 2376,
        2122, 2034,  218,  665, 2637, 2001, 1297,  297, 1870, 1573,  165, 1875,
        1301, 1473,  637,  148, 1385,  788, 1952, 2381, 2398,    2,   49,  606,
         429, 1951, 2493, 2424,   74, 1218, 1224, 2155, 2356, 2303, 1329, 1682,
         377, 1192, 2035, 2304,  862, 2011, 1964, 1703,  362, 1569, 1702,  463,
        1971, 1234,  946,   39, 1846, 1909,  910, 1069, 1759, 1376, 2182, 1220,
         984,   55, 1080,  897, 1013, 2055, 2172, 1635, 1042, 1117, 2057, 2053,
        2054,   57,  572,  497, 1848, 1721, 2476,  744, 1742, 1758, 1765, 2444,
        2445,  534,  883, 1041, 2446, 2447, 2448, 2443,  170,  936, 1216, 1830,
        2307,  481, 1164, 1748, 1040, 1734, 1145,  326, 1604,  882, 1281,  957,
         626, 1229, 1308, 1740, 1712, 2413, 1070, 1427, 2597, 2334,  628, 1072,
        1745, 2596])]
block collection to dataloader spend  6.9141387939453125e-06
step  0
----------------------------------------before batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.27560853958129883  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.457913875579834  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

----------------------------------------after loss function
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.457913875579834  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

step  1
----------------------------------------before batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.2713584899902344  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.3103609085083008  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

----------------------------------------after loss function
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.3103618621826172  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

step  2
----------------------------------------before batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.2715749740600586  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.31638288497924805  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

----------------------------------------after loss function
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.31638383865356445  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

step  3
----------------------------------------before batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.27074241638183594  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.2950587272644043  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

----------------------------------------after loss function
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.2950596809387207  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

----------------------------------------after optimizer
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.2707486152648926  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.9005752801895142
pure train time :  0.28159379959106445
train time :  0.344332218170166
end to end time :  0.4062464237213135
connection check time:  0.011843442916870117
block generation time  0.015663623809814453
generate_dataloader_bucket_block=======
get_in_degree_bucketing src global nid  tensor([ 106,   38,   72,   55,   86,   23,  110,   44,   73,  133,   52,  135,
         104,   16,  118,   65,  112,  107,   98,   30,    9,   74,   76,   50,
         127,  132,  103,   84,  138,   12,   28,   91,   70,   66,   43,  109,
         131,  120,  111,   71,   21,  101,   42,   14,   25,  139,   58,   27,
          11,   35,  126,   33,   75,   60,   97,   15,   99,    8,   87,   82,
          59,   36,   34,   18,   85,  137,   26,   24,   13,  105,  114,  122,
           3,   57,   92,  100,   37,  108,   41,   53,  134,   64,   47,  125,
          79,    6,   39,    4,  115,  128,   48,   95,   67,  117,  129,  123,
          80,   22,   46,   61,   81,   69,   94,    0,  116,  136,   68,  113,
          40,   17,    2,  121,   29,    7,  102,   83,   62,   88,   19,   51,
           5,   56,   20,  130,   32,    1,   90,   89,   77,   63,   78,  124,
         119,   45,   96,   54,   31,   49,   93,   10, 2461,  429,  862,  863,
        1160, 1103, 1358,  210,  323,  651,  771,  787,  815, 1079, 1156, 1983,
        2020, 2021, 1336, 2034, 2295, 2159,  567, 1161, 1262, 1599, 2279, 1582,
        2624, 2701,  449,  558,  797,  876, 1035, 1136, 1189, 1214, 1723, 1745,
        1751,  399,  452, 1623, 1670, 1777, 1784, 2045, 2082, 1139, 1467, 2053,
        2172, 2182, 2095, 2144,  401,  864, 1065, 2210,  970, 1632, 2444, 2642,
         255,  388,  446,  454,  554,  581,  842, 1029, 1343, 1507, 1538, 1616,
        1690, 1851, 2010, 2030, 2112, 2165, 2166,  239,  543,  619, 1293, 1628,
        2418, 2419,  306,  487, 2080,  541,  971, 1113, 1650, 1521,  697,  738,
        1416, 2162, 2343,  723, 2614,  544,  586, 1042, 1118, 1517, 2052, 2155,
        2018, 2178, 1441, 2604,  379,  479,  904, 1022, 1959,  484,  608, 1775,
        1790,  284, 2223, 2224, 2226,  236, 1776, 1001, 1318, 2661, 2662, 1687,
         330, 1046, 2001, 2122, 2123, 2380,  441, 2184, 2631,  152,  963, 1530,
        1653, 2399, 2400,  426,  176, 1769, 1787, 1998,  610,  563,  459, 1661,
        1785, 1772, 2093,  318, 1337,  519, 1624,  289, 2094,  153, 2092, 1779,
         834, 2169,  483,  514,  816, 1842, 2405,  758, 1169, 1762, 2492, 2643,
         206, 1986, 2691, 1043, 2310,  281, 1589, 1372,  158, 2075, 2077, 2668,
        1301, 1344, 2011, 2317,  660,  910, 1780, 1715,  606, 1810, 2360, 2578,
        1655, 1839,  895, 1296, 1913, 1551, 2079,  286,  588,  698,  911, 1051,
        2040, 2119, 2120, 2121,  583, 2222, 2225, 1527,  661, 1353, 1090, 1093,
        1271, 2367, 2454, 2455,  269, 1996, 2164, 1138, 1634,  580,  609,  615,
        1067, 1287, 1627, 1725, 2651, 1146, 1505, 1552, 1640, 1781, 2106, 2107,
        1560, 1786, 2145, 2487, 2488, 2329, 2504,  201,  598, 1636, 1701, 2139,
        2141, 1721, 2476, 2288, 2506, 2544,  898, 1836, 1602, 2056, 1190, 2427,
        1647, 2157, 2209,  175,  596,  644, 1914, 1739,  406, 1209, 1737, 2616,
         163, 1579,  458, 2363,  603, 2097,  373, 1349, 1522, 1532, 1965, 2357,
        1016, 1256, 1761, 2175, 2176,  973,  233,  370,  392, 2270,  714, 1031,
        1662, 1666, 2041, 2205, 2206, 2471,  334,  456,  693,  734,  736,  861,
        1303, 1535, 1580, 1838, 2054, 2074, 2181, 2183, 2197, 2199, 2200, 2201,
         282,  540, 2628,  259, 2537,  701,  257, 1117, 2049, 1234, 1702, 1703,
        2238, 1604, 2366, 1080, 1309, 2312,  347,  423,  527, 2180,  604, 1013,
        1351, 1920, 1926, 2189,  195,  675,  733,  934, 1649, 1966, 2263, 2355,
        2490,  633, 1862, 2582, 1076, 1501,  831,  391,  747, 1884,  507,  866,
        1364,  927, 1315, 1316, 2140,  332, 1454,  589,  802,  980, 1158, 1910,
        2251, 2252, 2645,  208, 1251, 1448, 1561, 1871, 1878, 2256, 1520, 2581,
         485, 2014, 1908, 2394,  696,  300, 1732, 1394,  851, 2016,  415, 2015,
         162, 2013,  737, 1288, 1882,  841, 1677,  743, 2017, 1939,  457,  710,
        1392, 2213, 2214, 2215, 1629, 1659, 2546,  412,  447, 1849, 1072, 2269,
        2374, 2375, 1982,  279,  518, 1850, 1973,  652,  654,  155,  156,  817,
         258,  884, 1087, 1094, 1157, 1401, 1585, 2463,  659, 1803, 1322, 1219,
        1329, 1418, 1367, 1622, 2478,  646, 1537, 1549, 1901, 2303, 2667, 2217,
         767, 1594,  550,  950, 1495, 2151,  476, 2545])
get_in_degree_bucketing dst global nid  tensor([106,  38,  72,  55,  86,  23, 110,  44,  73, 133,  52, 135, 104,  16,
        118,  65, 112, 107,  98,  30,   9,  74,  76,  50, 127, 132, 103,  84,
        138,  12,  28,  91,  70,  66,  43, 109, 131, 120, 111,  71,  21, 101,
         42,  14,  25, 139,  58,  27,  11,  35, 126,  33,  75,  60,  97,  15,
         99,   8,  87,  82,  59,  36,  34,  18,  85, 137,  26,  24,  13, 105,
        114, 122,   3,  57,  92, 100,  37, 108,  41,  53, 134,  64,  47, 125,
         79,   6,  39,   4, 115, 128,  48,  95,  67, 117, 129, 123,  80,  22,
         46,  61,  81,  69,  94,   0, 116, 136,  68, 113,  40,  17,   2, 121,
         29,   7, 102,  83,  62,  88,  19,  51,   5,  56,  20, 130,  32,   1,
         90,  89,  77,  63,  78, 124, 119,  45,  96,  54,  31,  49,  93,  10])
get_in_degree_bucketing corresponding in degs tensor([ 1,  4,  2, 12,  4,  1,  5,  3, 12,  9,  5,  3,  4,  4, 19, 10,  4,  4,
         1,  6,  2,  9,  3,  1,  1,  5,  6,  5,  3,  4,  1,  6,  2,  1,  6, 25,
         2,  5,  6,  3,  2,  3,  2,  5,  4,  8,  1,  4,  2,  3,  6,  9,  6,  3,
         2,  4,  6,  3,  3,  2, 10,  8,  1,  5,  3,  4,  5,  7,  2,  4,  3,  4,
         1,  1,  2,  2,  3,  3,  4,  3,  1,  3,  2,  2,  2,  4,  7,  5,  1,  4,
         9, 21,  3,  2,  2,  4,  3,  5,  2,  5,  4,  7, 11,  3,  2,  1,  3,  3,
         3,  5,  5,  7,  2,  1,  8,  2,  1, 25,  1,  6,  3,  4,  5,  3,  4,  3,
         4, 10,  2,  1,  3,  5,  6,  6,  1,  2,  1,  2,  4,  2])
len(bkt)  20
local bkt nids  tensor([  0,   5,  18,  23,  24,  30,  33,  46,  62,  72,  73,  80,  88, 105,
        113, 116, 118, 129, 134, 136])
len(bkt)  25
local bkt nids  tensor([  2,  20,  32,  36,  40,  42,  48,  54,  59,  68,  74,  75,  82,  83,
         84,  93,  94,  98, 104, 112, 115, 128, 135, 137, 139])
len(bkt)  26
local bkt nids  tensor([  7,  11,  22,  28,  39,  41,  49,  53,  57,  58,  64,  70,  76,  77,
         79,  81,  92,  96, 103, 106, 107, 108, 120, 123, 125, 130])
len(bkt)  22
local bkt nids  tensor([  1,   4,  12,  13,  16,  17,  29,  44,  47,  55,  65,  69,  71,  78,
         85,  89,  95, 100, 121, 124, 126, 138])
len(bkt)  15
local bkt nids  tensor([  6,  10,  25,  27,  37,  43,  63,  66,  87,  97,  99, 109, 110, 122,
        131])
len(bkt)  11
local bkt nids  tensor([ 19,  26,  31,  34,  38,  50,  52,  56, 119, 132, 133])
len(bkt)  4
local bkt nids  tensor([ 67,  86, 101, 111])
len(bkt)  3
local bkt nids  tensor([ 45,  61, 114])
len(bkt)  4
local bkt nids  tensor([ 9, 21, 51, 90])
len(bkt)  3
local bkt nids  tensor([ 15,  60, 127])
len(bkt)  1
local bkt nids  tensor([102])
len(bkt)  2
local bkt nids  tensor([3, 8])
len(bkt)  1
local bkt nids  tensor([14])
len(bkt)  1
local bkt nids  tensor([91])
len(bkt)  2
local bkt nids  tensor([ 35, 117])
bucket partitioner: bkt_dst_nodes_list_local  [tensor([  0,   5,  18,  23,  24,  30,  33,  46,  62,  72,  73,  80,  88, 105,
        113, 116, 118, 129, 134, 136]), tensor([  2,  20,  32,  36,  40,  42,  48,  54,  59,  68,  74,  75,  82,  83,
         84,  93,  94,  98, 104, 112, 115, 128, 135, 137, 139]), tensor([  7,  11,  22,  28,  39,  41,  49,  53,  57,  58,  64,  70,  76,  77,
         79,  81,  92,  96, 103, 106, 107, 108, 120, 123, 125, 130]), tensor([  1,   4,  12,  13,  16,  17,  29,  44,  47,  55,  65,  69,  71,  78,
         85,  89,  95, 100, 121, 124, 126, 138]), tensor([  6,  10,  25,  27,  37,  43,  63,  66,  87,  97,  99, 109, 110, 122,
        131]), tensor([ 19,  26,  31,  34,  38,  50,  52,  56, 119, 132, 133]), tensor([ 67,  86, 101, 111]), tensor([ 45,  61, 114]), tensor([ 9, 21, 51, 90]), tensor([ 15,  60, 127]), tensor([102]), tensor([3, 8]), tensor([14]), tensor([91]), tensor([ 35, 117])]
---||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||--
bkt_dst_nodes_list = self.get_in_degree_bucketing() spend:  0.01288294792175293
self.gen_batches_seeds_list(bkt_dst_nodes_list_local) spend  0.00021076202392578125
local_to_global: src global  tensor([ 106,   38,   72,   55,   86,   23,  110,   44,   73,  133,   52,  135,
         104,   16,  118,   65,  112,  107,   98,   30,    9,   74,   76,   50,
         127,  132,  103,   84,  138,   12,   28,   91,   70,   66,   43,  109,
         131,  120,  111,   71,   21,  101,   42,   14,   25,  139,   58,   27,
          11,   35,  126,   33,   75,   60,   97,   15,   99,    8,   87,   82,
          59,   36,   34,   18,   85,  137,   26,   24,   13,  105,  114,  122,
           3,   57,   92,  100,   37,  108,   41,   53,  134,   64,   47,  125,
          79,    6,   39,    4,  115,  128,   48,   95,   67,  117,  129,  123,
          80,   22,   46,   61,   81,   69,   94,    0,  116,  136,   68,  113,
          40,   17,    2,  121,   29,    7,  102,   83,   62,   88,   19,   51,
           5,   56,   20,  130,   32,    1,   90,   89,   77,   63,   78,  124,
         119,   45,   96,   54,   31,   49,   93,   10, 2461,  429,  862,  863,
        1160, 1103, 1358,  210,  323,  651,  771,  787,  815, 1079, 1156, 1983,
        2020, 2021, 1336, 2034, 2295, 2159,  567, 1161, 1262, 1599, 2279, 1582,
        2624, 2701,  449,  558,  797,  876, 1035, 1136, 1189, 1214, 1723, 1745,
        1751,  399,  452, 1623, 1670, 1777, 1784, 2045, 2082, 1139, 1467, 2053,
        2172, 2182, 2095, 2144,  401,  864, 1065, 2210,  970, 1632, 2444, 2642,
         255,  388,  446,  454,  554,  581,  842, 1029, 1343, 1507, 1538, 1616,
        1690, 1851, 2010, 2030, 2112, 2165, 2166,  239,  543,  619, 1293, 1628,
        2418, 2419,  306,  487, 2080,  541,  971, 1113, 1650, 1521,  697,  738,
        1416, 2162, 2343,  723, 2614,  544,  586, 1042, 1118, 1517, 2052, 2155,
        2018, 2178, 1441, 2604,  379,  479,  904, 1022, 1959,  484,  608, 1775,
        1790,  284, 2223, 2224, 2226,  236, 1776, 1001, 1318, 2661, 2662, 1687,
         330, 1046, 2001, 2122, 2123, 2380,  441, 2184, 2631,  152,  963, 1530,
        1653, 2399, 2400,  426,  176, 1769, 1787, 1998,  610,  563,  459, 1661,
        1785, 1772, 2093,  318, 1337,  519, 1624,  289, 2094,  153, 2092, 1779,
         834, 2169,  483,  514,  816, 1842, 2405,  758, 1169, 1762, 2492, 2643,
         206, 1986, 2691, 1043, 2310,  281, 1589, 1372,  158, 2075, 2077, 2668,
        1301, 1344, 2011, 2317,  660,  910, 1780, 1715,  606, 1810, 2360, 2578,
        1655, 1839,  895, 1296, 1913, 1551, 2079,  286,  588,  698,  911, 1051,
        2040, 2119, 2120, 2121,  583, 2222, 2225, 1527,  661, 1353, 1090, 1093,
        1271, 2367, 2454, 2455,  269, 1996, 2164, 1138, 1634,  580,  609,  615,
        1067, 1287, 1627, 1725, 2651, 1146, 1505, 1552, 1640, 1781, 2106, 2107,
        1560, 1786, 2145, 2487, 2488, 2329, 2504,  201,  598, 1636, 1701, 2139,
        2141, 1721, 2476, 2288, 2506, 2544,  898, 1836, 1602, 2056, 1190, 2427,
        1647, 2157, 2209,  175,  596,  644, 1914, 1739,  406, 1209, 1737, 2616,
         163, 1579,  458, 2363,  603, 2097,  373, 1349, 1522, 1532, 1965, 2357,
        1016, 1256, 1761, 2175, 2176,  973,  233,  370,  392, 2270,  714, 1031,
        1662, 1666, 2041, 2205, 2206, 2471,  334,  456,  693,  734,  736,  861,
        1303, 1535, 1580, 1838, 2054, 2074, 2181, 2183, 2197, 2199, 2200, 2201,
         282,  540, 2628,  259, 2537,  701,  257, 1117, 2049, 1234, 1702, 1703,
        2238, 1604, 2366, 1080, 1309, 2312,  347,  423,  527, 2180,  604, 1013,
        1351, 1920, 1926, 2189,  195,  675,  733,  934, 1649, 1966, 2263, 2355,
        2490,  633, 1862, 2582, 1076, 1501,  831,  391,  747, 1884,  507,  866,
        1364,  927, 1315, 1316, 2140,  332, 1454,  589,  802,  980, 1158, 1910,
        2251, 2252, 2645,  208, 1251, 1448, 1561, 1871, 1878, 2256, 1520, 2581,
         485, 2014, 1908, 2394,  696,  300, 1732, 1394,  851, 2016,  415, 2015,
         162, 2013,  737, 1288, 1882,  841, 1677,  743, 2017, 1939,  457,  710,
        1392, 2213, 2214, 2215, 1629, 1659, 2546,  412,  447, 1849, 1072, 2269,
        2374, 2375, 1982,  279,  518, 1850, 1973,  652,  654,  155,  156,  817,
         258,  884, 1087, 1094, 1157, 1401, 1585, 2463,  659, 1803, 1322, 1219,
        1329, 1418, 1367, 1622, 2478,  646, 1537, 1549, 1901, 2303, 2667, 2217,
         767, 1594,  550,  950, 1495, 2151,  476, 2545])
local_to_global: local nid  tensor([  0,   1,   2,   4,   5,   6,   7,  10,  11,  12,  13,  16,  17,  18,
         19,  20,  22,  23,  24,  25,  26,  27,  28,  29,  30,  31,  32,  33,
         34,  36,  37,  38,  39,  40,  41,  42,  43,  44,  46,  47,  48,  49,
         50,  52,  53,  54,  55,  56,  57,  58,  59,  62,  63,  64,  65,  66,
         67,  68,  69,  70,  71,  72,  73,  74,  75,  76,  77,  78,  79,  80,
         81,  82,  83,  84,  85,  86,  87,  88,  89,  92,  93,  94,  95,  96,
         97,  98,  99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111,
        112, 113, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128,
        129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139])
local_to_global: local nid after sort  tensor([  0,   1,   2,   4,   5,   6,   7,  10,  11,  12,  13,  16,  17,  18,
         19,  20,  22,  23,  24,  25,  26,  27,  28,  29,  30,  31,  32,  33,
         34,  36,  37,  38,  39,  40,  41,  42,  43,  44,  46,  47,  48,  49,
         50,  52,  53,  54,  55,  56,  57,  58,  59,  62,  63,  64,  65,  66,
         67,  68,  69,  70,  71,  72,  73,  74,  75,  76,  77,  78,  79,  80,
         81,  82,  83,  84,  85,  86,  87,  88,  89,  92,  93,  94,  95,  96,
         97,  98,  99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111,
        112, 113, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128,
        129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139])
local_to_global: local nid  tensor([114,   8,  15,   9,  51,  91])
local_to_global: local nid after sort  tensor([  8,   9,  15,  51,  91, 114])
local_to_global: local nid  tensor([  3,  14,  45,  60, 102,  21])
local_to_global: local nid after sort  tensor([  3,  14,  21,  45,  60, 102])
local_to_global: local nid  tensor([117,  90,  35,  61, 127])
local_to_global: local nid after sort  tensor([ 35,  61,  90, 117, 127])
local_to_global: local_batched_seeds_list  [tensor([  0,   1,   2,   4,   5,   6,   7,  10,  11,  12,  13,  16,  17,  18,
         19,  20,  22,  23,  24,  25,  26,  27,  28,  29,  30,  31,  32,  33,
         34,  36,  37,  38,  39,  40,  41,  42,  43,  44,  46,  47,  48,  49,
         50,  52,  53,  54,  55,  56,  57,  58,  59,  62,  63,  64,  65,  66,
         67,  68,  69,  70,  71,  72,  73,  74,  75,  76,  77,  78,  79,  80,
         81,  82,  83,  84,  85,  86,  87,  88,  89,  92,  93,  94,  95,  96,
         97,  98,  99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111,
        112, 113, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128,
        129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139]), tensor([114,   8,  15,   9,  51,  91]), tensor([  3,  14,  45,  60, 102,  21]), tensor([117,  90,  35,  61, 127])]
local_to_global: global_batched_seeds_list  [tensor([106,  38,  72,  86,  23, 110,  44,  52, 135, 104,  16, 112, 107,  98,
         30,   9,  76,  50, 127, 132, 103,  84, 138,  12,  28,  91,  70,  66,
         43, 131, 120, 111,  71,  21, 101,  42,  14,  25,  58,  27,  11,  35,
        126,  75,  60,  97,  15,  99,   8,  87,  82,  34,  18,  85, 137,  26,
         24,  13, 105, 114, 122,   3,  57,  92, 100,  37, 108,  41,  53, 134,
         64,  47, 125,  79,   6,  39,   4, 115, 128,  67, 117, 129, 123,  80,
         22,  46,  61,  81,  69,   0, 116, 136,  68, 113,  40,  17,   2, 121,
         29,   7,  83,  62,  19,  51,   5,  56,  20, 130,  32,   1,  90,  77,
         63,  78, 124, 119,  45,  96,  54,  31,  49,  93,  10]), tensor([ 73, 133,  65,  33,  95, 102]), tensor([ 55, 118,  74, 139,  59,  94]), tensor([109,  36,  48,  88,  89])]
partition total batch output list spend :  0.022708415985107422
self.buckets_partition() spend  sec:  0.013112068176269531
bucketing dataloader: layer  0
bucketing dataloader: the number of batches:  4
bucketing dataloader: global_batched_output_nid_list  [tensor([106,  38,  72,  86,  23, 110,  44,  52, 135, 104,  16, 112, 107,  98,
         30,   9,  76,  50, 127, 132, 103,  84, 138,  12,  28,  91,  70,  66,
         43, 131, 120, 111,  71,  21, 101,  42,  14,  25,  58,  27,  11,  35,
        126,  75,  60,  97,  15,  99,   8,  87,  82,  34,  18,  85, 137,  26,
         24,  13, 105, 114, 122,   3,  57,  92, 100,  37, 108,  41,  53, 134,
         64,  47, 125,  79,   6,  39,   4, 115, 128,  67, 117, 129, 123,  80,
         22,  46,  61,  81,  69,   0, 116, 136,  68, 113,  40,  17,   2, 121,
         29,   7,  83,  62,  19,  51,   5,  56,  20, 130,  32,   1,  90,  77,
         63,  78, 124, 119,  45,  96,  54,  31,  49,  93,  10]), tensor([ 73, 133,  65,  33,  95, 102]), tensor([ 55, 118,  74, 139,  59,  94]), tensor([109,  36,  48,  88,  89])]
check_connections_block*********************************
connection check : local_output_nid  [0, 1, 2, 4, 5, 6, 7, 10, 11, 12, 13, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139]
connection check : local_output_nid  [8, 9, 15, 51, 91, 114]
connection check : local_output_nid  [3, 14, 21, 45, 60, 102]
connection check : local_output_nid  [35, 61, 90, 117, 127]

block_gen_time in "generate_blocks_for_one_layer_block"  0.007000446319580078

bucketing dataloader: global src_list  [tensor([ 106,   38,   72,   86,   23,  110,   44,   52,  135,  104,   16,  112,
         107,   98,   30,    9,   76,   50,  127,  132,  103,   84,  138,   12,
          28,   91,   70,   66,   43,  131,  120,  111,   71,   21,  101,   42,
          14,   25,   58,   27,   11,   35,  126,   75,   60,   97,   15,   99,
           8,   87,   82,   34,   18,   85,  137,   26,   24,   13,  105,  114,
         122,    3,   57,   92,  100,   37,  108,   41,   53,  134,   64,   47,
         125,   79,    6,   39,    4,  115,  128,   67,  117,  129,  123,   80,
          22,   46,   61,   81,   69,    0,  116,  136,   68,  113,   40,   17,
           2,  121,   29,    7,   83,   62,   19,   51,    5,   56,   20,  130,
          32,    1,   90,   77,   63,   78,  124,  119,   45,   96,   54,   31,
          49,   93,   10, 2461,  429,  862,  863, 1160, 1103, 1358, 1336, 2034,
        2295, 2159,  567, 1161, 1262, 1599, 2279, 1582, 2624, 2701, 1139, 1467,
        2053, 2172, 2182, 2095, 2144,  401,  864, 1065, 2210,  970, 1632, 2444,
        2642,  306,  487, 1623, 2080,  541,  971, 1113, 1650, 1521,  697,  738,
        1416, 2162, 2343,  723, 2614,   88, 2018, 2178, 1441, 2604,  379,  479,
         904, 1022, 1959,  139,  484,  608, 1775, 1790,  284, 2223, 2224, 2226,
         236, 1776, 1001, 1318, 2661, 2662, 1687,  330, 1046, 2001, 2122, 2123,
        2380,  441, 2184, 2631,  152,  963, 1530, 1653, 2399, 2400,  834, 2169,
         483,  514,  816, 1842, 2405,  758, 1169, 1762, 2492, 2643,  206, 1986,
        2691, 1043, 2310,  281, 1589, 1372,  158, 2075, 2077, 2668, 1301, 1344,
        2011, 2317, 1715,  606, 1810, 2360, 2578, 1655, 1839,  895, 1296, 1913,
        1551, 2045, 2079,  583, 2222, 2225,   55, 1527,  661, 1353, 1090, 1093,
        1271, 2367, 2454, 2455,  269, 1996,  842, 2164, 1138, 1634, 1560, 1786,
        2082, 2145, 2487, 2488, 2329, 2504,  201,  598, 1636, 1701, 2139, 2141,
          59, 1721, 2476, 2651,  610, 2288, 2506, 2544, 2418,  898, 1836, 1602,
        2056, 1190, 2427, 1647, 2157, 2209,  175,  596,  644, 1914, 1739,  406,
        1209, 1737, 2616,  163, 1579,  458, 2363,  603, 2097,  373, 1042, 1349,
        1522, 1532, 1965, 2357, 1016, 1256, 1761, 2175, 2176,  973,  233,  370,
         392, 2270,  282,  540, 2628,  259, 2537,  701,  257, 1117, 2049, 1234,
        1702, 1703, 2238, 1604, 2366, 1080, 1309, 2312,  347,  423,  527, 2180,
         604, 1013, 1351, 1920, 1926, 2189,  633, 1862, 2582, 1076, 1501,  831,
         391,  747, 1884,  507,  866, 1364,  927, 1315, 1316, 2140,  332, 1454,
        1666,  589,  802,  980, 1158, 1910, 2251, 2252, 2645,  208, 1520, 2581,
         485, 1939,  457,  710, 1392, 2213, 2214, 2215, 1629, 1659, 2546,  412,
         447, 1616, 1849, 1072, 2269, 2374, 2375, 1982, 2017,  279,  518, 1850,
        1973,  652,  654,  155,  156,  817,  659, 1803, 1322, 1219, 1329, 1418,
         109, 1367, 1622, 2478,  646, 1537, 1549, 1901,  733, 2303, 2667, 2217,
         767, 1594,  550,  950, 1495, 2151,  476, 2545]), tensor([  73,  133,   65,   33,   95,  102,  449,  558,  797,  876, 1035, 1136,
        1189, 1214, 1358, 1723, 1745, 1751,  109,  399,  452, 1623, 1670, 1777,
        1784, 2045, 2082,  239,  543,  619,  771, 1156, 1293, 1628, 2021, 2418,
        2419,  286,  588,  698,  911, 1051, 2040, 2119, 2120, 2121,  334,  456,
         693,  734,  736,  861, 1303, 1535, 1580, 1602, 1838, 2054, 2074, 2181,
        2182, 2183, 2197, 2199, 2200, 2201, 1251, 1448, 1561, 1871, 1878, 2256]), tensor([  55,  118,   74,  139,   59,   94,   60,  210,  323,  651,  771,  787,
         815, 1079, 1156, 1983, 2020, 2021,  255,  388,  446,  454,  554,  581,
         842, 1029, 1343, 1507, 1538, 1616, 1690, 1851, 2010, 2030, 2112, 2165,
        2166,  544,  586, 1042, 1118, 1416, 1517, 2052, 2155, 2419,   18,  103,
         306,  660,  910, 1623, 1780, 2045,  105,  580,  609,  615, 1067, 1287,
        1358, 1627, 1725, 2651,  195,  675,  733,  934, 1649, 1966, 2263, 2355,
        2357, 2490]), tensor([ 109,   36,   48,   88,   89,  102,  426,  176, 1769, 1787, 1998,  610,
         563,  459, 1661, 1785, 2095, 1772,  133, 2093,  318, 1337,  306,  519,
        1624,  289, 2094,  153, 2092, 1779, 1146, 1505, 1552, 1640, 1781, 2106,
        2107,  598,  714, 1031, 1662, 1666, 2041, 2205, 2206, 2471, 2014, 1908,
        2011, 2394,  696,  300,   76, 1732, 1394,  851, 2178, 2016,  130,  415,
        2015,  162, 2013,  737, 1288,  815, 1882,  841, 1677,  743, 2017,  258,
         884, 1087, 1094, 1157, 1401, 1530, 1585, 1653, 2463])]
----------------------------------------
bucketing dataloader: layer  1
bucketing dataloader: num of batch  4
check_connections_block*********************************
connection check : local_output_nid  [0, 1, 2, 4, 5, 6, 7, 10, 11, 12, 13, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 230, 231, 183, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 117, 252, 253, 254, 255, 256, 257, 258, 259, 260, 45, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 187, 354, 364, 365, 366, 3, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 210, 378, 379, 380, 396, 397, 188, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 60, 409, 410, 388, 296, 411, 412, 413, 228, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 247, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 457, 535, 536, 537, 538, 539, 540, 541, 542, 543, 550, 551, 552, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 215, 585, 586, 587, 588, 589, 590, 572, 591, 592, 593, 594, 595, 596, 597, 598, 599, 608, 609, 610, 611, 612, 613, 35, 614, 615, 616, 617, 618, 619, 620, 510, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631]
connection check : local_output_nid  [8, 9, 15, 51, 91, 114, 170, 171, 172, 173, 174, 175, 176, 177, 146, 178, 179, 180, 35, 181, 182, 183, 184, 185, 186, 187, 188, 223, 224, 225, 150, 154, 226, 227, 157, 228, 229, 355, 356, 357, 358, 359, 360, 361, 362, 363, 462, 463, 464, 465, 466, 467, 468, 469, 470, 416, 471, 472, 473, 474, 193, 475, 476, 477, 478, 479, 544, 545, 546, 547, 548, 549]
connection check : local_output_nid  [3, 14, 21, 45, 60, 102, 53, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 245, 246, 247, 248, 240, 249, 250, 251, 229, 63, 26, 230, 340, 341, 183, 342, 187, 69, 381, 382, 383, 384, 385, 146, 386, 387, 388, 508, 509, 510, 511, 512, 513, 514, 515, 443, 516]
connection check : local_output_nid  [35, 61, 90, 117, 127, 114, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 194, 301, 9, 302, 303, 304, 230, 305, 306, 307, 308, 309, 310, 311, 389, 390, 391, 392, 393, 394, 395, 404, 454, 455, 456, 457, 458, 459, 460, 461, 553, 554, 338, 555, 556, 557, 22, 558, 559, 560, 253, 561, 123, 562, 563, 564, 565, 566, 567, 152, 568, 569, 570, 571, 572, 600, 601, 602, 603, 604, 605, 287, 606, 288, 607]

block_gen_time in "generate_blocks_for_one_layer_block"  0.00867319107055664

bucketing dataloader: src_list  [tensor([ 106,   38,   72,  ..., 1224, 1140, 1800]), tensor([  73,  133,   65,   33,   95,  102,  449,  558,  797,  876, 1035, 1136,
        1189, 1214, 1358, 1723, 1745, 1751,  109,  399,  452, 1623, 1670, 1777,
        1784, 2045, 2082,  239,  543,  619,  771, 1156, 1293, 1628, 2021, 2418,
        2419,  286,  588,  698,  911, 1051, 2040, 2119, 2120, 2121,  334,  456,
         693,  734,  736,  861, 1303, 1535, 1580, 1602, 1838, 2054, 2074, 2181,
        2182, 2183, 2197, 2199, 2200, 2201, 1251, 1448, 1561, 1871, 1878, 2256,
        1280, 1834, 2581, 1706, 2585,  800, 1833, 2359,  834, 2168, 2584,  915,
        1433, 1486, 1740, 1801, 2554,  337, 1199, 1499, 1716, 1748, 1713,  326,
        1735,  757, 1154,  902,  155, 1750,  466,  565,  768, 1724, 1589, 1725,
        2596, 1426, 1772,  176, 1785,  318, 1998, 1624,  426, 2092, 1337,  306,
         544, 1089, 1769, 2107, 1258, 1780,  384,  719,  581,  542, 1768,  608,
        1771, 1781, 1776,  303,  308,  519, 1346, 2143, 1072, 2096, 1791, 1856,
        1651,  563, 2047,  603, 1852, 1013, 1830,   18, 1069,  887, 1274, 1909,
        1220, 1376, 1759,  984,   55, 1080,  897, 2172, 2056, 2057, 1635, 1540,
        2053, 1139,  525,   57,  572,   74,  497, 1848,  442, 2383, 1015,  893,
        1534, 2376, 2122, 2034,  218,  665, 2637, 2001,  142,  667, 2347, 2472,
         763, 1851, 2108,  964, 2277, 1388, 1006,  408,  751, 2202, 1631, 1841,
        1397, 2068, 2330,  746,  979, 1026, 2163,  280, 1351, 1916, 2155, 2293,
        1892,    6,  100,  315, 1204, 1416, 2072, 2073, 2219, 1042, 2133, 2196,
        2180, 2131,  858,  415, 1285,  965,  680,  731,  901, 2186,  552,  505,
         228,  417, 1701,  661]), tensor([  55,  118,   74,  139,   59,   94,   60,  210,  323,  651,  771,  787,
         815, 1079, 1156, 1983, 2020, 2021,  255,  388,  446,  454,  554,  581,
         842, 1029, 1343, 1507, 1538, 1616, 1690, 1851, 2010, 2030, 2112, 2165,
        2166,  544,  586, 1042, 1118, 1416, 1517, 2052, 2155, 2419,   18,  103,
         306,  660,  910, 1623, 1780, 2045,  105,  580,  609,  615, 1067, 1287,
        1358, 1627, 1725, 2651,  195,  675,  733,  934, 1649, 1966, 2263, 2355,
        2357, 2490,   37, 1527,  164, 1614, 1626, 1671, 1905, 1906, 1907, 2309,
         162,  498, 2022,  885, 1667, 1984, 2023, 2024, 2156,   65, 1080,  325,
         438,   88, 1174, 1344, 2017, 2018, 1218, 1914,  897, 2034,  239, 1628,
        2418, 1266, 1899, 2497,  903, 2189, 1441,  441, 2190,  973, 1661, 2188,
         685, 1792,   87,  161, 2016,  836, 1645, 2316,  989, 2436,  643,  747,
        1131, 1133, 1500, 1842, 2185,   56,  412,  447,  539, 1402, 1849, 2050,
         693, 1013, 1224, 2485,  711,  279,  399,  456, 1580, 1769, 2199, 2347,
        1925, 1025, 1481,  624,  373, 1926, 2333,  149, 1602, 1921, 1468, 1923,
          61,  305,  718,  749, 1152, 2294,  993, 1143, 2295, 2293,  497, 1848,
        1560, 1786, 2082, 2145,  484,  608, 1775, 1790,  542, 1640, 1045,  236,
         656, 1771, 1781,  302, 1072, 2046,  887, 2085,  384,  719, 1768, 1776,
        1624, 1773, 1791, 1784, 1856, 1651,  563, 2047,  603, 1852, 1830, 1721,
        2476,  744, 1742, 1758, 1765, 2444, 2445,  534,  883, 1041, 2446, 2447,
        2448, 2443,  170,  936, 1216, 2307,  481, 1164, 1748, 1713,  326, 1735,
         757, 1154,  902,  155, 1750,  466, 1229, 1308, 1740,  628, 1734, 1070,
        2597, 1427, 1745, 2413,  557, 2424, 2356, 2304, 1818,  862, 1329,  401,
         794,   45, 1817,  383,  759,  946,  443, 1569, 1703, 1702, 1964, 1234,
        1971,  362, 1015,   39, 1846]), tensor([ 109,   36,   48,   88,   89,  102,  426,  176, 1769, 1787, 1998,  610,
         563,  459, 1661, 1785, 2095, 1772,  133, 2093,  318, 1337,  306,  519,
        1624,  289, 2094,  153, 2092, 1779, 1146, 1505, 1552, 1640, 1781, 2106,
        2107,  598,  714, 1031, 1662, 1666, 2041, 2205, 2206, 2471, 2014, 1908,
        2011, 2394,  696,  300,   76, 1732, 1394,  851, 2178, 2016,  130,  415,
        2015,  162, 2013,  737, 1288,  815, 1882,  841, 1677,  743, 2017,  258,
         884, 1087, 1094, 1157, 1401, 1530, 1585, 1653, 2463, 1847, 1741, 1251,
        1448, 1561, 1623, 1871, 1878, 2256,  487, 1777, 1782, 1789, 1805,  231,
         973,  399,  544, 1810, 2045, 2143,  191,  695, 1197, 1986, 2326,  114,
         234,  826, 2287, 2288, 2481, 1701, 1681,  454, 1013, 1851,  317,  808,
         963,  135, 2145, 2329, 2504, 1564,  452, 1670, 1784, 2082,  741,  831,
         542, 1045,  236,  656, 1771,  302, 1072, 2046,  836, 1574, 1346,  416,
         387,  589, 1786,  384,  887, 1196, 1358, 1722,  441,  530, 2086,  505,
        2318, 1506, 2254,  773, 1699, 1801,  330, 1788, 1089, 1778, 2591,  350,
          24,  297, 1821,  637, 2138, 1875, 1297,  201,  165, 1100,  148, 1385,
         788, 1952, 2381, 2398,    2,   49,  606,  429, 2034, 1951, 2493,  211,
        1178, 1474, 1529,   25,  733, 2396, 1421, 1396, 2397, 1174, 1399,  600,
        1085,  724,  277,  571, 1570,  634, 2018,  748, 1224, 1566, 2137, 1309,
        1979, 2024,  842, 2010, 2071, 1982,  204,  966, 1644, 1850,  525,  323,
        1268, 1667,  471, 1269, 1630, 1974, 2136,   55, 1344,  514,  516,  661,
         160,  745, 1239, 1487, 2467, 1153, 1240, 2645,  152, 2434, 1369, 1443,
        2240,  761,   43, 2464,  340,  584])]
block collection to dataloader spend  6.4373016357421875e-06
step  0
----------------------------------------before batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.275571346282959  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.457913875579834  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

----------------------------------------after loss function
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.457913875579834  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

step  1
----------------------------------------before batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.2711176872253418  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.30729055404663086  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

----------------------------------------after loss function
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.30729150772094727  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

step  2
----------------------------------------before batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.2715740203857422  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.30762386322021484  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

----------------------------------------after loss function
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.30762481689453125  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

step  3
----------------------------------------before batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.2711491584777832  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.3082594871520996  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

----------------------------------------after loss function
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.308260440826416  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

----------------------------------------after optimizer
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.27115631103515625  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.893700361251831
pure train time :  0.2964460849761963
train time :  0.3592832088470459
end to end time :  0.4199039936065674
connection check time:  0.010474920272827148
block generation time  0.01567363739013672
generate_dataloader_bucket_block=======
get_in_degree_bucketing src global nid  tensor([ 128,   15,  123,   91,  135,   81,  110,   66,   41,  139,   33,   26,
          44,   77,   22,    0,   65,   59,    7,    9,   57,   99,  100,  103,
          51,   39,   95,   13,   30,   74,   75,   84,   19,   36,   64,  102,
          16,  109,  137,   48,  105,   78,   27,   85,  115,   37,   34,  138,
         129,   70,   61,   18,  118,  106,   21,  114,   86,   60,  119,  113,
          31,   80,   92,   56,  136,    3,  108,   94,  131,   17,    2,  133,
          88,   32,   28,    1,  116,  104,   23,  124,   96,   49,    6,   40,
          90,   98,  120,   20,   89,   14,   87,   72,   55,   69,   82,   43,
         127,   29,    5,   35,  126,    4,   97,   67,  134,    8,   73,  117,
          79,   68,   47,   42,   10,   83,   38,   58,  130,  125,  112,   71,
         132,  101,   25,   54,   52,   62,   53,   45,  111,   11,   46,   12,
         107,   24,   76,  121,   63,  122,   50,   93,  233,  370,  392, 2270,
        1090, 1093, 1271, 2367, 2455, 2604,  330, 1046, 2001, 2122, 2123, 2380,
        2095, 2144,  347,  423,  527, 2180,  567, 1161, 1262, 1599, 2279, 2631,
         175,  596,  644, 1914,  306,  660,  910, 1623, 1780, 2045,  286,  588,
         698,  911, 1051, 2040, 2119, 2120, 2121, 2454, 1582, 2624, 2701,  659,
        1803, 1234, 1702, 1703, 2238,  633, 1862, 2582,  239,  543,  619,  771,
        1156, 1293, 1628, 2021, 2418, 2419,  580,  609,  615, 1067, 1287, 1358,
        1627, 1725, 2651,  208,  723, 2614, 1602, 2056,  484,  608, 1775, 1790,
         457,  710, 1392, 2213, 2214, 2215, 1349, 1522, 1532, 1634, 1965, 2357,
         334,  456,  693,  734,  736,  861, 1303, 1535, 1580, 1838, 2054, 2074,
        2181, 2182, 2183, 2197, 2199, 2200, 2201, 1701, 1810,  697,  738, 1416,
        2162, 2343,  544,  586, 1042, 1118, 1517, 2052, 2155,  583, 2222, 2223,
        2224, 2225,  284, 2226, 1939, 1146, 1505, 1552, 1640, 1781, 2094, 2106,
        2107, 1209, 1737, 2616, 1251, 1448, 1561, 1871, 1878, 2256,  970, 1632,
        2444, 2642, 1337, 2092, 1805, 1772, 1624,  318, 2093, 1787, 1045,  289,
         563, 1346, 1789,  426, 1779, 1661,  153, 1785, 1998, 1769, 2329, 2504,
         598,  714, 1031, 1662, 1666, 2041, 2205, 2206, 2471, 1721, 2476, 1219,
        1329, 1418,  606, 2360, 2578, 1065, 2487, 2488,  973, 1190, 2427,  236,
        1776,  441,  701, 2184, 1080, 1309, 2312, 1560, 1786, 2082, 2145,  255,
         388,  446,  454,  554,  581,  842, 1029, 1343, 1507, 1538, 1616, 1690,
        1851, 2010, 2030, 2112, 2165, 2166, 2461, 1043, 2310,  610, 2288, 2506,
         429, 1336, 2034, 2295, 1527,  379,  646, 1537, 1549, 1901, 1959,  540,
         747, 1884, 1594,  257, 1117, 2049,  898, 1836,  412,  447, 1849,  831,
        2544, 1647, 2157, 2209,  195,  675,  733,  934, 1649, 1966, 2263, 2355,
        2490,  834, 2169,  927, 1315, 1316, 2140,  332, 1454, 1986,  399,  452,
        1670, 1777, 1784, 2015, 1174,  841, 1713, 2013, 1677, 1494,  498, 1732,
        2014,  162, 1658, 2011, 2012,  300, 1908,  696, 2394, 1288, 1741,  415,
        2178,  279,  518, 1850, 1973, 1687,  652,  654, 1076, 1501,  401,  864,
        2210, 2159, 1367, 1622, 2478, 2217,  373,  507,  866, 1364,  155,  156,
         817, 1521,  483,  514,  816, 1842, 2405, 1072, 2269, 2374, 2375,  258,
         884, 1087, 1094, 1157, 1401, 1530, 1585, 1653, 2463,  158, 2075, 2077,
        2668, 2164, 1103,  210,  323,  651,  787,  815, 1079, 1983, 2020,  604,
        1013, 1351, 1920, 1926, 2189, 1138,  152,  963, 2399, 2400, 2645, 1629,
        1659, 2546,  895, 1296, 1913, 1551, 2079, 1016, 1256, 1761, 2175, 2176,
         661, 1353,  282, 2628,  406,  269,  281, 1996,  449,  558,  797,  876,
        1035, 1136, 1189, 1214, 1723, 1745, 1751,  259, 2537,  603, 2097,  391,
         163, 1579, 1372,  476, 2545, 1520, 2581,  862,  863, 1160, 1715, 1982,
        2017,  458, 2363,  487, 2080,  206, 2691,  479,  904, 1022, 1589, 1301,
        1344, 2317,  767, 1139, 1467, 2053, 2172,  485, 1739, 2303, 2667,  758,
        1169, 1762, 2492, 2643, 1655, 1839, 1604, 2366, 1001, 1318, 2661, 2662,
         541,  971, 1113, 1650,  201, 1636, 2139, 2141, 2018,  589,  802,  980,
        1158, 1910, 2251, 2252, 1322, 1441,  550,  950, 1495, 2151])
get_in_degree_bucketing dst global nid  tensor([128,  15, 123,  91, 135,  81, 110,  66,  41, 139,  33,  26,  44,  77,
         22,   0,  65,  59,   7,   9,  57,  99, 100, 103,  51,  39,  95,  13,
         30,  74,  75,  84,  19,  36,  64, 102,  16, 109, 137,  48, 105,  78,
         27,  85, 115,  37,  34, 138, 129,  70,  61,  18, 118, 106,  21, 114,
         86,  60, 119, 113,  31,  80,  92,  56, 136,   3, 108,  94, 131,  17,
          2, 133,  88,  32,  28,   1, 116, 104,  23, 124,  96,  49,   6,  40,
         90,  98, 120,  20,  89,  14,  87,  72,  55,  69,  82,  43, 127,  29,
          5,  35, 126,   4,  97,  67, 134,   8,  73, 117,  79,  68,  47,  42,
         10,  83,  38,  58, 130, 125, 112,  71, 132, 101,  25,  54,  52,  62,
         53,  45, 111,  11,  46,  12, 107,  24,  76, 121,  63, 122,  50,  93])
get_in_degree_bucketing corresponding in degs tensor([ 4,  4,  4,  6,  3,  4,  5,  1,  4,  8,  9,  5,  3,  2,  5,  3, 10, 10,
         1,  2,  1,  6,  2,  6,  6,  7, 21,  2,  6,  9,  6,  5,  1,  8,  3,  8,
         4, 25,  4,  9,  4,  3,  4,  3,  1,  3,  1,  3,  2,  2,  5,  5, 19,  1,
         2,  3,  4,  3,  6,  3,  1,  3,  2,  4,  1,  1,  3, 11,  2,  5,  5,  9,
        25,  4,  1,  3,  2,  4,  1,  5,  1,  2,  4,  3,  4,  1,  5,  5, 10,  5,
         3,  2, 12,  7,  2,  6,  1,  2,  3,  3,  6,  5,  2,  3,  1,  3, 12,  2,
         2,  3,  2,  2,  2,  2,  4,  1,  3,  2,  4,  3,  5,  3,  4,  2,  5,  1,
         3,  6,  6,  2,  2,  4,  4,  7,  3,  7,  1,  4,  1,  4])
len(bkt)  20
local bkt nids  tensor([  7,  18,  20,  32,  44,  46,  53,  60,  64,  65,  74,  78,  80,  85,
         96, 104, 115, 125, 136, 138])
len(bkt)  25
local bkt nids  tensor([ 13,  19,  22,  27,  48,  49,  54,  62,  68,  76,  81,  91,  94,  97,
        102, 107, 108, 110, 111, 112, 113, 117, 123, 129, 130])
len(bkt)  26
local bkt nids  tensor([  4,  12,  15,  34,  41,  43,  45,  47,  55,  57,  59,  61,  66,  75,
         83,  90,  98,  99, 103, 105, 109, 116, 119, 121, 126, 134])
len(bkt)  22
local bkt nids  tensor([  0,   1,   2,   5,   8,  36,  38,  40,  42,  56,  63,  73,  77,  82,
         84, 114, 118, 122, 131, 132, 137, 139])
len(bkt)  15
local bkt nids  tensor([  6,  11,  14,  31,  50,  51,  69,  70,  79,  86,  87,  89, 101, 120,
        124])
len(bkt)  11
local bkt nids  tensor([  3,  21,  23,  24,  28,  30,  58,  95, 100, 127, 128])
len(bkt)  4
local bkt nids  tensor([ 25,  93, 133, 135])
len(bkt)  3
local bkt nids  tensor([ 9, 33, 35])
len(bkt)  4
local bkt nids  tensor([10, 29, 39, 71])
len(bkt)  3
local bkt nids  tensor([16, 17, 88])
len(bkt)  1
local bkt nids  tensor([67])
len(bkt)  2
local bkt nids  tensor([ 92, 106])
len(bkt)  1
local bkt nids  tensor([52])
len(bkt)  1
local bkt nids  tensor([26])
len(bkt)  2
local bkt nids  tensor([37, 72])
bucket partitioner: bkt_dst_nodes_list_local  [tensor([  7,  18,  20,  32,  44,  46,  53,  60,  64,  65,  74,  78,  80,  85,
         96, 104, 115, 125, 136, 138]), tensor([ 13,  19,  22,  27,  48,  49,  54,  62,  68,  76,  81,  91,  94,  97,
        102, 107, 108, 110, 111, 112, 113, 117, 123, 129, 130]), tensor([  4,  12,  15,  34,  41,  43,  45,  47,  55,  57,  59,  61,  66,  75,
         83,  90,  98,  99, 103, 105, 109, 116, 119, 121, 126, 134]), tensor([  0,   1,   2,   5,   8,  36,  38,  40,  42,  56,  63,  73,  77,  82,
         84, 114, 118, 122, 131, 132, 137, 139]), tensor([  6,  11,  14,  31,  50,  51,  69,  70,  79,  86,  87,  89, 101, 120,
        124]), tensor([  3,  21,  23,  24,  28,  30,  58,  95, 100, 127, 128]), tensor([ 25,  93, 133, 135]), tensor([ 9, 33, 35]), tensor([10, 29, 39, 71]), tensor([16, 17, 88]), tensor([67]), tensor([ 92, 106]), tensor([52]), tensor([26]), tensor([37, 72])]
---||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||--
bkt_dst_nodes_list = self.get_in_degree_bucketing() spend:  0.011926651000976562
self.gen_batches_seeds_list(bkt_dst_nodes_list_local) spend  0.00021719932556152344
local_to_global: src global  tensor([ 128,   15,  123,   91,  135,   81,  110,   66,   41,  139,   33,   26,
          44,   77,   22,    0,   65,   59,    7,    9,   57,   99,  100,  103,
          51,   39,   95,   13,   30,   74,   75,   84,   19,   36,   64,  102,
          16,  109,  137,   48,  105,   78,   27,   85,  115,   37,   34,  138,
         129,   70,   61,   18,  118,  106,   21,  114,   86,   60,  119,  113,
          31,   80,   92,   56,  136,    3,  108,   94,  131,   17,    2,  133,
          88,   32,   28,    1,  116,  104,   23,  124,   96,   49,    6,   40,
          90,   98,  120,   20,   89,   14,   87,   72,   55,   69,   82,   43,
         127,   29,    5,   35,  126,    4,   97,   67,  134,    8,   73,  117,
          79,   68,   47,   42,   10,   83,   38,   58,  130,  125,  112,   71,
         132,  101,   25,   54,   52,   62,   53,   45,  111,   11,   46,   12,
         107,   24,   76,  121,   63,  122,   50,   93,  233,  370,  392, 2270,
        1090, 1093, 1271, 2367, 2455, 2604,  330, 1046, 2001, 2122, 2123, 2380,
        2095, 2144,  347,  423,  527, 2180,  567, 1161, 1262, 1599, 2279, 2631,
         175,  596,  644, 1914,  306,  660,  910, 1623, 1780, 2045,  286,  588,
         698,  911, 1051, 2040, 2119, 2120, 2121, 2454, 1582, 2624, 2701,  659,
        1803, 1234, 1702, 1703, 2238,  633, 1862, 2582,  239,  543,  619,  771,
        1156, 1293, 1628, 2021, 2418, 2419,  580,  609,  615, 1067, 1287, 1358,
        1627, 1725, 2651,  208,  723, 2614, 1602, 2056,  484,  608, 1775, 1790,
         457,  710, 1392, 2213, 2214, 2215, 1349, 1522, 1532, 1634, 1965, 2357,
         334,  456,  693,  734,  736,  861, 1303, 1535, 1580, 1838, 2054, 2074,
        2181, 2182, 2183, 2197, 2199, 2200, 2201, 1701, 1810,  697,  738, 1416,
        2162, 2343,  544,  586, 1042, 1118, 1517, 2052, 2155,  583, 2222, 2223,
        2224, 2225,  284, 2226, 1939, 1146, 1505, 1552, 1640, 1781, 2094, 2106,
        2107, 1209, 1737, 2616, 1251, 1448, 1561, 1871, 1878, 2256,  970, 1632,
        2444, 2642, 1337, 2092, 1805, 1772, 1624,  318, 2093, 1787, 1045,  289,
         563, 1346, 1789,  426, 1779, 1661,  153, 1785, 1998, 1769, 2329, 2504,
         598,  714, 1031, 1662, 1666, 2041, 2205, 2206, 2471, 1721, 2476, 1219,
        1329, 1418,  606, 2360, 2578, 1065, 2487, 2488,  973, 1190, 2427,  236,
        1776,  441,  701, 2184, 1080, 1309, 2312, 1560, 1786, 2082, 2145,  255,
         388,  446,  454,  554,  581,  842, 1029, 1343, 1507, 1538, 1616, 1690,
        1851, 2010, 2030, 2112, 2165, 2166, 2461, 1043, 2310,  610, 2288, 2506,
         429, 1336, 2034, 2295, 1527,  379,  646, 1537, 1549, 1901, 1959,  540,
         747, 1884, 1594,  257, 1117, 2049,  898, 1836,  412,  447, 1849,  831,
        2544, 1647, 2157, 2209,  195,  675,  733,  934, 1649, 1966, 2263, 2355,
        2490,  834, 2169,  927, 1315, 1316, 2140,  332, 1454, 1986,  399,  452,
        1670, 1777, 1784, 2015, 1174,  841, 1713, 2013, 1677, 1494,  498, 1732,
        2014,  162, 1658, 2011, 2012,  300, 1908,  696, 2394, 1288, 1741,  415,
        2178,  279,  518, 1850, 1973, 1687,  652,  654, 1076, 1501,  401,  864,
        2210, 2159, 1367, 1622, 2478, 2217,  373,  507,  866, 1364,  155,  156,
         817, 1521,  483,  514,  816, 1842, 2405, 1072, 2269, 2374, 2375,  258,
         884, 1087, 1094, 1157, 1401, 1530, 1585, 1653, 2463,  158, 2075, 2077,
        2668, 2164, 1103,  210,  323,  651,  787,  815, 1079, 1983, 2020,  604,
        1013, 1351, 1920, 1926, 2189, 1138,  152,  963, 2399, 2400, 2645, 1629,
        1659, 2546,  895, 1296, 1913, 1551, 2079, 1016, 1256, 1761, 2175, 2176,
         661, 1353,  282, 2628,  406,  269,  281, 1996,  449,  558,  797,  876,
        1035, 1136, 1189, 1214, 1723, 1745, 1751,  259, 2537,  603, 2097,  391,
         163, 1579, 1372,  476, 2545, 1520, 2581,  862,  863, 1160, 1715, 1982,
        2017,  458, 2363,  487, 2080,  206, 2691,  479,  904, 1022, 1589, 1301,
        1344, 2317,  767, 1139, 1467, 2053, 2172,  485, 1739, 2303, 2667,  758,
        1169, 1762, 2492, 2643, 1655, 1839, 1604, 2366, 1001, 1318, 2661, 2662,
         541,  971, 1113, 1650,  201, 1636, 2139, 2141, 2018,  589,  802,  980,
        1158, 1910, 2251, 2252, 1322, 1441,  550,  950, 1495, 2151])
local_to_global: local nid  tensor([  0,   1,   2,   3,   4,   5,   6,   7,   8,  11,  12,  13,  14,  15,
         18,  19,  20,  21,  22,  23,  24,  25,  27,  28,  30,  31,  32,  34,
         36,  38,  40,  41,  42,  43,  44,  45,  46,  47,  48,  49,  50,  51,
         53,  54,  55,  56,  57,  58,  59,  60,  61,  62,  63,  64,  65,  66,
         68,  69,  70,  73,  74,  75,  76,  77,  78,  79,  80,  81,  82,  83,
         84,  85,  86,  87,  89,  90,  91,  93,  94,  95,  96,  97,  98,  99,
        100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114,
        115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
        129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139])
local_to_global: local nid after sort  tensor([  0,   1,   2,   3,   4,   5,   6,   7,   8,  11,  12,  13,  14,  15,
         18,  19,  20,  21,  22,  23,  24,  25,  27,  28,  30,  31,  32,  34,
         36,  38,  40,  41,  42,  43,  44,  45,  46,  47,  48,  49,  50,  51,
         53,  54,  55,  56,  57,  58,  59,  60,  61,  62,  63,  64,  65,  66,
         68,  69,  70,  73,  74,  75,  76,  77,  78,  79,  80,  81,  82,  83,
         84,  85,  86,  87,  89,  90,  91,  93,  94,  95,  96,  97,  98,  99,
        100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114,
        115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
        129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139])
local_to_global: local nid  tensor([ 67,   9,  88, 106,  71,  39])
local_to_global: local nid after sort  tensor([  9,  39,  67,  71,  88, 106])
local_to_global: local nid  tensor([92, 29, 33, 37, 72, 17])
local_to_global: local nid after sort  tensor([17, 29, 33, 37, 72, 92])
local_to_global: local nid  tensor([10, 35, 26, 16, 52])
local_to_global: local nid after sort  tensor([10, 16, 26, 35, 52])
local_to_global: local_batched_seeds_list  [tensor([  0,   1,   2,   3,   4,   5,   6,   7,   8,  11,  12,  13,  14,  15,
         18,  19,  20,  21,  22,  23,  24,  25,  27,  28,  30,  31,  32,  34,
         36,  38,  40,  41,  42,  43,  44,  45,  46,  47,  48,  49,  50,  51,
         53,  54,  55,  56,  57,  58,  59,  60,  61,  62,  63,  64,  65,  66,
         68,  69,  70,  73,  74,  75,  76,  77,  78,  79,  80,  81,  82,  83,
         84,  85,  86,  87,  89,  90,  91,  93,  94,  95,  96,  97,  98,  99,
        100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114,
        115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
        129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139]), tensor([ 67,   9,  88, 106,  71,  39]), tensor([92, 29, 33, 37, 72, 17]), tensor([10, 35, 26, 16, 52])]
local_to_global: global_batched_seeds_list  [tensor([128,  15, 123,  91, 135,  81, 110,  66,  41,  26,  44,  77,  22,   0,
          7,   9,  57,  99, 100, 103,  51,  39,  13,  30,  75,  84,  19,  64,
         16, 137, 105,  78,  27,  85, 115,  37,  34, 138, 129,  70,  61,  18,
        106,  21, 114,  86,  60, 119, 113,  31,  80,  92,  56, 136,   3, 108,
        131,  17,   2,  32,  28,   1, 116, 104,  23, 124,  96,  49,   6,  40,
         90,  98, 120,  20,  14,  87,  72,  69,  82,  43, 127,  29,   5,  35,
        126,   4,  97,  67, 134,   8, 117,  79,  68,  47,  42,  10,  83,  38,
         58, 130, 125, 112,  71, 132, 101,  25,  54,  52,  62,  53,  45, 111,
         11,  46,  12, 107,  24,  76, 121,  63, 122,  50,  93]), tensor([139,  48,  94, 133,  89,  73]), tensor([ 59,  74,  36, 109,  88,  55]), tensor([ 33,  65,  95, 102, 118])]
partition total batch output list spend :  0.021895647048950195
self.buckets_partition() spend  sec:  0.012161731719970703
bucketing dataloader: layer  0
bucketing dataloader: the number of batches:  4
bucketing dataloader: global_batched_output_nid_list  [tensor([128,  15, 123,  91, 135,  81, 110,  66,  41,  26,  44,  77,  22,   0,
          7,   9,  57,  99, 100, 103,  51,  39,  13,  30,  75,  84,  19,  64,
         16, 137, 105,  78,  27,  85, 115,  37,  34, 138, 129,  70,  61,  18,
        106,  21, 114,  86,  60, 119, 113,  31,  80,  92,  56, 136,   3, 108,
        131,  17,   2,  32,  28,   1, 116, 104,  23, 124,  96,  49,   6,  40,
         90,  98, 120,  20,  14,  87,  72,  69,  82,  43, 127,  29,   5,  35,
        126,   4,  97,  67, 134,   8, 117,  79,  68,  47,  42,  10,  83,  38,
         58, 130, 125, 112,  71, 132, 101,  25,  54,  52,  62,  53,  45, 111,
         11,  46,  12, 107,  24,  76, 121,  63, 122,  50,  93]), tensor([139,  48,  94, 133,  89,  73]), tensor([ 59,  74,  36, 109,  88,  55]), tensor([ 33,  65,  95, 102, 118])]
check_connections_block*********************************
connection check : local_output_nid  [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 34, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139]
connection check : local_output_nid  [9, 39, 67, 71, 88, 106]
connection check : local_output_nid  [17, 29, 33, 37, 72, 92]
connection check : local_output_nid  [10, 16, 26, 35, 52]

block_gen_time in "generate_blocks_for_one_layer_block"  0.007510662078857422

bucketing dataloader: global src_list  [tensor([ 128,   15,  123,   91,  135,   81,  110,   66,   41,   26,   44,   77,
          22,    0,    7,    9,   57,   99,  100,  103,   51,   39,   13,   30,
          75,   84,   19,   64,   16,  137,  105,   78,   27,   85,  115,   37,
          34,  138,  129,   70,   61,   18,  106,   21,  114,   86,   60,  119,
         113,   31,   80,   92,   56,  136,    3,  108,  131,   17,    2,   32,
          28,    1,  116,  104,   23,  124,   96,   49,    6,   40,   90,   98,
         120,   20,   14,   87,   72,   69,   82,   43,  127,   29,    5,   35,
         126,    4,   97,   67,  134,    8,  117,   79,   68,   47,   42,   10,
          83,   38,   58,  130,  125,  112,   71,  132,  101,   25,   54,   52,
          62,   53,   45,  111,   11,   46,   12,  107,   24,   76,  121,   63,
         122,   50,   93,  233,  370,  392, 2270, 1090, 1093, 1271, 2367, 2455,
        2604,  330, 1046, 2001, 2122, 2123, 2380, 2095, 2144,  347,  423,  527,
        2180,  567, 1161, 1262, 1599, 2279, 2631,  175,  596,  644, 1914, 2454,
        1582, 2624, 2701,  659, 1803, 1234, 1702, 1703, 2238,  633, 1862, 2582,
         208,  723, 2614, 2418, 1602, 2056,  139,  306,  484,  608, 1775, 1790,
         457,  710, 1392, 2213, 2214, 2215, 1349, 1522, 1532, 1634, 1965, 2357,
        1701, 1810,  697,  738, 1358, 1416, 2162, 2343,  583, 2222, 2223, 2224,
        2225,  284, 2226, 1939, 1209, 1737, 2616,  970, 1632, 2444, 2642, 2329,
        2504,   59, 1721, 2476, 2651, 1219, 1329, 1418,  606, 2360, 2578, 1065,
        2487, 2488,  973, 1190, 2427,  236, 1776,  441,  701, 2184, 1080, 1309,
        2312, 1560, 1786, 2082, 2145, 2461, 1043, 2310,  610, 2288, 2506,  429,
        1336, 2034, 2295,   55, 1527,  379,  646, 1537, 1549, 1901, 1959,  540,
         747, 1884, 1594,  257, 1117, 2049,  898, 1836,  412,  447, 1616, 1849,
         831, 2544, 1647, 2157, 2209,  834, 2169,  927, 1315, 1316, 2140,  332,
        1454, 1666, 1986,  279,  518, 1850, 1973, 1687,  652,  654, 1076, 1501,
         401,  864, 2210, 2159,  109, 1367, 1622, 2478, 2217,  373, 1042,  507,
         866, 1364,  155,  156,  817, 1521,  483,  514,  816, 1842, 2405, 1072,
        2269, 2374, 2375,  158, 2075, 2077, 2668,  842, 2164, 1103,  604, 1013,
        1351, 1920, 1926, 2189, 1138,  152,  963, 1530, 1653, 2399, 2400, 2645,
        1629, 1659, 2546,  895, 1296, 1913, 1551, 1623, 2045, 2079, 1016, 1256,
        1761, 2175, 2176,  661, 1353,  282, 2628,  406,  269,  281, 1996,  259,
        2537,  603, 2097,  391,  163, 1579, 1372,  476, 2545, 1520, 2581,  862,
         863, 1160, 1715,   88, 1982, 2017,  458, 2363,  487, 2080,  206, 2691,
         479,  904, 1022, 1589, 1301, 1344, 2011, 2317,  767, 1139, 1467, 2053,
        2172, 2182,  485, 1739,  733, 2303, 2667,  758, 1169, 1762, 2492, 2643,
        1655, 1839, 1604, 2366, 1001, 1318, 2661, 2662,  541,  971, 1113, 1650,
         201,  598, 1636, 2139, 2141, 2018, 2178,  589,  802,  980, 1158, 1910,
        2251, 2252, 1322, 1441,  550,  950, 1495, 2151]), tensor([ 139,   48,   94,  133,   89,   73,   18,  103,  306,  660,  910, 1623,
        1780, 2045,  598,  714, 1031, 1662, 1666, 2041, 2205, 2206, 2471,  195,
         586,  675,  733,  934, 1649, 1966, 2263, 2355, 2357, 2490,  109,  399,
         452, 1670, 1777, 1784, 2082,  258,  884, 1087, 1094, 1157, 1401, 1530,
        1585, 1653, 2463,  449,  558,  797,  876, 1035, 1136, 1189, 1214, 1358,
        1723, 1745, 1751]), tensor([  59,   74,   36,  109,   88,   55,  105,  580,  609,  615, 1067, 1287,
        1358, 1627, 1725, 2651,  544,  586, 1042, 1118, 1416, 1517, 2052, 2155,
        2419, 1146, 1505, 1552, 1640, 1781, 2094, 2106, 2107, 1337, 2092, 1805,
        1772,  124, 1624,  318, 2093, 1787, 1045,  289,  306,  563, 1346, 1789,
         426, 1779, 1661,  153, 1785,  133,  102, 1998, 1769, 2015, 1309, 1174,
         841, 1713, 2013, 2010, 1677, 1494,  498, 1732, 2014,  162, 1658, 2011,
         130, 2012,  300, 1908,  696, 2394, 1288, 1741,  415, 2178,   60,  210,
         323,  651,  771,  787,  815, 1079, 1156, 1983, 2020, 2021]), tensor([  33,   65,   95,  102,  118,  286,  588,  698,  911, 1051, 2040, 2119,
        2120, 2121,  239,  543,  619,  771, 1156, 1293, 1628, 2021, 2418, 2419,
         334,  456,  693,  734,  736,  861, 1303, 1535, 1580, 1602, 1838, 2054,
        2074, 2181, 2182, 2183, 2197, 2199, 2200, 2201,  109, 1251, 1448, 1561,
        1623, 1871, 1878, 2256,  255,  388,  446,  454,  554,  581,  842, 1029,
        1343, 1507, 1538, 1616, 1690, 1851, 2010, 2030, 2112, 2165, 2166])]
----------------------------------------
bucketing dataloader: layer  1
bucketing dataloader: num of batch  4
check_connections_block*********************************
connection check : local_output_nid  [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 34, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 219, 220, 221, 208, 222, 223, 9, 172, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 259, 260, 261, 262, 215, 263, 264, 265, 273, 274, 275, 276, 277, 278, 279, 280, 289, 290, 291, 298, 299, 300, 301, 322, 323, 17, 333, 334, 218, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 92, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 370, 406, 407, 408, 409, 410, 411, 421, 422, 423, 424, 425, 426, 427, 428, 328, 429, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 37, 470, 471, 472, 473, 474, 268, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 501, 502, 503, 504, 365, 505, 506, 515, 516, 517, 518, 519, 520, 521, 522, 523, 497, 499, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 175, 177, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 72, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 447, 589, 590, 591, 592, 593, 594, 253, 595, 596, 414, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 324, 617, 618, 619, 620, 456, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633]
connection check : local_output_nid  [9, 39, 67, 71, 88, 106, 51, 23, 172, 173, 174, 175, 176, 177, 324, 325, 326, 327, 328, 329, 330, 331, 332, 412, 267, 413, 414, 415, 416, 417, 418, 419, 239, 420, 37, 430, 431, 432, 433, 434, 357, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 548, 549, 550, 551, 552, 553, 554, 555, 215, 556, 557, 558]
connection check : local_output_nid  [17, 29, 33, 37, 72, 92, 40, 210, 211, 212, 213, 214, 215, 216, 217, 218, 266, 267, 268, 269, 263, 270, 271, 272, 209, 281, 282, 283, 284, 285, 286, 287, 288, 302, 303, 304, 305, 79, 306, 307, 308, 309, 310, 311, 172, 312, 313, 314, 315, 316, 317, 318, 319, 71, 35, 320, 321, 435, 353, 436, 437, 438, 439, 373, 440, 441, 442, 443, 444, 445, 446, 447, 116, 448, 449, 450, 451, 452, 453, 454, 455, 456, 57, 507, 508, 509, 203, 510, 511, 512, 204, 513, 514, 207]
connection check : local_output_nid  [10, 16, 26, 35, 52, 178, 179, 180, 181, 182, 183, 184, 185, 186, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 240, 241, 242, 243, 244, 245, 246, 247, 248, 222, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 37, 292, 293, 294, 175, 295, 296, 297, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377]

block_gen_time in "generate_blocks_for_one_layer_block"  0.009029388427734375

bucketing dataloader: src_list  [tensor([ 128,   15,  123,  ...,  241,  437, 1224]), tensor([ 139,   48,   94,  133,   89,   73,   18,  103,  306,  660,  910, 1623,
        1780, 2045,  598,  714, 1031, 1662, 1666, 2041, 2205, 2206, 2471,  195,
         586,  675,  733,  934, 1649, 1966, 2263, 2355, 2357, 2490,  109,  399,
         452, 1670, 1777, 1784, 2082,  258,  884, 1087, 1094, 1157, 1401, 1530,
        1585, 1653, 2463,  449,  558,  797,  876, 1035, 1136, 1189, 1214, 1358,
        1723, 1745, 1751, 1560, 1786, 2145,  484,  608, 1775, 1790,  554, 2080,
         308, 2086, 1797,  124,  126, 1781,  719,  239,  887, 2085, 1770, 1771,
        1783,  112,  581,  350, 1624, 1773, 2047,  318,  215,  236, 1013, 1772,
        1791,  341, 1875, 1636, 1573,  316,  845, 1870, 2138, 1297,  521,  148,
        1385,  788, 1952, 2381, 2398,    2,   49,  606,  429, 2034, 1951, 2493,
        2424,   74, 1218, 1224, 2155, 2356,  759,  435, 2303,  678, 1818, 2011,
         794,  401, 1160,  463, 1971, 1569,  443, 1702, 1964, 1010, 1703,  946,
        1015,   39, 1846, 1779,  610, 1337,  519,  176, 1785, 1346,  544, 1089,
        1769, 2107, 1258,  303,  426, 2143, 1072, 2096,  963, 1153, 1240, 2645,
         152, 2434, 1369, 1443, 2240,  761,   43, 2464,  340,  584, 1280, 1834,
        2581, 1706, 2585,  800, 1833, 2359,  834, 2168, 2584,  915, 1433, 1486,
        1740, 1801, 2554,  337, 1199, 1499, 1716, 1739, 1238, 1720, 1721,  853,
         501, 1766,  823, 1725,  565,  768, 1724, 1589, 2596, 1426]), tensor([  59,   74,   36,  109,   88,   55,  105,  580,  609,  615, 1067, 1287,
        1358, 1627, 1725, 2651,  544,  586, 1042, 1118, 1416, 1517, 2052, 2155,
        2419, 1146, 1505, 1552, 1640, 1781, 2094, 2106, 2107, 1337, 2092, 1805,
        1772,  124, 1624,  318, 2093, 1787, 1045,  289,  306,  563, 1346, 1789,
         426, 1779, 1661,  153, 1785,  133,  102, 1998, 1769, 2015, 1309, 1174,
         841, 1713, 2013, 2010, 1677, 1494,  498, 1732, 2014,  162, 1658, 2011,
         130, 2012,  300, 1908,  696, 2394, 1288, 1741,  415, 2178,   60,  210,
         323,  651,  771,  787,  815, 1079, 1156, 1983, 2020, 2021,  610,  519,
         176, 1721, 2476,  744, 1742, 1758, 1765, 2444, 2445,  534,  883, 1041,
        2446, 2447, 2448, 2443,  170,  936, 1216, 1830, 2307,  481, 1164, 1739,
        1238, 1720,  853,  501, 1766,  823, 1745, 1229, 1308, 1740, 2597, 2334,
        1712, 1070,  628,  557, 2413,  399,  456, 1580, 2199, 2347,   94, 1218,
        1224, 1628, 1925, 2051, 1047,  624,  485, 1926, 2073, 1481, 2333,   61,
        1468, 1924,  149, 1602,    6,   30, 1008,  718,  749, 1203, 2153, 1152,
         993, 2293, 1535, 1143,  280,   65,  497, 1848, 1506, 2254, 1072, 1788,
        2086, 1801,  330,  773,  530, 1089, 1778, 2591,  350, 1623,  441, 1701,
        2045,  556,  487, 1564, 1782, 1367, 1622, 2478,  887, 1786,  589, 1196,
        1705,  384,  317,  741,  831, 1810, 2143,  661, 1571, 1773, 1722,  554,
         910, 2080,  308, 1797,  126,  719, 1670, 1015, 1618, 1777,  505, 2318,
         454, 1013, 1851,  236,  459,  808,  963,  452, 1784, 2082, 1251, 1448,
        1561, 1871, 1878, 2256,  191,  695, 1197, 1986, 2326, 2071, 1625, 2102,
         851,  995, 1912, 2034, 1696, 1898,  471,  118,  161, 2016,  436,  897,
         356,  437, 1652,  748, 1566, 1268, 1667, 2018,   25,  733, 1982, 2017,
         272,  634,  211, 1178, 1474, 1529,  277,  571, 1570, 1085,  504, 2228,
        2395,  600, 2396, 2397, 1027,  724, 1396, 2593,  525, 1847,  818, 2182,
        1644,  204,   76,  737, 1979, 2024,   37, 1527,  164, 1614, 1626, 1671,
        1905, 1906, 1907, 2309, 2022,  885, 1984, 2023, 2156, 1080,  325,  438,
        1344, 1914,  239, 2418]), tensor([  33,   65,   95,  102,  118,  286,  588,  698,  911, 1051, 2040, 2119,
        2120, 2121,  239,  543,  619,  771, 1156, 1293, 1628, 2021, 2418, 2419,
         334,  456,  693,  734,  736,  861, 1303, 1535, 1580, 1602, 1838, 2054,
        2074, 2181, 2182, 2183, 2197, 2199, 2200, 2201,  109, 1251, 1448, 1561,
        1623, 1871, 1878, 2256,  255,  388,  446,  454,  554,  581,  842, 1029,
        1343, 1507, 1538, 1616, 1690, 1851, 2010, 2030, 2112, 2165, 2166,  442,
        2383, 1015,  893, 1534, 2376, 2122, 2034,  218,  665, 2637, 2001,  910,
        1069, 1909, 1274, 1220,  887,  984,   55, 1080,  897, 1013, 2053, 2057,
        2056, 1117, 1139,  525,  597,   57,  572,   74,  497, 1848,  142,  544,
         667, 2347, 2472,  763, 2108, 2277, 1841,  751, 1006,  964, 2202, 1388,
        1631, 1397, 2068, 2330,  746,  979, 1026, 2163,  280, 1351, 1916, 2155,
        2293, 1892,    6,  100,  315, 1204, 1416, 2072, 2073, 2219, 1042, 1540,
        2133, 2196, 2233, 2131, 1285, 2232, 2231,   52,  415, 2198, 2180,  965,
         680,  731,  901, 2186,  552, 1772, 1779,  610, 1337,  519, 1624,  176,
         124, 1785, 1346,  306,  505, 2045, 1770, 1771, 1784, 1783,  112,  660,
         608,  350,  228,  417, 1701,  661, 1266, 1899, 2497,  903,  441, 2188,
        2022, 1917, 2190, 1441,  973, 2189,  685, 1792,   87,  161, 2016,  836,
        1645, 2316,  989, 2436,  643,  747, 1131, 1133, 1500, 1842, 2185,   56,
         412,  447,  539, 1402, 1849, 2050, 1224, 1661, 2485,   88,  711,  279])]
block collection to dataloader spend  7.152557373046875e-06
step  0
----------------------------------------before batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.27582263946533203  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.457913875579834  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

----------------------------------------after loss function
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.457913875579834  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

step  1
----------------------------------------before batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.2711167335510254  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.3006916046142578  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

----------------------------------------after loss function
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.3006925582885742  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

step  2
----------------------------------------before batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.2715749740600586  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.31680965423583984  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

----------------------------------------after loss function
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.31681060791015625  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

step  3
----------------------------------------before batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.27112245559692383  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

----------------------------------------after batch_pred = model(blocks, batch_inputs)
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.3054795265197754  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

----------------------------------------after loss function
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.3054804801940918  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

----------------------------------------after optimizer
 Nvidia-smi: 2.126953125 GB
    Memory Allocated: 0.2711296081542969  GigaBytes
Max Memory Allocated: 0.5681796073913574  GigaBytes

----------------------------------------------------------pseudo_mini_loss sum 1.8654701709747314
pure train time :  0.3028438091278076
train time :  0.3644592761993408
end to end time :  0.4258112907409668
connection check time:  0.011003494262695312
block generation time  0.016540050506591797
end to end time  0.45116496086120605
Total (block generation + training)time/epoch 0.45116496086120605
pure train time per /epoch  [0.6642258167266846, 0.2984437942504883, 0.28159379959106445, 0.2964460849761963, 0.3028438091278076]
pure train time average  0.29964494705200195
input num list  [1822, 1859, 1848, 1870, 1849]
